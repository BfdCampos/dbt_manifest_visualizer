{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v11.json", "dbt_version": "1.7.1", "generated_at": "2023-11-08T03:30:05.159155Z", "invocation_id": "2e05a54e-0bfa-4259-8a31-057a0f8a8cdb", "env": {}, "project_name": "mattermost_analytics", "project_id": "57f26b7779a79646fc78fd9dc0f7b2bc", "user_id": "f0318177-2711-4b0e-ba79-719cd92e78e0", "send_anonymous_usage_stats": true, "adapter_type": "duckdb"}, "nodes": {"model.mattermost_analytics.stg_mm_telemetry_rc__performance_events": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_telemetry_rc__performance_events", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_rc/stg_mm_telemetry_rc__performance_events.sql", "original_file_path": "models/staging/mm_telemetry_rc/stg_mm_telemetry_rc__performance_events.sql", "unique_id": "model.mattermost_analytics.stg_mm_telemetry_rc__performance_events", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "stg_mm_telemetry_rc__performance_events"], "alias": "stg_mm_telemetry_rc__performance_events", "checksum": {"name": "sha256", "checksum": "87c7e840ded7485783b4ab7dd6689ce26f075dbeb58b97016c5a71a71a6b5657"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `performance_events` table from schema `MM_TELEMETRY_RC` using only columns needed by looker.\n", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "anonymous_id": {"name": "anonymous_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_ip": {"name": "context_ip", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event": {"name": "event", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_text": {"name": "event_text", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel": {"name": "channel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_namespace": {"name": "context_app_namespace", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_actual_id": {"name": "user_actual_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_version": {"name": "context_app_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_actual_role": {"name": "user_actual_role", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_build": {"name": "context_app_build", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_useragent": {"name": "context_useragent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_name": {"name": "context_app_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_locale": {"name": "context_locale", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_screen_density": {"name": "context_screen_density", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duration": {"name": "duration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_of_request": {"name": "num_of_request", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "max_api_resource_size": {"name": "max_api_resource_size", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "longest_api_resource_duration": {"name": "longest_api_resource_duration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count": {"name": "count", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_count": {"name": "request_count", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_telemetry_rc/_mm_telemetry_rc__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.8273659, "relation_name": "\"jaffle_shop\".main.stg_mm_telemetry_rc__performance_events", "raw_code": "{%- set include_columns = [\"channel\", \"context_app_namespace\", \"user_actual_id\"\n, \"context_library_name\", \"type\", \"context_app_version\" , \"user_actual_role\" \n, \"context_app_build\" , \"context_library_version\"\n, \"context_useragent\", \"context_app_name\", \"context_locale\", \"context_screen_density\" \n, \"category\" , \"duration\" , \"num_of_request\", \"max_api_resource_size\"\n, \"longest_api_resource_duration\" , \"user_id\", \"count\", \"request_count\"] -%}\n\nWITH performance_events AS (\n    SELECT\n      {{ get_rudderstack_columns() }}\n        , {% for column in include_columns %}\n        {{ column }} AS {{ column }}\n        {% if not loop.last %},{% endif %}\n    {% endfor %}\n    , timestamp::date as event_date\n    , received_at::date as received_at_date\n    FROM\n      {{ source('mm_telemetry_rc', 'event') }}\n    WHERE CATEGORY = 'performance'\n)\nSELECT * FROM performance_events", "language": "sql", "refs": [], "sources": [["mm_telemetry_rc", "event"]], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_rudderstack_columns"], "nodes": ["source.mattermost_analytics.mm_telemetry_rc.event"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mm_telemetry_rc__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_telemetry_rc__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_rc/stg_mm_telemetry_rc__tracks.sql", "original_file_path": "models/staging/mm_telemetry_rc/stg_mm_telemetry_rc__tracks.sql", "unique_id": "model.mattermost_analytics.stg_mm_telemetry_rc__tracks", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "stg_mm_telemetry_rc__tracks"], "alias": "stg_mm_telemetry_rc__tracks", "checksum": {"name": "sha256", "checksum": "f7c6e0b54200cbb4cd8cac48135274d56a66c405292bab218bb86727de474fdc"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The type of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by RudderStack when the event occured refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_telemetry_rc/_mm_telemetry_rc__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.823064, "relation_name": "\"jaffle_shop\".main.stg_mm_telemetry_rc__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_mm_telemetry_rc__tracks')) }}\n    FROM\n        {{ ref ('base_mm_telemetry_rc__tracks') }}\n)\nSELECT\n     id               AS event_id\n     , event          AS event_table\n     , event_text     AS event_name\n     , category       AS category\n     , type           AS event_type\n     , user_id        AS server_id\n     , user_actual_id AS user_id\n     , received_at    AS received_at\n     , timestamp      AS timestamp\nFROM tracks", "language": "sql", "refs": [{"name": "base_mm_telemetry_rc__tracks", "package": null, "version": null}, {"name": "base_mm_telemetry_rc__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_mm_telemetry_rc__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_mm_telemetry_rc__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_mm_telemetry_rc__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_rc/base/base_mm_telemetry_rc__tracks.sql", "original_file_path": "models/staging/mm_telemetry_rc/base/base_mm_telemetry_rc__tracks.sql", "unique_id": "model.mattermost_analytics.base_mm_telemetry_rc__tracks", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "base", "base_mm_telemetry_rc__tracks"], "alias": "base_mm_telemetry_rc__tracks", "checksum": {"name": "sha256", "checksum": "20a468fc49fb785647246f99fa8015d95150e8ff8ffe06ca84f1d0edd84daacc"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.0577989, "relation_name": "\"jaffle_shop\".main.base_mm_telemetry_rc__tracks", "raw_code": "{%- set relations = get_event_relations('mm_telemetry_rc', database='RAW') -%}\n\n{{\n    dbt_utils.union_relations(\n        relations=relations,\n        include=get_base_event_columns(),\n        source_column_name=None\n    )\n}}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_event_relations", "macro.mattermost_analytics.get_base_event_columns", "macro.dbt_utils.union_relations"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_cws__marketing": {"database": "jaffle_shop", "schema": "main", "name": "stg_cws__marketing", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/cws/stg_cws__marketing.sql", "original_file_path": "models/staging/cws/stg_cws__marketing.sql", "unique_id": "model.mattermost_analytics.stg_cws__marketing", "fqn": ["mattermost_analytics", "staging", "cws", "stg_cws__marketing"], "alias": "stg_cws__marketing", "checksum": {"name": "sha256", "checksum": "c0c5b1031c7e18e4531860495c0d9feccf815e647d17eccceb4410a76dd2de23"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "CWS Marketing data.\n", "columns": {"marketing_id": {"name": "marketing_id", "description": "Unique Identifier for Marketing data.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "The user's email", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "subscribed_content": {"name": "subscribed_content", "description": "The content the user subscribed to.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "The row created time.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "The row updated time.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/cws/_cws__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.912655, "relation_name": "\"jaffle_shop\".main.stg_cws__marketing", "raw_code": "with source as (\n\n    select * from {{ source('cws', 'marketing') }}\n\n),\n\nrenamed as (\n\n    select\n        id as marketing_id,\n\n        -- User info\n        email as email,\n        subscribedcontent as subscribed_content,\n\n        -- Marketing metadata\n        serverid as server_id,\n        to_timestamp(createdat) as created_at,\n        to_timestamp(updatedat) as updated_at\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed", "language": "sql", "refs": [], "sources": [["cws", "marketing"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.cws.marketing"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_cws__trial_requests": {"database": "jaffle_shop", "schema": "main", "name": "stg_cws__trial_requests", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/cws/stg_cws__trial_requests.sql", "original_file_path": "models/staging/cws/stg_cws__trial_requests.sql", "unique_id": "model.mattermost_analytics.stg_cws__trial_requests", "fqn": ["mattermost_analytics", "staging", "cws", "stg_cws__trial_requests"], "alias": "stg_cws__trial_requests", "checksum": {"name": "sha256", "checksum": "17fd5e4243447fab6144157b13b5853be653ae8b6fccb571af45bc94caf87e2e"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Form data for trial requests.\n", "columns": {"trial_request_id": {"name": "trial_request_id", "description": "The trial request's ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "The user's full name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "contact_email": {"name": "contact_email", "description": "The contact's email.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "first_name": {"name": "first_name", "description": "Contact's first name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "last_name": {"name": "last_name", "description": "Contact's last name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "extracted_first_name": {"name": "extracted_first_name", "description": "Contact's first name, as extracted from column name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "extracted_last_name": {"name": "extracted_last_name", "description": "Contact's last name, as extracted from column name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "email": {"name": "email", "description": "The user's email (TBD).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "country_name": {"name": "country_name", "description": "The full name of the country.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_name": {"name": "company_name", "description": "The name of the company.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_size_bucket": {"name": "company_size_bucket", "description": "A script representing the \"bucket\" that this company belongs to (i.e. 1 to 50, 50 to 100 etc).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "site_name": {"name": "site_name", "description": "The name of the site.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "site_url": {"name": "site_url", "description": "The URL of the site.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_users": {"name": "num_users", "description": "The total number of users (TBD).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_at": {"name": "start_at", "description": "Trial start time. Matches form submission time. There's no delay in license generation.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_at": {"name": "end_at", "description": "Trial end time.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_receive_email_accepted": {"name": "is_receive_email_accepted", "description": "Whether the user opted in to receive emails.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_terms_accepted": {"name": "is_terms_accepted", "description": "Whether the user accepted the terms and conditions.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/cws/_cws__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.911665, "relation_name": "\"jaffle_shop\".main.stg_cws__trial_requests", "raw_code": "with source as (\n\n    select * from {{ source('cws', 'trial_requests') }}\n\n),\n\nrenamed as (\n\n    select\n        id as trial_request_id,\n\n        -- User info\n        case\n            when name = '' then null\n            else name\n        end as name,\n        case\n            when contactfirstname = '' then null\n            else contactfirstname\n        end as first_name,\n        case\n            when contactlastname = '' then null\n            else contactlastname\n        end as last_name,\n        -- Attempt to extract first and last name from name.\n        trim(name) as _name,\n        case\n            -- Empty string\n            when _name = '' then null\n            -- A whitespace exists in the string, split it\n            when charindex(' ', _name) > 0 then substring(name, 1, charindex(' ', name) - 1)\n            -- No whitespace, return the full string\n            else _name\n        end as extracted_first_name,\n        case\n            -- Empty string\n            when _name = '' then null\n            -- A whitespace exists\n            when charindex(' ', _name) > 0 then substring(name, charindex(' ', name) + 1, len(name) - charindex(' ', name))\n            -- No whitespace, can't find it\n            else null\n        end as extracted_last_name,\n        email,\n        case\n            when contactemail = '' then null\n            else contactemail\n        end as contact_email,\n\n        -- Company info\n        companycountry as country_name,\n        case\n            when companyname = '' then null\n            else companyname\n        end as company_name,\n        companysize as company_size_bucket,\n\n        -- Installation info\n        serverid as server_id,\n        sitename as site_name,\n        siteurl as site_url,\n        users as num_users,\n\n        -- Trial info\n        startdate as start_at,\n        enddate as end_at,\n        receiveemailsaccepted as is_receive_emails_accepted,\n        termsaccepted as is_terms_accepted\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed\nwhere\n    trial_request_id not in (\n        -- Invalid records\n        'qzd5g81daibrxqfbppoeg1mezo',\n        'uu6zjmatt38wzmhphs57rsbbro',\n        'xchakhn3gfrdmq88m3apa7ht9r',\n        'nx6boyf3zjbctdkdpmdqyqtzeo',\n        's8j1frxu57bfx8x775ijabsnya',\n        'zka8qtk33pfopdh99fwrie6qth',\n        'fuyjomkuw389ux6mq19g7eiw3c',\n        '54mw3kph3iffzcyu7zxjfchgte'\n    )", "language": "sql", "refs": [], "sources": [["cws", "trial_requests"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.cws.trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mm_mobile_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_mobile_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_mobile_prod/stg_mm_mobile_prod__tracks.sql", "original_file_path": "models/staging/mm_mobile_prod/stg_mm_mobile_prod__tracks.sql", "unique_id": "model.mattermost_analytics.stg_mm_mobile_prod__tracks", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "stg_mm_mobile_prod__tracks"], "alias": "stg_mm_mobile_prod__tracks", "checksum": {"name": "sha256", "checksum": "839c908da442337fa20f5044e83c717d600e2bbfd089de5d94ea66018b76348d"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "The type of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_mobile_prod/_mm_mobile_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.962611, "relation_name": "\"jaffle_shop\".main.stg_mm_mobile_prod__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_mm_mobile_prod__tracks')) }}\n    FROM\n        {{ ref ('base_mm_mobile_prod__tracks') }}\n)\nSELECT\n     id               AS event_id\n     , event          AS event_table\n     , event_text     AS event_name\n     , category       AS category\n     , type           AS event_type\n     , user_id        AS server_id\n     , user_actual_id AS user_id\n     , received_at    AS received_at\n     , timestamp      AS timestamp\nFROM tracks", "language": "sql", "refs": [{"name": "base_mm_mobile_prod__tracks", "package": null, "version": null}, {"name": "base_mm_mobile_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_mm_mobile_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_mm_mobile_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_mm_mobile_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_mobile_prod/base/base_mm_mobile_prod__tracks.sql", "original_file_path": "models/staging/mm_mobile_prod/base/base_mm_mobile_prod__tracks.sql", "unique_id": "model.mattermost_analytics.base_mm_mobile_prod__tracks", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "base", "base_mm_mobile_prod__tracks"], "alias": "base_mm_mobile_prod__tracks", "checksum": {"name": "sha256", "checksum": "bd6faf3fae414d385859b327bcc6ef90ecb24397c27d6ce1264f6a2f2e27ddd8"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "snowflake_warehouse": "transform_l"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414206.082658, "relation_name": "\"jaffle_shop\".main.base_mm_mobile_prod__tracks", "raw_code": "{{\n    config({\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\n{{ join_tracks_event_tables('mm_mobile_prod', columns=get_base_event_columns()) }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_base_event_columns", "macro.mattermost_analytics.join_tracks_event_tables"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermost_docs__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermost_docs__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost_docs/stg_mattermost_docs__tracks.sql", "original_file_path": "models/staging/mattermost_docs/stg_mattermost_docs__tracks.sql", "unique_id": "model.mattermost_analytics.stg_mattermost_docs__tracks", "fqn": ["mattermost_analytics", "staging", "mattermost_docs", "stg_mattermost_docs__tracks"], "alias": "stg_mattermost_docs__tracks", "checksum": {"name": "sha256", "checksum": "a0a87468503e5bc5ad0cb4856d5e19a3923528420038c05c962f32ef911a467b"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermost_docs/_mattermost_docs__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.9724119, "relation_name": "\"jaffle_shop\".main.stg_mattermost_docs__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_mattermost_docs__tracks')) }}\n    FROM\n        {{ ref ('base_mattermost_docs__tracks') }}\n)\nSELECT\n     id            AS event_id\n     , event       AS event_table\n     , event_text  AS event_name\n     , user_id     AS user_id\n     , received_at AS received_at\n\nFROM tracks", "language": "sql", "refs": [{"name": "base_mattermost_docs__tracks", "package": null, "version": null}, {"name": "base_mattermost_docs__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_mattermost_docs__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_mattermost_docs__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_mattermost_docs__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost_docs/base/base_mattermost_docs__tracks.sql", "original_file_path": "models/staging/mattermost_docs/base/base_mattermost_docs__tracks.sql", "unique_id": "model.mattermost_analytics.base_mattermost_docs__tracks", "fqn": ["mattermost_analytics", "staging", "mattermost_docs", "base", "base_mattermost_docs__tracks"], "alias": "base_mattermost_docs__tracks", "checksum": {"name": "sha256", "checksum": "d36d702a34bcce1b075cd704b9a553cccf9cafe3aabab3f720bc74aa763e100e"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.094465, "relation_name": "\"jaffle_shop\".main.base_mattermost_docs__tracks", "raw_code": "{{ join_tracks_event_tables('mattermost_docs', columns=get_base_event_columns()) }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_base_event_columns", "macro.mattermost_analytics.join_tracks_event_tables"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mm_plugin_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_plugin_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_plugin_prod/stg_mm_plugin_prod__tracks.sql", "original_file_path": "models/staging/mm_plugin_prod/stg_mm_plugin_prod__tracks.sql", "unique_id": "model.mattermost_analytics.stg_mm_plugin_prod__tracks", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "stg_mm_plugin_prod__tracks"], "alias": "stg_mm_plugin_prod__tracks", "checksum": {"name": "sha256", "checksum": "d0bb862fe1ca7b359a8401f296640d88cfd3b2d80da24e8f7c5e4913a7c24798"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The type of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_plugin_prod/_mm_plugin_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.980128, "relation_name": "\"jaffle_shop\".main.stg_mm_plugin_prod__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_mm_plugin_prod__tracks')) }}\n    FROM\n        {{ ref ('base_mm_plugin_prod__tracks') }}\n)\nSELECT\n     id               AS event_id\n     , event          AS event_table\n     , event_text     AS event_name\n     , type           AS event_type\n     , user_id        AS server_id\n     , user_actual_id AS user_id\n     , received_at    AS received_at\nFROM tracks", "language": "sql", "refs": [{"name": "base_mm_plugin_prod__tracks", "package": null, "version": null}, {"name": "base_mm_plugin_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_mm_plugin_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_mm_plugin_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_mm_plugin_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_plugin_prod/base/base_mm_plugin_prod__tracks.sql", "original_file_path": "models/staging/mm_plugin_prod/base/base_mm_plugin_prod__tracks.sql", "unique_id": "model.mattermost_analytics.base_mm_plugin_prod__tracks", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "base", "base_mm_plugin_prod__tracks"], "alias": "base_mm_plugin_prod__tracks", "checksum": {"name": "sha256", "checksum": "ad8cff75986d89289a34588495a8ce38c56dc3553efbc19bdb0bdc885235a13e"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "snowflake_warehouse": "transform_l"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414206.100799, "relation_name": "\"jaffle_shop\".main.base_mm_plugin_prod__tracks", "raw_code": "{{\n    config({\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\n{{ join_tracks_event_tables('mm_plugin_prod', columns=get_base_event_columns()) }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_base_event_columns", "macro.mattermost_analytics.join_tracks_event_tables"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_portal_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_portal_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/portal_prod/stg_portal_prod__tracks.sql", "original_file_path": "models/staging/portal_prod/stg_portal_prod__tracks.sql", "unique_id": "model.mattermost_analytics.stg_portal_prod__tracks", "fqn": ["mattermost_analytics", "staging", "portal_prod", "stg_portal_prod__tracks"], "alias": "stg_portal_prod__tracks", "checksum": {"name": "sha256", "checksum": "fcde856d4dd56dddf5dc180d0390ebff5cc5b6212e2ac551f7ad4552635512ec"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/portal_prod/_portal_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.980513, "relation_name": "\"jaffle_shop\".main.stg_portal_prod__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_portal_prod__tracks')) }}\n    FROM\n        {{ ref ('base_portal_prod__tracks') }}\n)\nSELECT\n     id                      AS event_id\n     , event                 AS event_table\n     , event_text            AS event_name\n     , category              AS category\n     , user_id               AS user_id\n     , received_at           AS received_at\nFROM\n    tracks", "language": "sql", "refs": [{"name": "base_portal_prod__tracks", "package": null, "version": null}, {"name": "base_portal_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_portal_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_portal_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_portal_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/portal_prod/base/base_portal_prod__tracks.sql", "original_file_path": "models/staging/portal_prod/base/base_portal_prod__tracks.sql", "unique_id": "model.mattermost_analytics.base_portal_prod__tracks", "fqn": ["mattermost_analytics", "staging", "portal_prod", "base", "base_portal_prod__tracks"], "alias": "base_portal_prod__tracks", "checksum": {"name": "sha256", "checksum": "94ee4cec0393caf21ab266260855b9b7dd32df248cd1382a9028f0b1cc062031"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.107297, "relation_name": "\"jaffle_shop\".main.base_portal_prod__tracks", "raw_code": "{{ join_tracks_event_tables('portal_prod', columns=get_base_event_columns()) }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_base_event_columns", "macro.mattermost_analytics.join_tracks_event_tables"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermost_jira__issues": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermost_jira__issues", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost_jira/stg_mattermost_jira__issues.sql", "original_file_path": "models/staging/mattermost_jira/stg_mattermost_jira__issues.sql", "unique_id": "model.mattermost_analytics.stg_mattermost_jira__issues", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "stg_mattermost_jira__issues"], "alias": "stg_mattermost_jira__issues", "checksum": {"name": "sha256", "checksum": "d08e679b2d635cea0d0c80600adf541cf6428d36840c518fd16679667c893c98"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Contains denormalized JIRA issue information. Fields have been extracted from JSON payload. \n", "columns": {"issue_id": {"name": "issue_id", "description": "The issue's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issue_key": {"name": "issue_key", "description": "The issue's key (example MM-12345).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_id": {"name": "project_id", "description": "The project's ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_key": {"name": "project_key", "description": "The project's key.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "summary": {"name": "summary", "description": "The issue's summary.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "The issue's description.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issue_type_id": {"name": "issue_type_id", "description": "The issue's type ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issue_type_name": {"name": "issue_type_name", "description": "The issue's type name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_account_id": {"name": "reporter_account_id", "description": "The id of the reporter of the issue.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_display_name": {"name": "reporter_display_name", "description": "The name of the reporter of the issue.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_account_id": {"name": "creator_account_id", "description": "The id of the creator of the issue.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_display_name": {"name": "creator_display_name", "description": "The name of the creator of the issue.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_id": {"name": "status_id", "description": "The id of the status of the issue.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_name": {"name": "status_name", "description": "The name of the status of the issue.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_category_name": {"name": "status_category_name", "description": "The name of the status' category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_category_key": {"name": "status_category_key", "description": "The key of the status' category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution_id": {"name": "resolution_id", "description": "The id of the issue's resolution.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution_name": {"name": "resolution_name", "description": "The name of the resolution.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "labels": {"name": "labels", "description": "List of labels assigned to the given issue.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fix_versions": {"name": "fix_versions", "description": "List of fix version details.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "Timestamp that the issue was created.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "Timestamp that the issue was last updated.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermost_jira/_mattermost_jira__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.0232608, "relation_name": "\"jaffle_shop\".main.stg_mattermost_jira__issues", "raw_code": "WITH issues AS (\n    SELECT\n        *\n    FROM\n        {{ source('mattermost_jira', 'issues') }}\n)\nSELECT\n    id AS issue_id,\n    key AS issue_key,\n    -- Parent\n    fields:parent.id::INTEGER AS parent_id,\n    fields:parent.key::VARCHAR AS parent_key,\n    -- Project\n    fields:project.id AS project_id,\n    fields:project.key AS project_key,\n    -- Description\n    fields:summary::VARCHAR AS summary,\n    fields:description::VARCHAR AS description,\n    -- Issue type\n    fields:issuetype.id::INTEGER AS issue_type_id,\n    fields:issuetype.name::VARCHAR AS issue_type_name,\n    -- Reporter\n    fields:reporter.accountId::VARCHAR AS reporter_account_id,\n    fields:reporter.displayName::VARCHAR AS reporter_display_name,\n    -- Creator\n    fields:creator.accountId::VARCHAR AS creator_account_id,\n    fields:creator.displayName::VARCHAR AS creator_display_name,\n    -- Status\n    fields:status.id::INTEGER AS status_id,\n    fields:status.name::VARCHAR AS status_name,\n    fields:status.statusCategory.id::INTEGER AS status_category_id,\n    fields:status.statusCategory.name::VARCHAR AS status_category_name,\n    fields:status.statusCategory.key::VARCHAR AS status_category_key,\n    -- Resolution\n    fields:resolution.id::VARCHAR AS resolution_id,\n    fields:resolution.name::VARCHAR AS resolution_name,\n    CONVERT_TIMEZONE('UTC', TO_TIMESTAMP_TZ(fields:resolutiondate::VARCHAR, 'YYYY-MM-DD\"T\"HH24:MI:SS.FFTZHTZM')) AS resolution_date,\n    -- Labels:\n    fields:labels AS labels,\n    -- Fix Version\n    fields:fixVersions AS fix_versions,\n    -- Timestamps\n    CAST(fields:created AS {{ dbt.type_timestamp() }})  AS created_at,\n    CAST(fields:updated AS {{ dbt.type_timestamp() }})  AS updated_at\nFROM\n    issues", "language": "sql", "refs": [], "sources": [["mattermost_jira", "issues"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_timestamp"], "nodes": ["source.mattermost_analytics.mattermost_jira.issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermost_jira__projects": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermost_jira__projects", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost_jira/stg_mattermost_jira__projects.sql", "original_file_path": "models/staging/mattermost_jira/stg_mattermost_jira__projects.sql", "unique_id": "model.mattermost_analytics.stg_mattermost_jira__projects", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "stg_mattermost_jira__projects"], "alias": "stg_mattermost_jira__projects", "checksum": {"name": "sha256", "checksum": "3ba5b9d5566b4b6dea0e3f7e59a471feef352a5a015225a6773b29f4505370b4"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Contains all the known JIRA projects", "columns": {"project_id": {"name": "project_id", "description": "The project's ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_key": {"name": "project_key", "description": "The project's key.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "The project's name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermost_jira/_mattermost_jira__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.023682, "relation_name": "\"jaffle_shop\".main.stg_mattermost_jira__projects", "raw_code": "WITH projects AS (\n    SELECT\n        *\n    FROM\n        {{ source('mattermost_jira', 'projects') }}\n)\nSELECT\n    id AS project_id,\n    key AS project_key,\n    name\nFROM\n    projects", "language": "sql", "refs": [], "sources": [["mattermost_jira", "projects"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.mattermost_jira.projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_incident_response_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_incident_response_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/incident_response_prod/stg_incident_response_prod__tracks.sql", "original_file_path": "models/staging/incident_response_prod/stg_incident_response_prod__tracks.sql", "unique_id": "model.mattermost_analytics.stg_incident_response_prod__tracks", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "stg_incident_response_prod__tracks"], "alias": "stg_incident_response_prod__tracks", "checksum": {"name": "sha256", "checksum": "13cef797effababf4ea90434827a9086a3f6567a341d4b9687e15afb7709a264"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/incident_response_prod/_incident_response_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.0417762, "relation_name": "\"jaffle_shop\".main.stg_incident_response_prod__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_incident_response_prod__tracks')) }}\n    FROM\n        {{ ref ('base_incident_response_prod__tracks') }}\n)\nSELECT\n     id                      AS event_id\n     , event                 AS event_table\n     , event_text            AS event_name\n     , user_id               AS server_id\n     , user_actual_id        AS user_id\n     , received_at           AS received_at\nFROM\n    tracks", "language": "sql", "refs": [{"name": "base_incident_response_prod__tracks", "package": null, "version": null}, {"name": "base_incident_response_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_incident_response_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_incident_response_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_incident_response_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/incident_response_prod/base/base_incident_response_prod__tracks.sql", "original_file_path": "models/staging/incident_response_prod/base/base_incident_response_prod__tracks.sql", "unique_id": "model.mattermost_analytics.base_incident_response_prod__tracks", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "base", "base_incident_response_prod__tracks"], "alias": "base_incident_response_prod__tracks", "checksum": {"name": "sha256", "checksum": "8adf3d8052390dd23e0334809786fe6161e214e32ea5810b2a525d48b969ca2d"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.119618, "relation_name": "\"jaffle_shop\".main.base_incident_response_prod__tracks", "raw_code": "{{ join_tracks_event_tables('incident_response_prod', columns=get_base_event_columns()) }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_base_event_columns", "macro.mattermost_analytics.join_tracks_event_tables"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_diagnostics__log_entries": {"database": "jaffle_shop", "schema": "main", "name": "stg_diagnostics__log_entries", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/diagnostics/stg_diagnostics__log_entries.sql", "original_file_path": "models/staging/diagnostics/stg_diagnostics__log_entries.sql", "unique_id": "model.mattermost_analytics.stg_diagnostics__log_entries", "fqn": ["mattermost_analytics", "staging", "diagnostics", "stg_diagnostics__log_entries"], "alias": "stg_diagnostics__log_entries", "checksum": {"name": "sha256", "checksum": "059652b4a40bc9c79e920e98ef809e49579a5d76726eb909c1ee5ff2cd66dfbb"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Log entries from security update service. Excludes servers that report only a single day of activity.\n", "columns": {"log_date": {"name": "log_date", "description": "The date of the log entry.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "log_at": {"name": "log_at", "description": "The timestamp of the log entry.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "edge": {"name": "edge", "description": "The edge location that served the request.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_ip": {"name": "server_ip", "description": "The IP of the server that performed the request.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The id of the server that performed the request.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_full": {"name": "version_full", "description": "The full version string of the server's semver.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major version of the server at the time the event was submitted/", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor version of the server at the time the event was submitted/", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_patch": {"name": "version_patch", "description": "The patch version of the server at the time the event was submitted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_enterprise_ready": {"name": "is_enterprise_ready", "description": "Whether this is an enterprise ready build.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "The operating system that the server runs on.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type": {"name": "database_type", "description": "The name of the database used by the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_users": {"name": "count_users", "description": "Total number of users in the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_teams": {"name": "count_teams", "description": "Total number of teams in the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_active_users": {"name": "count_active_users", "description": "Total number of active users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_run_unit_tests": {"name": "has_run_unit_tests", "description": "Whether this server was used to run unit tests.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_custom_build_version_format": {"name": "is_custom_build_version_format", "description": "Whether the build number indicates a custom build (dev, test, branch etc).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/diagnostics/_diagnostics__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.0484538, "relation_name": "\"jaffle_shop\".main.stg_diagnostics__log_entries", "raw_code": "with source as (\n\n    select * from {{ source('diagnostics', 'log_entries') }}\n\n),\n\nrenamed as (\n    select\n        to_date(logdate) as log_date,\n        to_timestamp(logdate|| ' ' || logtime) as log_at,\n        edge,\n        cip as server_ip,\n        -- Temporarily enable\n        cs_uri_query,\n        mattermost_analytics.parse_qs(cs_uri_query) as _parsed_cs_uri_query,\n        _parsed_cs_uri_query:id::varchar as server_id,\n        _parsed_cs_uri_query:b::varchar as _security_build,\n        split_part(_security_build, '.', 1) as version_major,\n        split_part(_security_build, '.', 2) as version_minor,\n        split_part(_security_build, '.', 3) as version_patch,\n        version_major || '.' || version_minor || '.' || version_patch as version_full,\n        _parsed_cs_uri_query:be::varchar = 'true' as is_enterprise_ready,\n        _parsed_cs_uri_query:db::varchar as database_type,\n        _parsed_cs_uri_query:os::varchar as operating_system,\n        _parsed_cs_uri_query:uc::int as count_users,\n        _parsed_cs_uri_query:tc::int as count_teams,\n        _parsed_cs_uri_query:auc::int as count_active_users,\n        _parsed_cs_uri_query:ut::int = 1 as has_run_unit_tests,\n        regexp_substr(\n            _security_build,\n            '^[0-9]{1,2}\\.{1}[0-9]{1,2}\\.{1}[0-9]{1,2}\\.{1}[0-9]{1,2}\\.{1}[0-9]{1,2}\\.{1}[0-9]{1,2}$'\n        ) is null\n        and regexp_substr(\n            _security_build, '^[0-9]{1,2}\\.{1}[0-9]{1,2}\\.{1}[0-9]{1,2}$') is null\n        -- Extra check to properly handle cloud builds\n        and regexp_substr(\n            _security_build,\n            '^[0-9]{1,2}\\.{1}[0-9]{1,2}\\.{1}[0-9]{1,2}\\.cloud-[0-9]{4}-[0-9]{2}-[0-9]{2}-[0-9]+$'\n        ) is null\n        as is_custom_build_version_format\n\n        -- Ignoring these columns as they either have the same value always or there's no value in the data\n        -- bytessent,\n        -- method,\n        -- host,\n        -- uri,\n        -- status,\n        -- creferrer,\n        -- cookie,\n        -- x_edge_result_type,\n        -- x_edge_request_id,\n        -- x_host_header,\n        -- protocol,\n        -- cs_bytes,\n        -- time_taken,\n        -- x_forwarded_for,\n        -- ssl_protocol,\n        -- ssl_cipher,\n        -- x_edge_response_result_type,\n        -- cs_protocol_version,\n        -- file_status,\n        -- file_encrypted_fields\n\n    from source\n\n    where\n        -- Only security endpoint contains useful information. All other requests do not contain useful information\n        URI = '/security'\n        and method = 'GET'\n        -- Keep only requests sent by Mattermost servers\n        and useragent like 'Go-http-client/%'\n        -- Keep only if log data exists\n\n        -- Sanity check\n        and to_date(logdate) <= CURRENT_DATE\n\n)\n\nselect * from renamed", "language": "sql", "refs": [], "sources": [["diagnostics", "log_entries"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.diagnostics.log_entries"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_salesforce__opportunity": {"database": "jaffle_shop", "schema": "main", "name": "stg_salesforce__opportunity", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/salesforce/stg_salesforce__opportunity.sql", "original_file_path": "models/staging/salesforce/stg_salesforce__opportunity.sql", "unique_id": "model.mattermost_analytics.stg_salesforce__opportunity", "fqn": ["mattermost_analytics", "staging", "salesforce", "stg_salesforce__opportunity"], "alias": "stg_salesforce__opportunity", "checksum": {"name": "sha256", "checksum": "8987c390e5b70aa513037a94d718de6379368a1e2774ae3666525270a4075c7c"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Opportunities track sales and pending deals.\nExcludes deleted opportunities.\n", "columns": {"opportunity_id": {"name": "opportunity_id", "description": "The opportunity's ID, as defined by Salesforce", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "close_at": {"name": "close_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contract_id": {"name": "contract_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expected_revenue": {"name": "expected_revenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecast_category": {"name": "forecast_category", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecast_category_name": {"name": "forecast_category_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_closed": {"name": "is_closed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_won": {"name": "is_won", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_by_id": {"name": "last_modified_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_at": {"name": "last_modified_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "next_step": {"name": "next_step", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "onwer_id": {"name": "onwer_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricebook2_id": {"name": "pricebook2_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "probability": {"name": "probability", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage_name": {"name": "stage_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_modstamp_at": {"name": "system_modstamp_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_licenses__c": {"name": "active_licenses__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additional_environment_details__c": {"name": "additional_environment_details__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_in_commit__c": {"name": "amount_in_commit__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_in_pipeline__c": {"name": "amount_in_pipeline__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "available_renewal__c": {"name": "available_renewal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_city__c": {"name": "billing_city__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_country__c": {"name": "billing_country__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_country_code__c": {"name": "billing_country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_partner_name__c": {"name": "billing_partner_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_state_province__c": {"name": "billing_state_province__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_street__c": {"name": "billing_street__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_zip_postal_code__c": {"name": "billing_zip_postal_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ce_owner__c": {"name": "ce_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closed_lost_other__c": {"name": "closed_lost_other__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "compelling_event__c": {"name": "compelling_event__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "competitor__c": {"name": "competitor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contract_finalized__c": {"name": "contract_finalized__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_role__c": {"name": "created_by_role__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cs_qualified_lead__c": {"name": "cs_qualified_lead__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_override__c": {"name": "csm_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_owner__c": {"name": "csm_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_identitiy_provider_sso__c": {"name": "current_identitiy_provider_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_identity_provider_sso__c": {"name": "current_identity_provider_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_productivity_platform__c": {"name": "current_productivity_platform__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "data_migration_required__c": {"name": "data_migration_required__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "days_past_renewal__c": {"name": "days_past_renewal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "decision_criteria_process__c": {"name": "decision_criteria_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delta_amount__c": {"name": "delta_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "e_purchase_date__c": {"name": "e_purchase_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emm_mdm__c": {"name": "emm_mdm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_customer_po_number__c": {"name": "end_customer_po_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ending_arr__c": {"name": "ending_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enterprise_trial_completed__c": {"name": "enterprise_trial_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_chat_solution__c": {"name": "existing_chat_solution__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_chat_solution_details__c": {"name": "existing_chat_solution_details__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expansion_type__c": {"name": "expansion_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extended_support_release_customer__c": {"name": "extended_support_release_customer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecast_category_custom__c": {"name": "forecast_category_custom__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gtm_save_motions__c": {"name": "gtm_save_motions__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "how_did_you_hear_about_mattermost__c": {"name": "how_did_you_hear_about_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "infosec_questionnaire_completed__c": {"name": "infosec_questionnaire_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_number__c": {"name": "invoice_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_created_date__c": {"name": "lead_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail__c": {"name": "lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail_upon_conversion__c": {"name": "lead_source_detail_upon_conversion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_text__c": {"name": "lead_source_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_upon_conversion__c": {"name": "lead_source_upon_conversion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_type__c": {"name": "lead_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadid__c": {"name": "leadid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_active__c": {"name": "license_active__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_contract_sent__c": {"name": "license_contract_sent__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_end_date__c": {"name": "license_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_key__c": {"name": "license_key__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_key_sent_date__c": {"name": "license_key_sent_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_quantity__c": {"name": "license_quantity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_start_date__c": {"name": "license_start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lost_reason__c": {"name": "lost_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lost_to_competitor__c": {"name": "lost_to_competitor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobile_in_scope__c": {"name": "mobile_in_scope__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql_date__c": {"name": "mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql_reason__c": {"name": "mql_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_expansion_total__c": {"name": "new_expansion_total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_logo__c": {"name": "new_logo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "open_source_user__c": {"name": "open_source_user__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opp_line_items_products__c": {"name": "opp_line_items_products__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opp_products__c": {"name": "opp_products__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type__c": {"name": "order_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity__c": {"name": "original_opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_amount__c": {"name": "original_opportunity_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_arr__c": {"name": "original_opportunity_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_end_date__c": {"name": "original_opportunity_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_id__c": {"name": "original_opportunity_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_length_in_months__c": {"name": "original_opportunity_length_in_months__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunityid__c": {"name": "original_opportunityid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "other_integrations__c": {"name": "other_integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "override_total_net_new_arr__c": {"name": "override_total_net_new_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paper_trail_process__c": {"name": "paper_trail_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_name__c": {"name": "partner_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product__c": {"name": "product__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "regulatory_requirements__c": {"name": "regulatory_requirements__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_amount_total__c": {"name": "renewal_amount_total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_created_date__c": {"name": "renewal_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_includes_leftover_expansion__c": {"name": "renewal_includes_leftover_expansion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opp_arr__c": {"name": "renewed_by_opp_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opp_prob__c": {"name": "renewed_by_opp_prob__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opportunity_id__c": {"name": "renewed_by_opportunity_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requirements__c": {"name": "requirements__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "risks__c": {"name": "risks__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__contracted__c": {"name": "sbqq__contracted__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__primaryquote__c": {"name": "sbqq__primaryquote__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self_service_enabled__c": {"name": "self_service_enabled__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_city__c": {"name": "shipping_city__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_country__c": {"name": "shipping_country__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_country_code__c": {"name": "shipping_country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_state_province__c": {"name": "shipping_state_province__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_street__c": {"name": "shipping_street__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_zip_postal_code__c": {"name": "shipping_zip_postal_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage_before_closed_lost__c": {"name": "stage_before_closed_lost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage_change_date__c": {"name": "stage_change_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_wlo__c": {"name": "status_wlo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stripe_id__c": {"name": "stripe_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subs_id__c": {"name": "subs_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_external_email__c": {"name": "suppress_external_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_internal_email__c": {"name": "suppress_internal_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_renewal_process__c": {"name": "suppress_renewal_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_go_live_date__c": {"name": "target_go_live_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_integrations__c": {"name": "target_integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_segment__c": {"name": "territory_segment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "time_in_stage__c": {"name": "time_in_stage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_net_new_arr__c": {"name": "total_net_new_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_net_new_arr_with_override__c": {"name": "total_net_new_arr_with_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_license_id__c": {"name": "trial_license_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "use_case__c": {"name": "use_case__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/salesforce/_salesforce__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.0972931, "relation_name": "\"jaffle_shop\".main.stg_salesforce__opportunity", "raw_code": "with source as (\n\n    select * from {{ source('salesforce', 'opportunity') }}\n\n),\n\nrenamed as (\n\n    select\n        id as opportunity_id,\n\n        -- Foreign keys\n        accountid as account_id,\n        campaignid as campaign_id,\n        contractid as contract_id,\n        createdbyid as created_by_id,\n        lastmodifiedbyid as last_modified_by_id,\n        ownerid as owner_id,\n        pricebook2id as pricebook2_id,\n\n        -- Context\n        name,\n        type,\n\n        -- Pipeline\n        probability,\n        expectedrevenue as expected_revenue,\n        forecastcategory as forecast_category,\n        forecastcategoryname as forecast_category_name,\n        closedate as close_at,\n        isclosed as is_closed,\n        iswon as is_won,\n        nextstep as next_step,\n        stagename as stage_name,\n\n        -- Accounting\n        amount,\n\n        -- Metadata\n        createddate as created_at,\n        isdeleted as is_deleted,\n        lastmodifieddate as last_modified_at,\n        systemmodstamp as system_modstamp_at,\n\n        -- Custom columns\n        active_licenses__c,\n        additional_environment_details__c,\n        amount_in_commit__c,\n        amount_in_pipeline__c,\n        available_renewal__c,\n        billing_city__c,\n        billing_country__c,\n        billing_country_code__c,\n        billing_partner_name__c,\n        billing_state_province__c,\n        billing_street__c,\n        billing_zip_postal_code__c,\n        ce_owner__c,\n        closed_lost_other__c,\n        compelling_event__c,\n        competitor__c,\n        contract_finalized__c,\n        created_by_role__c,\n        cs_qualified_lead__c,\n        csm_override__c,\n        csm_owner__c,\n        current_identitiy_provider_sso__c,\n        current_identity_provider_sso__c,\n        current_productivity_platform__c,\n        data_migration_required__c,\n        days_past_renewal__c,\n        decision_criteria_process__c,\n        delta_amount__c,\n        dwh_external_id__c,\n        e_purchase_date__c,\n        emm_mdm__c,\n        end_customer_po_number__c,\n        ending_arr__c,\n        enterprise_trial_completed__c,\n        existing_chat_solution__c,\n        existing_chat_solution_details__c,\n        expansion_type__c,\n        extended_support_release_customer__c,\n        forecast_category_custom__c,\n        geo__c,\n        gtm_save_motions__c,\n        how_did_you_hear_about_mattermost__c,\n        infosec_questionnaire_completed__c,\n        invoice_number__c,\n        lead_created_date__c,\n        lead_source_detail__c,\n        lead_source_detail_upon_conversion__c,\n        lead_source_text__c,\n        lead_source_upon_conversion__c,\n        lead_type__c,\n        leadid__c,\n        license_active__c,\n        license_contract_sent__c,\n        license_end_date__c,\n        license_key__c,\n        license_key_sent_date__c,\n        license_quantity__c,\n        license_start_date__c,\n        lost_reason__c,\n        lost_to_competitor__c,\n        mobile_in_scope__c,\n        mql_date__c,\n        mql_reason__c,\n        new_expansion_total__c,\n        new_logo__c,\n        open_source_user__c,\n        opp_line_items_products__c,\n        opp_products__c,\n        order_type__c,\n        original_opportunity__c,\n        original_opportunity_amount__c,\n        original_opportunity_arr__c,\n        original_opportunity_end_date__c,\n        original_opportunity_id__c,\n        original_opportunity_length_in_months__c,\n        original_opportunityid__c,\n        other_integrations__c,\n        override_total_net_new_arr__c,\n        paper_trail_process__c,\n        partner_name__c,\n        product__c,\n        regulatory_requirements__c,\n        renewal_amount_total__c,\n        renewal_created_date__c,\n        renewal_includes_leftover_expansion__c,\n        renewed_by_opp_arr__c,\n        renewed_by_opp_prob__c,\n        renewed_by_opportunity_id__c,\n        requirements__c,\n        risks__c,\n        sbqq__contracted__c,\n        sbqq__primaryquote__c,\n        self_service_enabled__c,\n        shipping_city__c,\n        shipping_country__c,\n        shipping_country_code__c,\n        shipping_state_province__c,\n        shipping_street__c,\n        shipping_zip_postal_code__c,\n        stage_before_closed_lost__c,\n        stage_change_date__c,\n        status_wlo__c,\n        stripe_id__c,\n        subs_id__c,\n        suppress_external_email__c,\n        suppress_internal_email__c,\n        suppress_renewal_process__c,\n        target_go_live_date__c,\n        target_integrations__c,\n        territory__c,\n        territory_segment__c,\n        time_in_stage__c,\n        total_net_new_arr__c,\n        total_net_new_arr_with_override__c,\n        trial_license_id__c,\n        use_case__c\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed\nwhere\n    not is_deleted", "language": "sql", "refs": [], "sources": [["salesforce", "opportunity"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.salesforce.opportunity"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_salesforce__campaign": {"database": "jaffle_shop", "schema": "main", "name": "stg_salesforce__campaign", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/salesforce/stg_salesforce__campaign.sql", "original_file_path": "models/staging/salesforce/stg_salesforce__campaign.sql", "unique_id": "model.mattermost_analytics.stg_salesforce__campaign", "fqn": ["mattermost_analytics", "staging", "salesforce", "stg_salesforce__campaign"], "alias": "stg_salesforce__campaign", "checksum": {"name": "sha256", "checksum": "d6ca3464a12c1dd045fa86f079b5cab617a2ccd1658ca869d48caa398201bb15"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Salesforce campaign objects, excluding deleted objects. Represent marketing initiatives, such as an advertisement,\ndirect mail, or conference, that you conduct in order to generate prospects and build brand awareness.\n", "columns": {"campaign_id": {"name": "campaign_id", "description": "The campaign id, as defined by Salesforce", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actual_cost": {"name": "actual_cost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_all_opportunities": {"name": "amount_all_opportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_won_opportunities": {"name": "amount_won_opportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "budgeted_cost": {"name": "budgeted_cost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_at": {"name": "end_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expected_response": {"name": "expected_response", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_actual_cost": {"name": "hierarchy_actual_cost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_amount_all_opportunities": {"name": "hierarchy_amount_all_opportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_amount_won_opportunities": {"name": "hierarchy_amount_won_opportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_budgeted_cost": {"name": "hierarchy_budgeted_cost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_expected_revenue": {"name": "hierarchy_expected_revenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_number_of_contacts": {"name": "hierarchy_number_of_contacts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_number_of_converted_leads": {"name": "hierarchy_number_of_converted_leads", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_number_of_leads": {"name": "hierarchy_number_of_leads", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_number_of_opportunities": {"name": "hierarchy_number_of_opportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_number_of_responses": {"name": "hierarchy_number_of_responses", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_number_of_won_opportunities": {"name": "hierarchy_number_of_won_opportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchy_number_sent": {"name": "hierarchy_number_sent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_by_id": {"name": "last_modified_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_at": {"name": "last_modified_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_contacts": {"name": "number_of_contacts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_converted_leads": {"name": "number_of_converted_leads", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_leads": {"name": "number_of_leads", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_opportunities": {"name": "number_of_opportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_responses": {"name": "number_of_responses", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_won_opportunities": {"name": "number_of_won_opportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_sent": {"name": "number_sent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_id": {"name": "parent_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_at": {"name": "start_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_modstamp_at": {"name": "system_modstamp_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_viewed_at": {"name": "last_viewed_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_referenced_at": {"name": "last_referenced_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expected_revenue": {"name": "expected_revenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_offer_detail__c": {"name": "campaign_offer_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_offer__c": {"name": "campaign_offer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dscorgpkg__suppress_from_discoverorg__c": {"name": "dscorgpkg__suppress_from_discoverorg__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "triggers_mql__c": {"name": "triggers_mql__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/salesforce/_salesforce__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.054513, "relation_name": "\"jaffle_shop\".main.stg_salesforce__campaign", "raw_code": "with source as (\n\n    select * from {{ source('salesforce', 'campaign') }}\n\n),\n\nrenamed as (\n\n    select\n        id as campaign_id,\n\n        -- Foreign keys\n        createdbyid as created_by_id,\n        lastmodifiedbyid as last_modified_by_id,\n        ownerid as owner_id,\n        parentid as parent_id,\n\n        -- Details\n        name,\n        description,\n        status,\n        isactive as is_active,\n        startdate as start_at,\n        enddate as end_at,\n\n        -- Planning\n        numbersent as number_sent,\n        expectedresponse as expected_response,\n        type,\n        budgetedcost as budgeted_cost,\n        actualcost as actual_cost,\n        expectedrevenue as expected_revenue,\n\n        -- Statistics\n        amountallopportunities as amount_all_opportunities,\n        amountwonopportunities as amount_won_opportunities,\n        hierarchyactualcost as hierarchy_actual_cost,\n        hierarchyamountallopportunities as hierarchy_amount_all_opportunities,\n        hierarchyamountwonopportunities as hierarchy_amount_won_opportunities,\n        hierarchybudgetedcost as hierarchy_budgeted_cost,\n        hierarchyexpectedrevenue as hierarchy_expected_revenue,\n        hierarchynumberofcontacts as hierarchy_number_of_contacts,\n        hierarchynumberofconvertedleads as hierarchy_number_of_converted_leads,\n        hierarchynumberofleads as hierarchy_number_of_leads,\n        hierarchynumberofopportunities as hierarchy_number_of_opportunities,\n        hierarchynumberofresponses as hierarchy_number_of_responses,\n        hierarchynumberofwonopportunities as hierarchy_number_of_won_opportunities,\n        hierarchynumbersent as hierarchy_number_sent,\n        numberofcontacts as number_of_contacts,\n        numberofconvertedleads as number_of_converted_leads,\n        numberofleads as number_of_leads,\n        numberofopportunities as number_of_opportunities,\n        numberofresponses as number_of_responses,\n        numberofwonopportunities as number_of_won_opportunities,\n\n        -- Metadata\n        createddate as created_at,\n        isdeleted as is_deleted,\n        lastmodifieddate as last_modified_at,\n        lastvieweddate as last_viewed_at,\n        lastreferenceddate as last_referenced_at,\n        systemmodstamp as system_modstamp_at,\n\n        -- Custom columns\n        campaign_offer_detail__c,\n        campaign_offer__c,\n        dscorgpkg__suppress_from_discoverorg__c,\n        triggers_mql__c\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed\nwhere\n    not is_deleted", "language": "sql", "refs": [], "sources": [["salesforce", "campaign"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.salesforce.campaign"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_salesforce__contact": {"database": "jaffle_shop", "schema": "main", "name": "stg_salesforce__contact", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/salesforce/stg_salesforce__contact.sql", "original_file_path": "models/staging/salesforce/stg_salesforce__contact.sql", "unique_id": "model.mattermost_analytics.stg_salesforce__contact", "fqn": ["mattermost_analytics", "staging", "salesforce", "stg_salesforce__contact"], "alias": "stg_salesforce__contact", "checksum": {"name": "sha256", "checksum": "a68feaf567edd18cbe2774632d1faf8d368d7c55d919e72c1409f5fb05ff30a5"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Contacts are the individuals associated with accounts. Excludes deleted contacts.\n", "columns": {"contact_id": {"name": "contact_id", "description": "The contact's ID, as defined by Salesforce", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "do_not_call": {"name": "do_not_call", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_opted_out_of_email": {"name": "has_opted_out_of_email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_opted_out_of_fax": {"name": "has_opted_out_of_fax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_by_id": {"name": "last_modified_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_at": {"name": "last_modified_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "onwer_id": {"name": "onwer_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_modstamp_at": {"name": "system_modstamp_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clearbit_employee_count__c": {"name": "clearbit_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_type__c": {"name": "company_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_us_inquiry_type__c": {"name": "contact_us_inquiry_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discoverorg_employee_count__c": {"name": "discoverorg_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duplicate_lead_id__c": {"name": "duplicate_lead_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employees__c": {"name": "employees__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_count_override__c": {"name": "employee_count_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_action_detail__c": {"name": "first_action_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_action__c": {"name": "first_action__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel_detail__c": {"name": "first_channel_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel__c": {"name": "first_channel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mcl_date__c": {"name": "first_mcl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mel_date__c": {"name": "first_mel_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mql_date__c": {"name": "first_mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_not_a_lead_date__c": {"name": "first_not_a_lead_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_pql_date__c": {"name": "first_pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_qsc_date__c": {"name": "first_qsc_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_qso_date__c": {"name": "first_qso_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_recycle_date__c": {"name": "first_recycle_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_scl_date__c": {"name": "first_scl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_sdl_date__c": {"name": "first_sdl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "how_did_you_hear_about_mattermost__c": {"name": "how_did_you_hear_about_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail__c": {"name": "lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source__c": {"name": "lead_source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marketing_suspend__c": {"name": "marketing_suspend__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_action_detail__c": {"name": "most_recent_action_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_action__c": {"name": "most_recent_action__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_lead_source_detail__c": {"name": "most_recent_lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_lead_source__c": {"name": "most_recent_lead_source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mcl_date__c": {"name": "most_recent_mcl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mel_date__c": {"name": "most_recent_mel_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mql_date__c": {"name": "most_recent_mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_qsc_date__c": {"name": "most_recent_qsc_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_qso_date__c": {"name": "most_recent_qso_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_recycle_date__c": {"name": "most_recent_recycle_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_scl_date__c": {"name": "most_recent_scl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_sdl_date__c": {"name": "most_recent_sdl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_end_users__c": {"name": "number_of_end_users__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_a_quote_date__c": {"name": "request_a_quote_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_to_contact_us_date__c": {"name": "request_to_contact_us_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tell_us_more_about_how_we_can_help_you__c": {"name": "tell_us_more_about_how_we_can_help_you__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_req_date__c": {"name": "trial_req_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_dns__c": {"name": "cloud_dns__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stripe_customer_id__c": {"name": "stripe_customer_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_pql_date__c": {"name": "most_recent_pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_license_id__c": {"name": "trial_license_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/salesforce/_salesforce__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.068459, "relation_name": "\"jaffle_shop\".main.stg_salesforce__contact", "raw_code": "with source as (\n\n    select * from {{ source('salesforce', 'contact') }}\n\n),\n\nrenamed as (\n\n    select\n        id as contact_id,\n\n        -- Foreign keys\n        accountid as account_id,\n        createdbyid as created_by_id,\n        lastmodifiedbyid as last_modified_by_id,\n        ownerid as owner_id,\n\n        -- Contact details\n        name,\n        firstname as first_name,\n        lastname as last_name,\n        email,\n        donotcall as do_not_call,\n        hasoptedoutofemail as has_opted_out_of_email,\n        hasoptedoutoffax as has_opted_out_of_fax,\n\n        -- Metadata\n        createddate as created_at,\n        isdeleted as is_deleted,\n        lastmodifieddate as last_modified_at,\n        systemmodstamp as system_modstamp_at,\n\n        -- Custom columns\n        clearbit_employee_count__c,\n        company_type__c,\n        contact_us_inquiry_type__c,\n        discoverorg_employee_count__c,\n        duplicate_lead_id__c,\n        dwh_external_id__c,\n        employees__c,\n        employee_count_override__c,\n        first_action_detail__c,\n        first_action__c,\n        first_channel_detail__c,\n        first_channel__c,\n        first_mcl_date__c,\n        first_mel_date__c,\n        first_mql_date__c,\n        first_not_a_lead_date__c,\n        first_pql_date__c,\n        first_qsc_date__c,\n        first_qso_date__c,\n        first_recycle_date__c,\n        first_scl_date__c,\n        first_sdl_date__c,\n        how_did_you_hear_about_mattermost__c,\n        lead_source_detail__c,\n        lead_source__c,\n        marketing_suspend__c,\n        most_recent_action_detail__c,\n        most_recent_action__c,\n        most_recent_lead_source_detail__c,\n        most_recent_lead_source__c,\n        most_recent_mcl_date__c,\n        most_recent_mel_date__c,\n        most_recent_mql_date__c,\n        most_recent_qsc_date__c,\n        most_recent_qso_date__c,\n        most_recent_recycle_date__c,\n        most_recent_scl_date__c,\n        most_recent_sdl_date__c,\n        number_of_end_users__c,\n        request_a_quote_date__c,\n        request_to_contact_us_date__c,\n        tell_us_more_about_how_we_can_help_you__c,\n        trial_req_date__c,\n        cloud_dns__c,\n        stripe_customer_id__c,\n        most_recent_pql_date__c,\n        trial_license_id__c\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed\nwhere\n    not is_deleted", "language": "sql", "refs": [], "sources": [["salesforce", "contact"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.salesforce.contact"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_salesforce__account": {"database": "jaffle_shop", "schema": "main", "name": "stg_salesforce__account", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/salesforce/stg_salesforce__account.sql", "original_file_path": "models/staging/salesforce/stg_salesforce__account.sql", "unique_id": "model.mattermost_analytics.stg_salesforce__account", "fqn": ["mattermost_analytics", "staging", "salesforce", "stg_salesforce__account"], "alias": "stg_salesforce__account", "checksum": {"name": "sha256", "checksum": "764f934bf8dea762831a27c54a5f8ede16eb2fd9a463c9d3b471e91bfd71e1e3"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Represents an Account in SFDC.\n", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_id": {"name": "parent_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "record_type_id": {"name": "record_type_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_by_id": {"name": "last_modified_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "master_record_id": {"name": "master_record_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownership": {"name": "ownership", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rating": {"name": "rating", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "site": {"name": "site", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "annual_revenue": {"name": "annual_revenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "website": {"name": "website", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_employees": {"name": "number_of_employees", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fax": {"name": "fax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "industry": {"name": "industry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_source": {"name": "account_source", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sic": {"name": "sic", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sicdesc": {"name": "sicdesc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticker_symbol": {"name": "ticker_symbol", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_city": {"name": "billing_city", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_country": {"name": "billing_country", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_country_code": {"name": "billing_country_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_latitude": {"name": "billing_latitude", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_longitude": {"name": "billing_longitude", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_postal_code": {"name": "billing_postal_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_state": {"name": "billing_state", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_state_code": {"name": "billing_state_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_street": {"name": "billing_street", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_city": {"name": "shipping_city", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_country": {"name": "shipping_country", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_country_code": {"name": "shipping_country_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_postal_code": {"name": "shipping_postal_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_state": {"name": "shipping_state", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_state_code": {"name": "shipping_state_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_street": {"name": "shipping_street", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_activity_at": {"name": "last_activity_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_at": {"name": "last_modified_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_referenced_at": {"name": "last_referenced_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_viewed_at": {"name": "last_viewed_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_modstamp_at": {"name": "system_modstamp_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cbit__clearbitdomain__c": {"name": "cbit__clearbitdomain__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clearbit_employee_count__c": {"name": "clearbit_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_type__c": {"name": "company_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cosize__c": {"name": "cosize__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_lookup__c": {"name": "csm_lookup__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_override__c": {"name": "csm_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_zd__c": {"name": "csm_zd__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_engineer_zd__c": {"name": "customer_engineer_zd__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_engineer__c": {"name": "customer_engineer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_finance_status__c": {"name": "customer_finance_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_segmentation_tier__c": {"name": "customer_segmentation_tier__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_of_issue__c": {"name": "date_of_issue__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "demo_req_date__c": {"name": "demo_req_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discoverorg_employee_count__c": {"name": "discoverorg_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_count_override__c": {"name": "employee_count_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagio__numberofpeople__c": {"name": "engagio__numberofpeople__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "e_purchase_date__c": {"name": "e_purchase_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_created_date__c": {"name": "first_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_offer__c": {"name": "first_offer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "followup_date__c": {"name": "followup_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "getstarteddate__c": {"name": "getstarteddate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "government__c": {"name": "government__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "health_score__c": {"name": "health_score__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "imported_case_study_note__c": {"name": "imported_case_study_note__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "imported_industry__c": {"name": "imported_industry__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbound_outbound__c": {"name": "inbound_outbound__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreviewed__c": {"name": "lastreviewed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "latest_telemetry_date__c": {"name": "latest_telemetry_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_created_date__c": {"name": "lead_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legally_agreed_to_joint_pr__c": {"name": "legally_agreed_to_joint_pr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legally_agreed_to_pr__c": {"name": "legally_agreed_to_pr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legal_right_for_case_studies__c": {"name": "legal_right_for_case_studies__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "max_closed_won_date__c": {"name": "max_closed_won_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meetingset_date__c": {"name": "meetingset_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "named_account_tier__c": {"name": "named_account_tier__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "named_account__c": {"name": "named_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nda_expiration_date__c": {"name": "nda_expiration_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__celigo_update__c": {"name": "netsuite_conn__celigo_update__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__credit_hold__c": {"name": "netsuite_conn__credit_hold__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__netsuite_id__c": {"name": "netsuite_conn__netsuite_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__netsuite_sync_err__c": {"name": "netsuite_conn__netsuite_sync_err__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__pushed_from_opportunity__c": {"name": "netsuite_conn__pushed_from_opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__push_to_netsuite__c": {"name": "netsuite_conn__push_to_netsuite__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__sync_in_progress__c": {"name": "netsuite_conn__sync_in_progress__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offer_detail__c": {"name": "offer_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offer__c": {"name": "offer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "other_customer_marketing_comment__c": {"name": "other_customer_marketing_comment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "our_champion__c": {"name": "our_champion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_s_parent_acount__c": {"name": "parent_s_parent_acount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region__c": {"name": "region__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_a_quote_date__c": {"name": "request_a_quote_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responded_date__c": {"name": "responded_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_latest__c": {"name": "seats_active_latest__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_mau__c": {"name": "seats_active_mau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_max__c": {"name": "seats_active_max__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_override__c": {"name": "seats_active_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_wau__c": {"name": "seats_active_wau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_licensed__c": {"name": "seats_licensed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_registered__c": {"name": "seats_registered__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seat_utilization__c": {"name": "seat_utilization__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sector__c": {"name": "sector__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_version__c": {"name": "server_version__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "signed_nda__c": {"name": "signed_nda__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sponsor__c": {"name": "sponsor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telemetry_accuracy__c": {"name": "telemetry_accuracy__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territoryid__c": {"name": "territoryid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_area__c": {"name": "territory_area__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_comm_rep__c": {"name": "territory_comm_rep__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_ent_rep__c": {"name": "territory_ent_rep__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_geo__c": {"name": "territory_geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_last_updated__c": {"name": "territory_last_updated__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_region__c": {"name": "territory_region__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_segment__c": {"name": "territory_segment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_sales__c": {"name": "total_sales__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_seats__c": {"name": "total_seats__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_req_date__c": {"name": "trial_req_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "true_up_eligible__c": {"name": "true_up_eligible__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unqualified_date__c": {"name": "unqualified_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_end_date__c": {"name": "account_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_number_int__c": {"name": "account_number_int__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_owner_zd__c": {"name": "account_owner_zd__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_start_date__c": {"name": "account_start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "api_id__c": {"name": "api_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "arr_current__c": {"name": "arr_current__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cleaned_up_website__c": {"name": "cleaned_up_website__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "elasticsearch__c": {"name": "elasticsearch__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "read_only_announcement_channels__c": {"name": "read_only_announcement_channels__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "high_availability_ha__c": {"name": "high_availability_ha__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "saml_sso__c": {"name": "saml_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ldap_group_sync__c": {"name": "ldap_group_sync__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "compliance_custom_data_retention__c": {"name": "compliance_custom_data_retention__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "incident_collaboration__c": {"name": "incident_collaboration__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integrations__c": {"name": "integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sector_picklist__c": {"name": "sector_picklist__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/salesforce/_salesforce__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.1218328, "relation_name": "\"jaffle_shop\".main.stg_salesforce__account", "raw_code": "with source as (\n\n    select * from {{ source('salesforce', 'account') }}\n\n),\n\nrenamed as (\n\n    select\n          id as account_id\n\n        -- Foreign Keys\n        , ownerid as owner_id\n        , parentid as parent_id\n        , createdbyid as created_by_id\n        , recordtypeid as record_type_id\n        , lastmodifiedbyid as last_modified_by_id\n        , masterrecordid as master_record_id\n\n        -- Details\n        , name as name\n        , ownership as ownership\n        , phone as phone\n        , rating as rating\n        , site as site\n        , type as type\n        , annualrevenue as annual_revenue\n        , website as website\n        , numberofemployees as number_of_employees\n        , description as description\n        , fax as fax\n        , industry as industry\n        , isdeleted as is_deleted\n        , accountsource as account_source\n        , sic as sic\n        , sicdesc as sicdesc\n        , tickersymbol as ticker_symbol\n\n        -- Address Details\n        , billingcity as billing_city\n        , billingcountry as billing_country\n        , billingcountrycode as billing_country_code\n        , billinglatitude as billing_latitude\n        , billinglongitude as billing_longitude\n        , billingpostalcode as billing_postal_code\n        , billingstate as billing_state\n        , billingstatecode as billing_state_code\n        , billingstreet as billing_street\n        , shippingcity as shipping_city\n        , shippingcountry as shipping_country\n        , shippingcountrycode as shipping_country_code\n        , shippingpostalcode as shipping_postal_code\n        , shippingstate as shipping_state\n        , shippingstatecode as shipping_state_code\n        , shippingstreet as shipping_street\n\n\n        --Metadata\n        , createddate as created_at\n        , lastactivitydate as last_activity_at\n        , lastmodifieddate as last_modified_at\n        , lastreferenceddate as last_referenced_at\n        , lastvieweddate as last_viewed_at\n\n        , systemmodstamp as system_modstamp_at\n\n\n        --Custom Columns\n        , cbit__clearbitdomain__c as cbit__clearbitdomain__c\n        , clearbit_employee_count__c as clearbit_employee_count__c\n        , company_type__c as company_type__c\n        , cosize__c as cosize__c\n        , csm_lookup__c as csm_lookup__c\n        , csm_override__c as csm_override__c\n        , csm_zd__c as csm_zd__c\n        , customer_engineer_zd__c as customer_engineer_zd__c\n        , customer_engineer__c as customer_engineer__c\n        , customer_finance_status__c as customer_finance_status__c\n        , customer_segmentation_tier__c as customer_segmentation_tier__c\n        , date_of_issue__c as date_of_issue__c\n        , demo_req_date__c as demo_req_date__c\n        , discoverorg_employee_count__c as discoverorg_employee_count__c\n        , dwh_external_id__c as dwh_external_id__c\n        , employee_count_override__c as employee_count_override__c\n        , engagio__numberofpeople__c as engagio__numberofpeople__c\n        , e_purchase_date__c as e_purchase_date__c\n        , first_created_date__c as first_created_date__c\n        , first_offer__c as first_offer__c\n        , followup_date__c as followup_date__c\n        , geo__c as geo__c\n        , getstarteddate__c as getstarteddate__c\n        , government__c as government__c\n        , health_score__c as health_score__c\n        , imported_case_study_note__c as imported_case_study_note__c\n        , imported_industry__c as imported_industry__c\n        , inbound_outbound__c as inbound_outbound__c\n        , lastreviewed__c as lastreviewed__c\n        , latest_telemetry_date__c as latest_telemetry_date__c\n        , lead_created_date__c as lead_created_date__c\n        , legally_agreed_to_joint_pr__c as legally_agreed_to_joint_pr__c\n        , legally_agreed_to_pr__c as legally_agreed_to_pr__c\n        , legal_right_for_case_studies__c as legal_right_for_case_studies__c\n        , max_closed_won_date__c as max_closed_won_date__c\n        , meetingset_date__c as meetingset_date__c\n        , named_account_tier__c as named_account_tier__c\n        , named_account__c as named_account__c\n        , nda_expiration_date__c as nda_expiration_date__c\n        , netsuite_conn__celigo_update__c as netsuite_conn__celigo_update__c\n        , netsuite_conn__credit_hold__c as netsuite_conn__credit_hold__c\n        , netsuite_conn__netsuite_id__c as netsuite_conn__netsuite_id__c\n        , netsuite_conn__netsuite_sync_err__c as netsuite_conn__netsuite_sync_err__c\n        , netsuite_conn__pushed_from_opportunity__c as netsuite_conn__pushed_from_opportunity__c\n        , netsuite_conn__push_to_netsuite__c as netsuite_conn__push_to_netsuite__c\n        , netsuite_conn__sync_in_progress__c as netsuite_conn__sync_in_progress__c\n        , offer_detail__c as offer_detail__c\n        , offer__c as offer__c\n        , other_customer_marketing_comment__c as other_customer_marketing_comment__c\n        , our_champion__c as our_champion__c\n        , parent_s_parent_acount__c as parent_s_parent_acount__c\n        , region__c as region__c\n        , request_a_quote_date__c as request_a_quote_date__c\n        , responded_date__c as responded_date__c\n        , seats_active_latest__c as seats_active_latest__c\n        , seats_active_mau__c as seats_active_mau__c\n        , seats_active_max__c as seats_active_max__c\n        , seats_active_override__c as seats_active_override__c\n        , seats_active_wau__c as seats_active_wau__c\n        , seats_licensed__c as seats_licensed__c\n        , seats_registered__c as seats_registered__c\n        , seat_utilization__c as seat_utilization__c\n        , sector__c as sector__c\n        , server_version__c as server_version__c\n        , signed_nda__c as signed_nda__c\n        , sponsor__c as sponsor__c\n        , telemetry_accuracy__c as telemetry_accuracy__c\n        , territoryid__c as territoryid__c\n        , territory_area__c as territory_area__c\n        , territory_comm_rep__c as territory_comm_rep__c\n        , territory_ent_rep__c as territory_ent_rep__c\n        , territory_geo__c as territory_geo__c\n        , territory_last_updated__c as territory_last_updated__c\n        , territory_region__c as territory_region__c\n        , territory_segment__c as territory_segment__c\n        , territory__c as territory__c\n        , total_sales__c as total_sales__c\n        , total_seats__c as total_seats__c\n        , trial_req_date__c as trial_req_date__c\n        , true_up_eligible__c as true_up_eligible__c\n        , unqualified_date__c as unqualified_date__c\n        , account_end_date__c as account_end_date__c\n        , account_number_int__c as account_number_int__c\n        , account_owner_zd__c as account_owner_zd__c\n        , account_start_date__c as account_start_date__c\n        , api_id__c as api_id__c\n        , arr_current__c as arr_current__c\n        , cleaned_up_website__c as cleaned_up_website__c\n        , elasticsearch__c as elasticsearch__c\n        , read_only_announcement_channels__c as read_only_announcement_channels__c\n        , high_availability_ha__c as high_availability_ha__c\n        , saml_sso__c as saml_sso__c\n        , ldap_group_sync__c as ldap_group_sync__c\n        , compliance_custom_data_retention__c as compliance_custom_data_retention__c\n        , incident_collaboration__c as incident_collaboration__c\n        , integrations__c as integrations__c\n        , sector_picklist__c as sector_picklist__c\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed\nwhere\n    not is_deleted", "language": "sql", "refs": [], "sources": [["salesforce", "account"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.salesforce.account"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_salesforce__lead": {"database": "jaffle_shop", "schema": "main", "name": "stg_salesforce__lead", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/salesforce/stg_salesforce__lead.sql", "original_file_path": "models/staging/salesforce/stg_salesforce__lead.sql", "unique_id": "model.mattermost_analytics.stg_salesforce__lead", "fqn": ["mattermost_analytics", "staging", "salesforce", "stg_salesforce__lead"], "alias": "stg_salesforce__lead", "checksum": {"name": "sha256", "checksum": "fce668b1a72c3b32727902316e0d1fc05f3a9b68d38d7c3595cd82c9f6a29449"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "A lead is a sales prospect who has expressed interest in your product or company.\nExcludes deleted leads.\n", "columns": {"lead_id": {"name": "lead_id", "description": "The lead's ID, as defined by Salesforce.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company": {"name": "company", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "converted_account_id": {"name": "converted_account_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "converted_contact_id": {"name": "converted_contact_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "converted_at": {"name": "converted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "converted_opportunity_id": {"name": "converted_opportunity_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country_code": {"name": "country_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_opted_out_of_email": {"name": "has_opted_out_of_email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_opted_out_of_fax": {"name": "has_opted_out_of_fax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "industry": {"name": "industry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_by_id": {"name": "last_modified_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_at": {"name": "last_modified_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobile_phone": {"name": "mobile_phone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postalcode": {"name": "postalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "state": {"name": "state", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "statecode": {"name": "statecode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_modstamp_at": {"name": "system_modstamp_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "website": {"name": "website", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actively_being_sequenced__c": {"name": "actively_being_sequenced__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "api_id__c": {"name": "api_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignment_logic__c": {"name": "assignment_logic__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "behavior_score__c": {"name": "behavior_score__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id__c": {"name": "campaign_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel_detail__c": {"name": "channel_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel__c": {"name": "channel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cleaned_up_website__c": {"name": "cleaned_up_website__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clearbit_employee_count__c": {"name": "clearbit_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_daily_posts__c": {"name": "cloud_daily_posts__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_dau__c": {"name": "cloud_dau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_dns__c": {"name": "cloud_dns__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_last_active_date__c": {"name": "cloud_last_active_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_mau__c": {"name": "cloud_mau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_plugins_enabled__c": {"name": "cloud_plugins_enabled__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_total_posts__c": {"name": "cloud_total_posts__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_type__c": {"name": "company_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "connected__c": {"name": "connected__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_us_inquiry_type__c": {"name": "contact_us_inquiry_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_status__c": {"name": "current_sequence_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_step_number__c": {"name": "current_sequence_step_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_step_type__c": {"name": "current_sequence_step_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_task_due_date__c": {"name": "current_sequence_task_due_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_user_name__c": {"name": "current_sequence_user_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discoverorg_employee_count__c": {"name": "discoverorg_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discovery_call_booked__c": {"name": "discovery_call_booked__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discovery_call_completed__c": {"name": "discovery_call_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dscorgpkg__company_hq_country_code__c": {"name": "dscorgpkg__company_hq_country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_count_override__c": {"name": "employee_count_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagio__matched_account__c": {"name": "engagio__matched_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_account__c": {"name": "existing_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_action_detail__c": {"name": "first_action_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_action__c": {"name": "first_action__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel_detail__c": {"name": "first_channel_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel__c": {"name": "first_channel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mcl_date__c": {"name": "first_mcl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mel_date__c": {"name": "first_mel_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mql_date__c": {"name": "first_mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_not_a_lead_date__c": {"name": "first_not_a_lead_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_pql_date__c": {"name": "first_pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_qsc_date__c": {"name": "first_qsc_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_qso_date__c": {"name": "first_qso_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_recycle_date__c": {"name": "first_recycle_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_scl_date__c": {"name": "first_scl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_sdl_date__c": {"name": "first_sdl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "how_did_you_hear_about_mattermost__c": {"name": "how_did_you_hear_about_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbound_outbound__c": {"name": "inbound_outbound__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "indirect_lead__c": {"name": "indirect_lead__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "industry_text__c": {"name": "industry_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "job_function__c": {"name": "job_function__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "junk_reason__c": {"name": "junk_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead2convdays__c": {"name": "lead2convdays__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead2trialdays__c": {"name": "lead2trialdays__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_created_date__c": {"name": "lead_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_number__c": {"name": "lead_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail__c": {"name": "lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_text__c": {"name": "lead_source_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_status_at_conversion__c": {"name": "lead_status_at_conversion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_status_minor__c": {"name": "lead_status_minor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_type__c": {"name": "lead_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "linkedin__c": {"name": "linkedin__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marketing_suspend__c": {"name": "marketing_suspend__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "matched_account_company_type__c": {"name": "matched_account_company_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "matched_account_named_account_tier__c": {"name": "matched_account_named_account_tier__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "matched_account_named_account__c": {"name": "matched_account_named_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_action_detail__c": {"name": "most_recent_action_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_action__c": {"name": "most_recent_action__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_lead_source_detail__c": {"name": "most_recent_lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_lead_source__c": {"name": "most_recent_lead_source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mcl_date__c": {"name": "most_recent_mcl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mel_date__c": {"name": "most_recent_mel_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mql_date__c": {"name": "most_recent_mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_qsc_date__c": {"name": "most_recent_qsc_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_qso_date__c": {"name": "most_recent_qso_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_recycle_date__c": {"name": "most_recent_recycle_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_scl_date__c": {"name": "most_recent_scl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_sdl_date__c": {"name": "most_recent_sdl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name_of_currently_active_sequence__c": {"name": "name_of_currently_active_sequence__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "never_connected__c": {"name": "never_connected__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofemployees": {"name": "numberofemployees", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_owner__c": {"name": "original_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outreach_cadence_add__c": {"name": "outreach_cadence_add__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outreach_manual_create__c": {"name": "outreach_manual_create__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outreach__c": {"name": "outreach__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_email__c": {"name": "partner_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_name__c": {"name": "partner_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_status__c": {"name": "product_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quality_star_rating__c": {"name": "quality_star_rating__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quality__c": {"name": "quality__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recycle_reason__c": {"name": "recycle_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_a_demo_date__c": {"name": "request_a_demo_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_a_trial_date__c": {"name": "request_a_trial_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_quote_date__c": {"name": "request_quote_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_to_contact_us_date__c": {"name": "request_to_contact_us_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stripe_customer_id__c": {"name": "stripe_customer_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tell_us_more_about_how_we_can_help_you__c": {"name": "tell_us_more_about_how_we_can_help_you__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territoryid__c": {"name": "territoryid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timeline__c": {"name": "timeline__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "where_are_you_with_mattermost__c": {"name": "where_are_you_with_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discovery_call_date__c": {"name": "discovery_call_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_pql_date__c": {"name": "most_recent_pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lifecycle_stage__c": {"name": "lifecycle_stage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sal_date__c": {"name": "sal_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_reengaged_date__c": {"name": "most_recent_reengaged_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_reengaged_date__c": {"name": "first_reengaged_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_license_id__c": {"name": "trial_license_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_activation_date__c": {"name": "trial_activation_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/salesforce/_salesforce__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.080457, "relation_name": "\"jaffle_shop\".main.stg_salesforce__lead", "raw_code": "with source as (\n\n    select * from {{ source('salesforce', 'lead') }}\n\n),\n\nrenamed as (\n\n    select\n        id as lead_id,\n\n        -- Foreign keys\n        convertedaccountid as converted_account_id,\n        convertedcontactid as converted_contact_id,\n        convertedopportunityid as converted_opportunity_id,\n        createdbyid as created_by_id,\n        lastmodifiedbyid as last_modified_by_id,\n        ownerid as owner_id,\n\n        -- Conversion status\n        converteddate as converted_at,\n        status,\n\n        -- Details\n        name,\n        description,\n        firstname as first_name,\n        lastname as last_name,\n\n        -- Contact preferences\n        hasoptedoutofemail as has_opted_out_of_email,\n        hasoptedoutoffax as has_opted_out_of_fax,\n\n        -- Contact details\n        country,\n        countrycode as country_code,\n        state,\n        statecode,\n        postalcode,\n        phone,\n        mobilephone as mobile_phone,\n        email,\n\n        -- Company context\n        company,\n        industry,\n        website,\n        numberofemployees,\n\n        -- Metadata\n        createddate as created_at,\n        isdeleted as is_deleted,\n        lastmodifieddate as last_modified_at,\n        systemmodstamp as system_modstamp_at,\n\n        -- Custom columns\n        actively_being_sequenced__c,\n        api_id__c,\n        assignment_logic__c,\n        behavior_score__c,\n        campaign_id__c,\n        channel_detail__c,\n        channel__c,\n        cleaned_up_website__c,\n        clearbit_employee_count__c,\n        cloud_daily_posts__c,\n        cloud_dau__c,\n        cloud_dns__c,\n        cloud_last_active_date__c,\n        cloud_mau__c,\n        cloud_plugins_enabled__c,\n        cloud_total_posts__c,\n        company_type__c,\n        connected__c,\n        contact_us_inquiry_type__c,\n        current_sequence_status__c,\n        current_sequence_step_number__c,\n        current_sequence_step_type__c,\n        current_sequence_task_due_date__c,\n        current_sequence_user_name__c,\n        discoverorg_employee_count__c,\n        discovery_call_booked__c,\n        discovery_call_completed__c,\n        dscorgpkg__company_hq_country_code__c,\n        dwh_external_id__c,\n        employee_count_override__c,\n        engagio__matched_account__c,\n        existing_account__c,\n        first_action_detail__c,\n        first_action__c,\n        first_channel_detail__c,\n        first_channel__c,\n        first_mcl_date__c,\n        first_mel_date__c,\n        first_mql_date__c,\n        first_not_a_lead_date__c,\n        first_pql_date__c,\n        first_qsc_date__c,\n        first_qso_date__c,\n        first_recycle_date__c,\n        first_scl_date__c,\n        first_sdl_date__c,\n        geo__c,\n        how_did_you_hear_about_mattermost__c,\n        inbound_outbound__c,\n        indirect_lead__c,\n        industry_text__c,\n        job_function__c,\n        junk_reason__c,\n        lead2convdays__c,\n        lead2trialdays__c,\n        lead_created_date__c,\n        lead_number__c,\n        lead_source_detail__c,\n        lead_source_text__c,\n        lead_status_at_conversion__c,\n        lead_status_minor__c,\n        lead_type__c,\n        linkedin__c,\n        marketing_suspend__c,\n        matched_account_company_type__c,\n        matched_account_named_account_tier__c,\n        matched_account_named_account__c,\n        most_recent_action_detail__c,\n        most_recent_action__c,\n        most_recent_lead_source_detail__c,\n        most_recent_lead_source__c,\n        most_recent_mcl_date__c,\n        most_recent_mel_date__c,\n        most_recent_mql_date__c,\n        most_recent_qsc_date__c,\n        most_recent_qso_date__c,\n        most_recent_recycle_date__c,\n        most_recent_scl_date__c,\n        most_recent_sdl_date__c,\n        name_of_currently_active_sequence__c,\n        never_connected__c,\n        original_owner__c,\n        outreach_cadence_add__c,\n        outreach_manual_create__c,\n        outreach__c,\n        partner_email__c,\n        partner_name__c,\n        product_status__c,\n        quality_star_rating__c,\n        quality__c,\n        recycle_reason__c,\n        request_a_demo_date__c,\n        request_a_trial_date__c,\n        request_quote_date__c,\n        request_to_contact_us_date__c,\n        stripe_customer_id__c,\n        tell_us_more_about_how_we_can_help_you__c,\n        territoryid__c,\n        territory__c,\n        timeline__c,\n        where_are_you_with_mattermost__c,\n        discovery_call_date__c,\n        most_recent_pql_date__c,\n        lifecycle_stage__c,\n        sal_date__c,\n        most_recent_reengaged_date__c,\n        first_reengaged_date__c,\n        trial_license_id__c,\n        trial_activation_date__c\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed\nwhere\n    not is_deleted", "language": "sql", "refs": [], "sources": [["salesforce", "lead"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.salesforce.lead"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_salesforce__campaign_member": {"database": "jaffle_shop", "schema": "main", "name": "stg_salesforce__campaign_member", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/salesforce/stg_salesforce__campaign_member.sql", "original_file_path": "models/staging/salesforce/stg_salesforce__campaign_member.sql", "unique_id": "model.mattermost_analytics.stg_salesforce__campaign_member", "fqn": ["mattermost_analytics", "staging", "salesforce", "stg_salesforce__campaign_member"], "alias": "stg_salesforce__campaign_member", "checksum": {"name": "sha256", "checksum": "79de021d7f34193e06be5ca0b49320e342be1125fb59fcb3152626373fffd2de"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Any lead or contact associated with a campaign.\nExcludes deleted objects.\n", "columns": {"campaign_member_id": {"name": "campaign_member_id", "description": "The Salesforce ID of the campaign member", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_or_account": {"name": "company_or_account", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "do_not_call": {"name": "do_not_call", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fax": {"name": "fax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_responded_at": {"name": "first_responded_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_opted_out_of_email": {"name": "has_opted_out_of_email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_opted_out_of_fax": {"name": "has_opted_out_of_fax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_responded": {"name": "has_responded", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_by_id": {"name": "last_modified_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_at": {"name": "last_modified_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_id": {"name": "lead_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_or_contact_id": {"name": "lead_or_contact_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_or_contact_owner_id": {"name": "lead_or_contact_owner_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source": {"name": "lead_source", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobile_phone": {"name": "mobile_phone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postalcode": {"name": "postalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "salutation": {"name": "salutation", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "state": {"name": "state", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "street": {"name": "street", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_modstamp_at": {"name": "system_modstamp_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "title": {"name": "title", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accounttype__c": {"name": "accounttype__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_us_notes__c": {"name": "contact_us_notes__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "converted_date__c": {"name": "converted_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cosize__c": {"name": "cosize__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "e_purchase_date__c": {"name": "e_purchase_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_responded_on__c": {"name": "first_responded_on__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_occurrence__c": {"name": "last_occurrence__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadcontact_create_date__c": {"name": "leadcontact_create_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_text__c": {"name": "lead_source_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source__c": {"name": "lead_source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marketing_ops_fix_detail__c": {"name": "marketing_ops_fix_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "member_channel_detail__c": {"name": "member_channel_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "member_channel__c": {"name": "member_channel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql_date__c": {"name": "mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql__c": {"name": "mql__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "named_account__c": {"name": "named_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pql_date__c": {"name": "pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region__c": {"name": "region__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "senior_title__c": {"name": "senior_title__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_title__c": {"name": "technical_title__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/salesforce/_salesforce__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.061365, "relation_name": "\"jaffle_shop\".main.stg_salesforce__campaign_member", "raw_code": "with source as (\n\n    select * from {{ source('salesforce', 'campaignmember') }}\n\n),\n\nrenamed as (\n\n    select\n        id as campaign_member_id,\n\n        -- Foreign keys\n        campaignid as campaign_id,\n        createdbyid as created_by_id,\n        leadid as lead_id,\n        lastmodifiedbyid as last_modified_by_id,\n        leadorcontactid as lead_or_contact_id,\n        leadorcontactownerid as lead_or_contact_owner_id,\n        contactid as contact_id,\n\n        -- Details\n        name,\n        salutation,\n        description,\n        status,\n        title,\n        type,\n        companyoraccount as company_or_account,\n        firstname as first_name,\n        lastname as last_name,\n        leadsource as lead_source,\n\n        -- Contact preferences\n        donotcall as do_not_call,\n        firstrespondeddate as first_responded_at,\n        hasoptedoutofemail as has_opted_out_of_email,\n        hasoptedoutoffax as has_opted_out_of_fax,\n        hasresponded as has_responded,\n\n        -- Contact information\n        phone,\n        mobilephone as mobile_phone,\n        fax,\n        email,\n\n        -- Address\n        street,\n        city,\n        country,\n        state,\n        postalcode,\n\n        -- Metadata\n        createddate as created_at,\n        isdeleted as is_deleted,\n        lastmodifieddate as last_modified_at,\n        systemmodstamp as system_modstamp_at,\n\n        -- Custom columns\n        accounttype__c,\n        contact_us_notes__c,\n        converted_date__c,\n        cosize__c,\n        dwh_external_id__c,\n        e_purchase_date__c,\n        first_responded_on__c,\n        geo__c,\n        last_occurrence__c,\n        leadcontact_create_date__c,\n        lead_source_text__c,\n        lead_source__c,\n        marketing_ops_fix_detail__c,\n        member_channel_detail__c,\n        member_channel__c,\n        mql_date__c,\n        mql__c,\n        named_account__c,\n        pql_date__c,\n        region__c,\n        senior_title__c,\n        technical_title__c\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed\nwhere\n    not is_deleted", "language": "sql", "refs": [], "sources": [["salesforce", "campaignmember"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.salesforce.campaignmember"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_salesforce__opportunity_line_item": {"database": "jaffle_shop", "schema": "main", "name": "stg_salesforce__opportunity_line_item", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/salesforce/stg_salesforce__opportunity_line_item.sql", "original_file_path": "models/staging/salesforce/stg_salesforce__opportunity_line_item.sql", "unique_id": "model.mattermost_analytics.stg_salesforce__opportunity_line_item", "fqn": ["mattermost_analytics", "staging", "salesforce", "stg_salesforce__opportunity_line_item"], "alias": "stg_salesforce__opportunity_line_item", "checksum": {"name": "sha256", "checksum": "b706f33881ca185d13fede5a6c89d51dcc71f25a78ddb882d7fc0d9d767c19ce"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Opportunity Line Items are the Products which are associated to an Opportunity.\nDeleted opportunity line items are excluded.\n", "columns": {"opportunity_line_item": {"name": "opportunity_line_item", "description": "The opportunity line item's ID, as defined by Salesforce", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_by_id": {"name": "last_modified_by_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_modified_at": {"name": "last_modified_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "list_price": {"name": "list_price", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunity_id": {"name": "opportunity_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricebook_entry_id": {"name": "pricebook_entry_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product2_id": {"name": "product2_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_at": {"name": "service_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sort_ordr": {"name": "sort_ordr", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_modstamp_at": {"name": "system_modstamp_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_price": {"name": "total_price", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unit_price": {"name": "unit_price", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_manual_override__c": {"name": "amount_manual_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "coterm_expansion_amount__c": {"name": "coterm_expansion_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_calc__c": {"name": "discount_calc__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discounted_list_price__c": {"name": "discounted_list_price__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_date__c": {"name": "end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expansion_amount__c": {"name": "expansion_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_id__c": {"name": "invoice_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_status__c": {"name": "invoice_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_prorated_expansion__c": {"name": "is_prorated_expansion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leftover_expansion_amount__c": {"name": "leftover_expansion_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lineitemid__c": {"name": "lineitemid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_billing_amount__c": {"name": "monthly_billing_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "multi_amount__c": {"name": "multi_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_invoice_id__c": {"name": "netsuite_invoice_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_amount__c": {"name": "new_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricing_method__c": {"name": "pricing_method__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_end_datef__c": {"name": "product_end_datef__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_line_type__c": {"name": "product_line_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_start_datef__c": {"name": "product_start_datef__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_type__c": {"name": "product_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prorated_listprice__c": {"name": "prorated_listprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recalculate_sales_price__c": {"name": "recalculate_sales_price__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_amount__c": {"name": "renewal_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_end_date__c": {"name": "renewal_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_multi_amount__c": {"name": "renewal_multi_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_start_date__c": {"name": "renewal_start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opportunity_line_id__c": {"name": "renewed_by_opportunity_line_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reseller_fee__c": {"name": "reseller_fee__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "revenue_type__c": {"name": "revenue_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_price_needs_to_be_updated__c": {"name": "sales_price_needs_to_be_updated__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_date__c": {"name": "start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subs_id__c": {"name": "subs_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subs_version_id__c": {"name": "subs_version_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "term_months__c": {"name": "term_months__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_amount__c": {"name": "total_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_amount_total_price__c": {"name": "total_amount_total_price__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_price_with_annualized_expansion__c": {"name": "total_price_with_annualized_expansion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/salesforce/_salesforce__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.104347, "relation_name": "\"jaffle_shop\".main.stg_salesforce__opportunity_line_item", "raw_code": "with source as (\n\n    select * from {{ source('salesforce', 'opportunitylineitem') }}\n\n),\n\nrenamed as (\n\n    select\n        id as opportunity_line_item,\n\n        -- Foreign keys\n        createdbyid as created_by_id,\n        lastmodifiedbyid as last_modified_by_id,\n        opportunityid as opportunity_id,\n        pricebookentryid as pricebook_entry_id,\n        product2id as product2_id,\n\n        -- Details\n        name,\n        description,\n        productcode as product_code,\n        servicedate as service_at,\n        sortorder as sort_order,\n\n        -- Accounting\n        quantity,\n        unitprice as unit_price,\n        discount,\n        listprice as list_price,\n        totalprice as total_price,\n        subtotal,\n\n        -- Metadata\n        createddate as created_at,\n        isdeleted as is_deleted,\n        lastmodifieddate as last_modified_at,\n        systemmodstamp as system_modstamp_at,\n\n        -- Custom columns\n        amount_manual_override__c,\n        coterm_expansion_amount__c,\n        discount_calc__c,\n        discounted_list_price__c,\n        dwh_external_id__c,\n        end_date__c,\n        expansion_amount__c,\n        invoice_id__c,\n        invoice_status__c,\n        is_prorated_expansion__c,\n        leftover_expansion_amount__c,\n        lineitemid__c,\n        monthly_billing_amount__c,\n        multi_amount__c,\n        netsuite_invoice_id__c,\n        new_amount__c,\n        pricing_method__c,\n        product_end_datef__c,\n        product_line_type__c,\n        product_start_datef__c,\n        product_type__c,\n        prorated_listprice__c,\n        recalculate_sales_price__c,\n        renewal_amount__c,\n        renewal_end_date__c,\n        renewal_multi_amount__c,\n        renewal_start_date__c,\n        renewed_by_opportunity_line_id__c,\n        reseller_fee__c,\n        revenue_type__c,\n        sales_price_needs_to_be_updated__c,\n        start_date__c,\n        subs_id__c,\n        subs_prev_version_id__c\n        subs_version_id__c,\n        term_months__c,\n        total_amount__c,\n        total_amount_total_price__c,\n        total_price_with_annualized_expansion__c\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed\nwhere\n    not is_deleted", "language": "sql", "refs": [], "sources": [["salesforce", "opportunitylineitem"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.salesforce.opportunitylineitem"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_salesforce__user": {"database": "jaffle_shop", "schema": "main", "name": "stg_salesforce__user", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/salesforce/stg_salesforce__user.sql", "original_file_path": "models/staging/salesforce/stg_salesforce__user.sql", "unique_id": "model.mattermost_analytics.stg_salesforce__user", "fqn": ["mattermost_analytics", "staging", "salesforce", "stg_salesforce__user"], "alias": "stg_salesforce__user", "checksum": {"name": "sha256", "checksum": "d8b9cc2529ac0d684086acf2477e518e6beec9999474d8df47eee6b92c502527"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Represents a user in your organization.\n", "columns": {"user_id": {"name": "user_id", "description": "The user's ID, as defined by Salesforce.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "department": {"name": "department", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "division": {"name": "division", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_number": {"name": "employee_number", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "federation_identifier": {"name": "federation_identifier", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "manager_id": {"name": "manager_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "profile_id": {"name": "profile_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_modstamp_at": {"name": "system_modstamp_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "title": {"name": "title", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_role_id": {"name": "user_role_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_type": {"name": "user_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mattermost_handle__c": {"name": "mattermost_handle__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_type__c": {"name": "owner_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_ops__c": {"name": "sales_ops__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_segment__c": {"name": "sales_segment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_date__c": {"name": "start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_type__c": {"name": "system_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "validation_exempt__c": {"name": "validation_exempt__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/salesforce/_salesforce__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.106978, "relation_name": "\"jaffle_shop\".main.stg_salesforce__user", "raw_code": "with source as (\n\n    select * from {{ source('salesforce', 'user') }}\n\n),\n\nrenamed as (\n\n    select\n        id as user_id,\n\n        -- Foreign keys\n        managerid as manager_id,\n        profileid as profile_id,\n        userroleid as user_role_id,\n\n        -- Personal info\n        name,\n        firstname as first_name,\n        lastname as last_name,\n        title,\n        username,\n        email,\n        employeenumber as employee_number,\n        federationidentifier as federation_identifier,\n\n        -- Company context\n        department,\n        division,\n\n        -- Account details\n        isactive as is_active,\n        usertype as user_type,\n\n        -- Metadata\n        createddate as created_at,\n        systemmodstamp as system_modstamp_at,\n\n        -- Custom columns\n        dwh_external_id__c,\n        mattermost_handle__c,\n        owner_type__c,\n        sales_ops__c,\n        sales_segment__c,\n        start_date__c,\n        system_type__c,\n        territory__c,\n        validation_exempt__c\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect\n    *\nfrom\n    renamed", "language": "sql", "refs": [], "sources": [["salesforce", "user"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.salesforce.user"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermost__version_release_dates": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermost__version_release_dates", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost/stg_mattermost__version_release_dates.sql", "original_file_path": "models/staging/mattermost/stg_mattermost__version_release_dates.sql", "unique_id": "model.mattermost_analytics.stg_mattermost__version_release_dates", "fqn": ["mattermost_analytics", "staging", "mattermost", "stg_mattermost__version_release_dates"], "alias": "stg_mattermost__version_release_dates", "checksum": {"name": "sha256", "checksum": "9a3cf325b97d58490571ba84df2498fd8181817fd8c506aa7af685e210fa0414"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Contains version information for releases. \n", "columns": {"version": {"name": "version", "description": "The semver string (`major.minor.patch` format).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "short_version": {"name": "short_version", "description": "The short format of the version, omitting patch (example `v6.3`).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "planned_release_date": {"name": "planned_release_date", "description": "The planned date for the release.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_supported": {"name": "is_supported", "description": "Whether the version is supported or not.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "release_number": {"name": "release_number", "description": "The issue's release number.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermost/_mattermost__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.231064, "relation_name": "\"jaffle_shop\".main.stg_mattermost__version_release_dates", "raw_code": "WITH rd AS (\n    SELECT\n        *\n    FROM\n        {{ source('mattermost', 'version_release_dates') }}\n)\nSELECT\n    version AS version,\n    'v' || REGEXP_SUBSTR(version, '^\\\\d+\\\\.\\\\d+') AS short_version,\n    release_date::DATE AS planned_release_date,\n    supported::BOOLEAN AS is_supported,\n    release_number::INT AS release_number\nFROM\n    rd", "language": "sql", "refs": [], "sources": [["mattermost", "version_release_dates"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.mattermost.version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermost2__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermost2__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost2/stg_mattermost2__tracks.sql", "original_file_path": "models/staging/mattermost2/stg_mattermost2__tracks.sql", "unique_id": "model.mattermost_analytics.stg_mattermost2__tracks", "fqn": ["mattermost_analytics", "staging", "mattermost2", "stg_mattermost2__tracks"], "alias": "stg_mattermost2__tracks", "checksum": {"name": "sha256", "checksum": "b0ae0a43549bbd2abdbace33a918af4a675e8e1af242e64c78b6a1e0a4074c85"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The type of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by Segment when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by Segment when the event occurred refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermost2/_mattermost2__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.238258, "relation_name": "\"jaffle_shop\".main.stg_mattermost2__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_mattermost2__tracks')) }}\n    FROM\n        {{ ref ('base_mattermost2__tracks') }}\n)\nSELECT\n     id               AS event_id\n     , event          AS event_table\n     , event_text     AS event_name\n     , category       AS category\n     , type           AS event_type\n     , user_id        AS server_id\n     , user_actual_id AS user_id\n     , received_at    AS received_at\n     , timestamp      AS timestamp\nFROM tracks", "language": "sql", "refs": [{"name": "base_mattermost2__tracks", "package": null, "version": null}, {"name": "base_mattermost2__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_mattermost2__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermost2__oauth": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermost2__oauth", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost2/stg_mattermost2__oauth.sql", "original_file_path": "models/staging/mattermost2/stg_mattermost2__oauth.sql", "unique_id": "model.mattermost_analytics.stg_mattermost2__oauth", "fqn": ["mattermost_analytics", "staging", "mattermost2", "stg_mattermost2__oauth"], "alias": "stg_mattermost2__oauth", "checksum": {"name": "sha256", "checksum": "c170da03f4c95354165f34e6c719ccf885924ffca113ffdbd69302ee0e05a221"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Telemetry related to OAuth authentication configuration.", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by Segment when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by Segment when the event occurred refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_office365_enabled": {"name": "is_office365_enabled", "description": "Whether Office365 OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_google_enabled": {"name": "is_google_enabled", "description": "Whether Google OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_gitlab_enabled": {"name": "is_gitlab_enabled", "description": "Whether Gitlab OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "The version of Segment library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "The name of Segment library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermost2/_mattermost2__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.242975, "relation_name": "\"jaffle_shop\".main.stg_mattermost2__oauth", "raw_code": "with source as (\n    select * from {{ source('mattermost2', 'config_oauth') }}\n),\n\nrenamed as (\n    select\n        -- Common event columns\n        id               as event_id\n        , event          as event_table\n        , event_text     as event_name\n        , user_id        as server_id\n        , received_at    as received_at\n        , timestamp      as timestamp\n\n        , enable_office365 as is_office365_enabled\n        , enable_google as is_google_enabled\n        , enable_gitlab as is_gitlab_enabled\n\n        -- Metadata from Segment\n        , context_library_version\n        , context_library_name\n        , sent_at\n        , original_timestamp\n\n        -- Ignored - used by segment for debugging purposes\n        -- , uuid_ts\n\n    from source\n)\n\nselect * from renamed", "language": "sql", "refs": [], "sources": [["mattermost2", "config_oauth"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.mattermost2.config_oauth"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermost2__server": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermost2__server", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost2/stg_mattermost2__server.sql", "original_file_path": "models/staging/mattermost2/stg_mattermost2__server.sql", "unique_id": "model.mattermost_analytics.stg_mattermost2__server", "fqn": ["mattermost_analytics", "staging", "mattermost2", "stg_mattermost2__server"], "alias": "stg_mattermost2__server", "checksum": {"name": "sha256", "checksum": "196ca31b9ee7c573eb73867d56c35670b289aeb59825c62a170d549622b9f5f1"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Events originating from servers with server metadata. Sent using Segment.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by Segment when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by Segment when the event occurred refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_system_admins": {"name": "count_system_admins", "description": "The total number of system admins at the time the event was submitted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_full": {"name": "version_full", "description": "The full version string of the server's semver.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major version of the server at the time the event was submitted/", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor version of the server at the time the event was submitted/", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_patch": {"name": "version_patch", "description": "The patch version of the server at the time the event was submitted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "The operating system that the server runs on.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type": {"name": "database_type", "description": "The name of the database used by the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_version": {"name": "database_version", "description": "The version of the database", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "edition": {"name": "edition", "description": "Whether the build is enterprise ready or not.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "The version of Segment library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "The name of Segment library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uuid_ts": {"name": "uuid_ts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermost2/_mattermost2__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.2393181, "relation_name": "\"jaffle_shop\".main.stg_mattermost2__server", "raw_code": "with source as (\n    select * from {{ source('mattermost2', 'server') }}\n), renamed as (\n    select\n        -- Common event columns\n        id               as event_id\n        , event          as event_table\n        , event_text     as event_name\n        , user_id        as server_id\n        , received_at    as received_at\n        , timestamp      as timestamp\n\n        -- Server info\n        , system_admins  as count_system_admins\n        , version        as version_full\n        , split_part(version, '.', 1) as version_major\n        , split_part(version, '.', 2) as version_minor\n        , split_part(version, '.', 3) as version_patch\n\n        -- Deployment info\n        , operating_system\n        , database_type\n        , database_version\n        , edition\n\n        -- Metadata from segment\n        , context_library_version\n        , context_library_name\n        , uuid_ts\n        , sent_at\n        , original_timestamp\n\n    from source\n)\nselect\n    *\nfrom\n    renamed", "language": "sql", "refs": [], "sources": [["mattermost2", "server"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.mattermost2.server"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermost2__activity": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermost2__activity", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost2/stg_mattermost2__activity.sql", "original_file_path": "models/staging/mattermost2/stg_mattermost2__activity.sql", "unique_id": "model.mattermost_analytics.stg_mattermost2__activity", "fqn": ["mattermost_analytics", "staging", "mattermost2", "stg_mattermost2__activity"], "alias": "stg_mattermost2__activity", "checksum": {"name": "sha256", "checksum": "d5bd5e7653e9700516516c2192edb7773cc2e5906c27dcb671e50c056f281491"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Tracks key metrics related to server activity", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by Segment when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by Segment when the event occurred refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_public_channels": {"name": "count_public_channels", "description": "Total number of public channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_deleted_public_channels": {"name": "count_deleted_public_channels", "description": "Total number of deleted public channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_private_channels": {"name": "count_private_channels", "description": "Total number of private channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_deleted_private_channels": {"name": "count_deleted_private_channels", "description": "Total number of deleted private channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_bot_posts_previous_day": {"name": "count_bot_posts_previous_day", "description": "Total number of deleted posts.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_posts_previous_day": {"name": "count_posts_previous_day", "description": "Total number of posts the day before the event was sent.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_teams": {"name": "count_teams", "description": "Total number of teams in the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_slash_commands": {"name": "count_slash_commands", "description": "Total number of slash commands.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_direct_message_channels": {"name": "count_direct_message_channels", "description": "Total number of direct message channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_posts": {"name": "count_posts", "description": "Total number of posts.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_incoming_webhooks": {"name": "count_incoming_webhooks", "description": "Total number of incoming webhooks, excluding deleted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_outgoing_webhooks": {"name": "count_outgoing_webhooks", "description": "Total number of outgoing webhooks, excluding deleted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_active_users": {"name": "daily_active_users", "description": "Total number of active users for the past 24 hours prior to the timestamp of the event.\nBots and deleted users are excluded.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_active_users": {"name": "monthly_active_users", "description": "Total number of active users for the past 31 days prior to the timestamp of the event.\nBots and deleted users are excluded.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_users": {"name": "count_registered_users", "description": "Total number of users, including deleted users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_deactivated_users": {"name": "count_registered_deactivated_users", "description": "Total number of inactive (deleted) users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bot_accounts": {"name": "bot_accounts", "description": "Total number of bot accounts.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "guest_accounts": {"name": "guest_accounts", "description": "Total number of guest users, excluding deleted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "The version of Segment library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "The name of Segment library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermost2/_mattermost2__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.2421591, "relation_name": "\"jaffle_shop\".main.stg_mattermost2__activity", "raw_code": "with source as (\n\n    select * from {{ source('mattermost2', 'activity') }}\n\n),\n\nrenamed as (\n\n    select\n        -- Common event columns\n        id               as event_id\n        , event          as event_table\n        , event_text     as event_name\n        , user_id        as server_id\n        , received_at    as received_at\n        , timestamp      as timestamp\n\n        -- Channel metrics\n        , public_channels as count_public_channels\n        , public_channels_deleted as count_deleted_public_channels\n        , private_channels as count_private_channels\n        , private_channels_deleted as count_deleted_private_channels\n        , bot_posts_previous_day as count_bot_posts_previous_day\n        , posts_previous_day as count_posts_previous_day\n        , teams as count_teams\n        , slash_commands as count_slash_commands\n        , direct_message_channels as count_direct_message_channels\n        , posts as count_posts\n        , incoming_webhooks as count_incoming_webhooks\n        , outgoing_webhooks as count_outgoing_webhooks\n\n         -- User & account metrics\n        , coalesce(active_users_daily, active_users) as daily_active_users\n        , active_users_monthly as monthly_active_users\n        , registered_users as count_registered_users\n        , coalesce(registered_deactivated_users, registered_inactive_users) as count_registered_deactivated_users\n        , bot_accounts as bot_accounts\n        , guest_accounts as guest_accounts\n\n        -- Metadata from Segment\n        , context_library_version\n        , context_library_name\n        , sent_at\n        , original_timestamp\n\n        -- Ignored - legacy feature with only ~ 5.7% of segment data having value\n        -- , used_apiv3\n        -- Ignored - used by segment for debugging purposes\n        -- , uuid_ts\n\n    from source\n\n)\n\nselect * from renamed", "language": "sql", "refs": [], "sources": [["mattermost2", "activity"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.mattermost2.activity"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_mattermost2__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_mattermost2__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermost2/base/base_mattermost2__tracks.sql", "original_file_path": "models/staging/mattermost2/base/base_mattermost2__tracks.sql", "unique_id": "model.mattermost_analytics.base_mattermost2__tracks", "fqn": ["mattermost_analytics", "staging", "mattermost2", "base", "base_mattermost2__tracks"], "alias": "base_mattermost2__tracks", "checksum": {"name": "sha256", "checksum": "23b4e69f80ef83d8117ed3370f36bb3f5fc685e75e10307ee2f31d33df87055d"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.142049, "relation_name": "\"jaffle_shop\".main.base_mattermost2__tracks", "raw_code": "{%- set relations = get_event_relations('mattermost2', database='RAW') -%}\n\n{{\n    dbt_utils.union_relations(\n        relations=relations,\n        include=get_base_event_columns(),\n        source_column_name=None\n    )\n}}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_event_relations", "macro.mattermost_analytics.get_base_event_columns", "macro.dbt_utils.union_relations"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mm_telemetry_prod__activity": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_telemetry_prod__activity", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_prod/stg_mm_telemetry_prod__activity.sql", "original_file_path": "models/staging/mm_telemetry_prod/stg_mm_telemetry_prod__activity.sql", "unique_id": "model.mattermost_analytics.stg_mm_telemetry_prod__activity", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "stg_mm_telemetry_prod__activity"], "alias": "stg_mm_telemetry_prod__activity", "checksum": {"name": "sha256", "checksum": "d5411bedefc0541f4b84538aee7d7efb71dae94b2b5927021fd711a415270385"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Tracks key metrics related to server activity", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by Segment when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by Segment when the event occurred refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_id": {"name": "installation_id", "description": "The id of the installation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "anonymous_id": {"name": "anonymous_id", "description": "Server's anonymous ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_ip": {"name": "server_ip", "description": "The server's IP address. See [Rudderstack docs](https://www.rudderstack.com/docs/event-spec/standard-events/common-fields/#how-rudderstack-collects-ip-address) for more information.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_public_channels": {"name": "count_public_channels", "description": "Total number of public channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_deleted_public_channels": {"name": "count_deleted_public_channels", "description": "Total number of deleted public channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_private_channels": {"name": "count_private_channels", "description": "Total number of private channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_deleted_private_channels": {"name": "count_deleted_private_channels", "description": "Total number of deleted private channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_bot_posts_previous_day": {"name": "count_bot_posts_previous_day", "description": "Total number of deleted posts.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_posts_previous_day": {"name": "count_posts_previous_day", "description": "Total number of posts the day before the event was sent.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_teams": {"name": "count_teams", "description": "Total number of teams in the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_slash_commands": {"name": "count_slash_commands", "description": "Total number of slash commands.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_direct_message_channels": {"name": "count_direct_message_channels", "description": "Total number of direct message channels.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_posts": {"name": "count_posts", "description": "Total number of posts.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_incoming_webhooks": {"name": "count_incoming_webhooks", "description": "Total number of incoming webhooks, excluding deleted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_outgoing_webhooks": {"name": "count_outgoing_webhooks", "description": "Total number of outgoing webhooks, excluding deleted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_active_users": {"name": "daily_active_users", "description": "Total number of active users for the past 24 hours prior to the timestamp of the event.\nBots and deleted users are excluded.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_active_users": {"name": "monthly_active_users", "description": "Total number of active users for the past 31 days prior to the timestamp of the event.\nBots and deleted users are excluded.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_users": {"name": "count_registered_users", "description": "Total number of users, including deleted users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_deactivated_users": {"name": "count_registered_deactivated_users", "description": "Total number of inactive (deleted) users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bot_accounts": {"name": "bot_accounts", "description": "Total number of bot accounts.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "guest_accounts": {"name": "guest_accounts", "description": "Total number of guest users, excluding deleted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "The version of Rudderstack library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "The name of Rudderstack library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_telemetry_prod/_mm_telemetry_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.2483141, "relation_name": "\"jaffle_shop\".main.stg_mm_telemetry_prod__activity", "raw_code": "with source as (\n    select * from {{ source('mm_telemetry_prod', 'activity') }}\n),\nrenamed as (\n\n    select\n        -- Common event columns\n        id               as event_id\n        , event          as event_table\n        , event_text     as event_name\n        , user_id        as server_id\n        , received_at    as received_at\n        , timestamp      as timestamp\n\n        -- Server info\n        , coalesce(context_traits_installationid,  context_traits_installation_id) as installation_id\n        , anonymous_id\n        , context_ip as server_ip\n\n        -- Channel metrics\n        , public_channels as count_public_channels\n        , public_channels_deleted as count_deleted_public_channels\n        , private_channels as count_private_channels\n        , private_channels_deleted as count_deleted_private_channels\n        , bot_posts_previous_day as count_bot_posts_previous_day\n        , posts_previous_day as count_posts_previous_day\n        , teams as count_teams\n        , slash_commands as count_slash_commands\n        , direct_message_channels as count_direct_message_channels\n        , posts as count_posts\n        , incoming_webhooks as count_incoming_webhooks\n        , outgoing_webhooks as count_outgoing_webhooks\n\n        -- User & account metrics\n        , active_users_daily as daily_active_users\n        , active_users_monthly as monthly_active_users\n        , registered_users as count_registered_users\n        , registered_deactivated_users as count_registered_deactivated_users\n        , bot_accounts as bot_accounts\n        , guest_accounts as guest_accounts\n\n        -- Metadata from Rudderstack\n        , context_library_version\n        , context_library_name\n        , sent_at\n        , original_timestamp\n\n        -- Ignored - Always null\n        -- , channel\n        -- , daily_active_users\n        -- , weekly_active_users\n        -- , monthly_active_users\n        -- Ignored -- Always same value\n        -- , context_destination_type\n        -- , context_source_id\n        -- , context_source_type\n        -- , context_destination_id\n        -- Ignored, > 98% null\n        -- , storage_bytes\n        --  Ignored - Always same as context_ip\n        -- , context_request_ip\n        -- Ignored - not reflected in code\n        -- , server_id\n        -- Ignored - used by Rudderstack for debugging purposes\n        -- , uuid_ts\n\n    from source\n\n)\n\nselect * from renamed", "language": "sql", "refs": [], "sources": [["mm_telemetry_prod", "activity"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.mm_telemetry_prod.activity"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mm_telemetry_prod__oauth": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_telemetry_prod__oauth", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_prod/stg_mm_telemetry_prod__oauth.sql", "original_file_path": "models/staging/mm_telemetry_prod/stg_mm_telemetry_prod__oauth.sql", "unique_id": "model.mattermost_analytics.stg_mm_telemetry_prod__oauth", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "stg_mm_telemetry_prod__oauth"], "alias": "stg_mm_telemetry_prod__oauth", "checksum": {"name": "sha256", "checksum": "731b4a15a65b01a9995e7de3bd4d0fd507ba76c0eda9fd0d58f569990fa92f1c"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "OAuth server configuration.", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by Segment when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by Segment when the event occurred refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_id": {"name": "installation_id", "description": "The id of the installation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "anonymous_id": {"name": "anonymous_id", "description": "Server's anonymous ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_ip": {"name": "server_ip", "description": "The server's IP address. See [Rudderstack docs](https://www.rudderstack.com/docs/event-spec/standard-events/common-fields/#how-rudderstack-collects-ip-address) for more information.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_office365_enabled": {"name": "is_office365_enabled", "description": "Whether Office365 OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_google_enabled": {"name": "is_google_enabled", "description": "Whether Google OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_gitlab_enabled": {"name": "is_gitlab_enabled", "description": "Whether Gitlab OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_openid_enabled": {"name": "is_openid_enabled", "description": "Whether OpenID OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_openid_google_enabled": {"name": "is_openid_google_enabled", "description": "Whether OpenID with Google OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_openid_gitlab_enabled": {"name": "is_openid_gitlab_enabled", "description": "Whether OpenID with Gitlab OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_openid_office365_enabled": {"name": "is_openid_office365_enabled", "description": "Whether OpenID with Office365 OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "The version of Rudderstack library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "The name of Rudderstack library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_telemetry_prod/_mm_telemetry_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.249372, "relation_name": "\"jaffle_shop\".main.stg_mm_telemetry_prod__oauth", "raw_code": "with source as (\n    select * from {{ source('mm_telemetry_prod', 'config_oauth') }}\n),\n\nrenamed as (\n    select\n        -- Common event columns\n        id               as event_id\n        , event          as event_table\n        , event_text     as event_name\n        , user_id        as server_id\n        , received_at    as received_at\n        , timestamp      as timestamp\n\n        -- Server info\n        , coalesce(context_traits_installationid,  context_traits_installation_id) as installation_id\n        , anonymous_id\n        , context_ip as server_ip\n\n        -- OAuth information\n        , coalesce(enable_office365, enable_office_365) as is_office365_enabled\n        , enable_google as is_google_enabled\n        , enable_gitlab as is_gitlab_enabled\n        , enable_openid as is_openid_enabled\n        , openid_google as is_openid_google_enabled\n        , openid_gitlab as is_openid_gitlab_enabled\n        , coalesce(openid_office365, openid_office_365) as is_openid_office365_enabled\n\n       -- Ignored - Always null\n        -- , channel\n        -- Metadata from Rudderstack\n        , context_library_version\n        , context_library_name\n        , sent_at\n        , original_timestamp\n\n        -- Ignored -- Always same value\n        -- , context_destination_type\n        -- , context_source_id\n        -- , context_source_type\n        -- , context_destination_id\n        -- Ignored - used by Rudderstack for debugging purposes\n        -- , uuid_ts\n    from source\n)\n\nselect * from renamed", "language": "sql", "refs": [], "sources": [["mm_telemetry_prod", "config_oauth"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.mm_telemetry_prod.config_oauth"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mm_telemetry_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_telemetry_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_prod/stg_mm_telemetry_prod__tracks.sql", "original_file_path": "models/staging/mm_telemetry_prod/stg_mm_telemetry_prod__tracks.sql", "unique_id": "model.mattermost_analytics.stg_mm_telemetry_prod__tracks", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "stg_mm_telemetry_prod__tracks"], "alias": "stg_mm_telemetry_prod__tracks", "checksum": {"name": "sha256", "checksum": "9269e78e27a300475e808d190c55b6e55dd45fa40ed727273b8937e237bff796"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The type of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by RudderStack when the event occurred refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_telemetry_prod/_mm_telemetry_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.245891, "relation_name": "\"jaffle_shop\".main.stg_mm_telemetry_prod__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_mm_telemetry_prod__tracks')) }}\n    FROM\n        {{ ref ('base_mm_telemetry_prod__tracks') }}\n)\nSELECT\n     id               AS event_id\n     , event          AS event_table\n     , event_text     AS event_name\n     , category       AS category\n     , type           AS event_type\n     , user_id        AS server_id\n     , user_actual_id AS user_id\n     , received_at    AS received_at\n     , timestamp      AS timestamp\nFROM tracks", "language": "sql", "refs": [{"name": "base_mm_telemetry_prod__tracks", "package": null, "version": null}, {"name": "base_mm_telemetry_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_mm_telemetry_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mm_telemetry_prod__server": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_telemetry_prod__server", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_prod/stg_mm_telemetry_prod__server.sql", "original_file_path": "models/staging/mm_telemetry_prod/stg_mm_telemetry_prod__server.sql", "unique_id": "model.mattermost_analytics.stg_mm_telemetry_prod__server", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "stg_mm_telemetry_prod__server"], "alias": "stg_mm_telemetry_prod__server", "checksum": {"name": "sha256", "checksum": "ec6fc938cd1a9b850a04ed72a6241ae1e3c11a6dff813ad2ee49c1fe60b323c7"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Events originating from servers with server metadata. Sent using Rudderstack.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by Segment when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp registered by Segment when the event occurred refactored to clients clock skew.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_system_admins": {"name": "count_system_admins", "description": "The total number of system admins at the time the event was submitted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_full": {"name": "version_full", "description": "The full version string of the server's semver.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major version of the server at the time the event was submitted/", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor version of the server at the time the event was submitted/", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_patch": {"name": "version_patch", "description": "The patch version of the server at the time the event was submitted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_id": {"name": "installation_id", "description": "The id of the installation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_type": {"name": "installation_type", "description": "Type of installation (if known). Possible values are: kubernetes-operator, deb_package, gitlab_omnibus, omnibus, ubuntu-testing, docker, podman, team\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "anonymous_id": {"name": "anonymous_id", "description": "Server's anonymous ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_ip": {"name": "server_ip", "description": "The server's IP address. See [Rudderstack docs](https://www.rudderstack.com/docs/event-spec/standard-events/common-fields/#how-rudderstack-collects-ip-address) for more information.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "The operating system that the server runs on.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type": {"name": "database_type", "description": "The name of the database used by the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_version": {"name": "database_version", "description": "The version of the database", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "edition": {"name": "edition", "description": "Whether the build is enterprise ready or not.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "The version of Segment library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "The name of Segment library used to send this event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uuid_ts": {"name": "uuid_ts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_telemetry_prod/_mm_telemetry_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.247518, "relation_name": "\"jaffle_shop\".main.stg_mm_telemetry_prod__server", "raw_code": "with source as (\n    select * from {{ source('mm_telemetry_prod', 'server') }}\n), renamed as (\n    select\n\n        -- Common event columns\n        id               as event_id\n        , event          as event_table\n        , event_text     as event_name\n        , user_id        as server_id\n        , received_at    as received_at\n        , timestamp      as timestamp\n\n        -- Server info\n        , system_admins  as count_system_admins\n        , version        as version_full\n        , split_part(version, '.', 1) as version_major\n        , split_part(version, '.', 2) as version_minor\n        , split_part(version, '.', 3) as version_patch\n        , coalesce(context_traits_installationid,  context_traits_installation_id) as installation_id\n        , installation_type\n        , anonymous_id\n        , context_ip as server_ip\n\n        -- Deployment info\n        , operating_system\n        , database_type\n        , database_version\n        , edition\n\n        -- Metadata from segment\n        , context_library_version\n        , context_library_name\n        , uuid_ts\n        , sent_at\n        , original_timestamp\n\n        -- Ignored - Always null\n        -- , channel\n        -- Ignored -- Always same value\n        -- , context_destination_type\n        -- , context_source_id\n        -- , context_source_type\n        -- , context_destination_id\n        --  Ignored - Always same as context_ip\n        -- , context_request_ip\n        -- Ignored - not reflected in code\n        -- , server_id\n    from source\n    where\n        -- Clean up invalid data\n        id is not null\n)\n\nselect * from renamed", "language": "sql", "refs": [], "sources": [["mm_telemetry_prod", "server"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.mm_telemetry_prod.server"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mm_telemetry_prod__performance_events": {"database": "jaffle_shop", "schema": "main", "name": "stg_mm_telemetry_prod__performance_events", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_prod/stg_mm_telemetry_prod__performance_events.sql", "original_file_path": "models/staging/mm_telemetry_prod/stg_mm_telemetry_prod__performance_events.sql", "unique_id": "model.mattermost_analytics.stg_mm_telemetry_prod__performance_events", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "stg_mm_telemetry_prod__performance_events"], "alias": "stg_mm_telemetry_prod__performance_events", "checksum": {"name": "sha256", "checksum": "26bd1299d209c098b54003834b78aa419058d1988026ced8501517dbe7fb13ba"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `performance_events` table from schema `MM_TELEMETRY_PROD` using only columns needed by looker.\n", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "anonymous_id": {"name": "anonymous_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_ip": {"name": "context_ip", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event": {"name": "event", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_text": {"name": "event_text", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel": {"name": "channel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_namespace": {"name": "context_app_namespace", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_actual_id": {"name": "user_actual_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_version": {"name": "context_app_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_actual_role": {"name": "user_actual_role", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_build": {"name": "context_app_build", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_useragent": {"name": "context_useragent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_name": {"name": "context_app_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_locale": {"name": "context_locale", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_screen_density": {"name": "context_screen_density", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duration": {"name": "duration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_of_request": {"name": "num_of_request", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "max_api_resource_size": {"name": "max_api_resource_size", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "longest_api_resource_duration": {"name": "longest_api_resource_duration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count": {"name": "count", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_count": {"name": "request_count", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mm_telemetry_prod/_mm_telemetry_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.246569, "relation_name": "\"jaffle_shop\".main.stg_mm_telemetry_prod__performance_events", "raw_code": "{%- set include_columns = [ \"channel\", \"context_app_namespace\", \"user_actual_id\"\n, \"context_library_name\", \"type\", \"context_app_version\" , \"user_actual_role\" \n, \"context_app_build\" , \"context_library_version\"\n, \"context_useragent\", \"context_app_name\", \"context_locale\", \"context_screen_density\" \n, \"category\" , \"duration\" , \"num_of_request\", \"max_api_resource_size\"\n, \"longest_api_resource_duration\" , \"user_id\", \"count\", \"request_count\"] -%}\n        \nWITH performance_events AS (\n    SELECT\n      {{ get_rudderstack_columns() }}\n        , {% for column in include_columns %}\n        {{ column }} AS {{ column }}\n        {% if not loop.last %},{% endif %}\n    {% endfor %}\n    , timestamp::date as event_date\n    , received_at::date as received_at_date\n    FROM\n      {{ source('mm_telemetry_prod', 'event') }}\n    WHERE CATEGORY = 'performance'\n)\nSELECT * FROM performance_events", "language": "sql", "refs": [], "sources": [["mm_telemetry_prod", "event"]], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_rudderstack_columns"], "nodes": ["source.mattermost_analytics.mm_telemetry_prod.event"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_mm_telemetry_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_mm_telemetry_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mm_telemetry_prod/base/base_mm_telemetry_prod__tracks.sql", "original_file_path": "models/staging/mm_telemetry_prod/base/base_mm_telemetry_prod__tracks.sql", "unique_id": "model.mattermost_analytics.base_mm_telemetry_prod__tracks", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "base", "base_mm_telemetry_prod__tracks"], "alias": "base_mm_telemetry_prod__tracks", "checksum": {"name": "sha256", "checksum": "f7cdd3d9043a8fb63399276d60b4fff93606b451d1dc34cad8f38bd100c1676b"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.155707, "relation_name": "\"jaffle_shop\".main.base_mm_telemetry_prod__tracks", "raw_code": "{%- set relations = get_event_relations('mm_telemetry_prod', database='RAW') -%}\n\n{{\n    dbt_utils.union_relations(\n        relations=relations,\n        include=get_base_event_columns(),\n        source_column_name=None\n    )\n}}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_event_relations", "macro.mattermost_analytics.get_base_event_columns", "macro.dbt_utils.union_relations"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_mattermostcom__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_mattermostcom__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermostcom/stg_mattermostcom__tracks.sql", "original_file_path": "models/staging/mattermostcom/stg_mattermostcom__tracks.sql", "unique_id": "model.mattermost_analytics.stg_mattermostcom__tracks", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "stg_mattermostcom__tracks"], "alias": "stg_mattermostcom__tracks", "checksum": {"name": "sha256", "checksum": "3f455a1f1e287da16ac73dc0927f41581128d0079f3263fd439876364cc18b8c"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/mattermostcom/_mattermostcom__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.253044, "relation_name": "\"jaffle_shop\".main.stg_mattermostcom__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_mattermostcom__tracks')) }}\n    FROM\n        {{ ref ('base_mattermostcom__tracks') }}\n)\nSELECT\n     id                      AS event_id\n     , event                 AS event_table\n     , event_text            AS event_name\n     , user_id               AS user_id\n     , received_at           AS received_at\nFROM\n    tracks", "language": "sql", "refs": [{"name": "base_mattermostcom__tracks", "package": null, "version": null}, {"name": "base_mattermostcom__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_mattermostcom__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_mattermostcom__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_mattermostcom__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/mattermostcom/base/base_mattermostcom__tracks.sql", "original_file_path": "models/staging/mattermostcom/base/base_mattermostcom__tracks.sql", "unique_id": "model.mattermost_analytics.base_mattermostcom__tracks", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "base", "base_mattermostcom__tracks"], "alias": "base_mattermostcom__tracks", "checksum": {"name": "sha256", "checksum": "519c384d0ab75c6c884034d793a03c0f6e3ad61978fd70d72834315b43edc513"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.1619022, "relation_name": "\"jaffle_shop\".main.base_mattermostcom__tracks", "raw_code": "{{ join_tracks_event_tables('mattermostcom', columns=get_base_event_columns()) }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_base_event_columns", "macro.mattermost_analytics.join_tracks_event_tables"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_hacktoberboard_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "stg_hacktoberboard_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/hacktoberboard_prod/stg_hacktoberboard_prod__tracks.sql", "original_file_path": "models/staging/hacktoberboard_prod/stg_hacktoberboard_prod__tracks.sql", "unique_id": "model.mattermost_analytics.stg_hacktoberboard_prod__tracks", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "stg_hacktoberboard_prod__tracks"], "alias": "stg_hacktoberboard_prod__tracks", "checksum": {"name": "sha256", "checksum": "97df9a9b7f03b09c9de6ba86744394cd490e3f6ae4411afa07f41312d7cc3ce9"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Reconstructed `tracks` table using custom properties expected to be in the events.\n", "columns": {"event_id": {"name": "event_id", "description": "The event's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the event table.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The type of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user that sent the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The ID of the server the event originated from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "Timestamp registered by RudderStack when the event was ingested (received).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/hacktoberboard_prod/_hacktoberboard_prod__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.2541492, "relation_name": "\"jaffle_shop\".main.stg_hacktoberboard_prod__tracks", "raw_code": "WITH tracks AS (\n    SELECT\n        {{ dbt_utils.star(ref('base_hacktoberboard_prod__tracks')) }}\n    FROM\n        {{ ref('base_hacktoberboard_prod__tracks') }}\n)\nSELECT\n        id AS event_id\n        , event AS event_table\n        , event_text AS event_name\n        , category AS category\n        , type AS event_type\n        , user_id AS server_id\n        , user_actual_id AS user_id\n        , received_at AS received_at\nFROM\n    tracks", "language": "sql", "refs": [{"name": "base_hacktoberboard_prod__tracks", "package": null, "version": null}, {"name": "base_hacktoberboard_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.base_hacktoberboard_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.base_hacktoberboard_prod__tracks": {"database": "jaffle_shop", "schema": "main", "name": "base_hacktoberboard_prod__tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/hacktoberboard_prod/base/base_hacktoberboard_prod__tracks.sql", "original_file_path": "models/staging/hacktoberboard_prod/base/base_hacktoberboard_prod__tracks.sql", "unique_id": "model.mattermost_analytics.base_hacktoberboard_prod__tracks", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "base", "base_hacktoberboard_prod__tracks"], "alias": "base_hacktoberboard_prod__tracks", "checksum": {"name": "sha256", "checksum": "5e41212fdcc8ed7762027536eb0b457d6a220cef5d249b4f4eaf9b1878c423c5"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414206.1686919, "relation_name": "\"jaffle_shop\".main.base_hacktoberboard_prod__tracks", "raw_code": "{{ join_tracks_event_tables('hacktoberboard_prod', columns=get_base_event_columns()) }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.get_base_event_columns", "macro.mattermost_analytics.join_tracks_event_tables"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_stripe__subscription_items": {"database": "jaffle_shop", "schema": "main", "name": "stg_stripe__subscription_items", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/stripe/stg_stripe__subscription_items.sql", "original_file_path": "models/staging/stripe/stg_stripe__subscription_items.sql", "unique_id": "model.mattermost_analytics.stg_stripe__subscription_items", "fqn": ["mattermost_analytics", "staging", "stripe", "stg_stripe__subscription_items"], "alias": "stg_stripe__subscription_items", "checksum": {"name": "sha256", "checksum": "3198f63cf500c72d7811365d69e5b658594a554bf6aa17bd3a4e2f9423c6fd1b"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Staging table for Stripe Subscription Items. Contains all items that are linked to a subscription.\n\nFor Self-serve self-hosted plans, at least one Subscription Item exists for each subscription:\n- The first subscription item (always there, guaranteed) is the plan for the subscription.\n- A second possible item is the Premier Support Add-On. This can only be purchased on a new subscription (ie, not a renewal). It cannot be purchased as part of a renewal. \n", "columns": {"subscription_item_id": {"name": "subscription_item_id", "description": "The primary key of subscription items.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription_id": {"name": "subscription_id", "description": "Reference to the subscription object.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "Reference to the product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "Timestamp that the subscription item was created at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plan_interval": {"name": "plan_interval", "description": "The interval of the plan (month or year).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plan_interval_count": {"name": "plan_interval_count", "description": "Count of plan_intervals for the related plan.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "Timestamp that the subscription item was created at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/stripe/_stripe__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.275402, "relation_name": "\"jaffle_shop\".main.stg_stripe__subscription_items", "raw_code": "with source as (\n\n    select * from {{ source('stripe', 'subscription_items') }}\n\n),\n\nrenamed as (\n\n    select\n        -- Primary key\n        id as subscription_item_id,\n\n        -- Foreign keys\n        subscription as subscription_id,\n        plan:product::varchar as product_id,\n\n        -- Data\n        created as created_at,\n        -- Column metadata only contains a `cloud` field with boolean value so far. This value seems to be inconsistent\n        -- with plan name. Ignoring this column for now.\n        -- metadata,\n        -- Column object has always value `subscription_item`, ignoring column.\n        -- object,\n        -- Plan is a json column. Keeping the more meaningful columns that seem to have value in all rows. More can\n        -- be added whenever needed.\n        plan:\"interval\"::varchar as plan_interval,\n        plan:\"interval_count\"::varchar as plan_interval_count,  -- Always 1 for now\n\n        -- Price is a json column. Values should be taken from invoices instead, thus ignoring for now.\n        -- price,\n        quantity\n        -- Column tax rates has always value `[]`, ignoring column.\n        -- tax_rates\n\n        -- Stitch columns omitted\n\n    from source\n\n)\n\nselect * from renamed\nwhere\n    -- Known problematic cases\n    -- On prem subscriptions with more than 2 subscription items\n    subscription_id not in (\n        'sub_IIhi2F9b4KvQof',\n        'sub_IIhmz3ZpMrAlV2'\n    )", "language": "sql", "refs": [], "sources": [["stripe", "subscription_items"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.stripe.subscription_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_stripe__invoice_line_items": {"database": "jaffle_shop", "schema": "main", "name": "stg_stripe__invoice_line_items", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/stripe/stg_stripe__invoice_line_items.sql", "original_file_path": "models/staging/stripe/stg_stripe__invoice_line_items.sql", "unique_id": "model.mattermost_analytics.stg_stripe__invoice_line_items", "fqn": ["mattermost_analytics", "staging", "stripe", "stg_stripe__invoice_line_items"], "alias": "stg_stripe__invoice_line_items", "checksum": {"name": "sha256", "checksum": "376176683527fc33689ac887af6f17f17fb25d3b835c282c3cf3b6e8de6c6b1a"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Staging table for Stripe Invoices", "columns": {"amount": {"name": "amount", "description": "Amount (in the currency specified) of the invoice item.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "Three-letter ISO currency code, in lowercase.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "An arbitrary string attached to the object. Often useful for displaying to users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discountable": {"name": "discountable", "description": "If true, discounts will apply to this invoice item. Always false for prorations.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discounts": {"name": "discounts", "description": "The discounts which apply to the invoice item.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_amounts": {"name": "discount_amounts", "description": "The amounts, of the discount.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_line_item_id": {"name": "invoice_line_item_id", "description": "The ID of the customer who will be billed when this invoice item is billed.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_id": {"name": "invoice_id", "description": "The ID of an existing invoice to add this invoice item to.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_item": {"name": "invoice_item", "description": "Invoice Items represent the component lines of an invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "String representing the objects type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period": {"name": "period", "description": "The period associated with this invoice item.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plan": {"name": "plan", "description": "Plan of the purchased item.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "The ID of the price object.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proration": {"name": "proration", "description": "Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proration_details": {"name": "proration_details", "description": "Additional details for proration line items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "Quantity of units for the invoice item.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription_id": {"name": "subscription_id", "description": "The subscription that this invoice item has been created for, if any.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription_item": {"name": "subscription_item", "description": "The subscription item that this invoice item has been created for, if any.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_amounts": {"name": "tax_amounts", "description": "The aggregate amounts calculated per tax rate for all of the items on the order.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_rates": {"name": "tax_rates", "description": "The tax rates which apply to the invoice item.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "A string identifying the type of the source of this line item.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/stripe/_stripe__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.274643, "relation_name": "\"jaffle_shop\".main.stg_stripe__invoice_line_items", "raw_code": "with source as (\n\n    select * from {{ source('stripe', 'invoice_line_items') }}\n\n),\n\ninvoice_line_items as (\n\n    select\n          amount as amount\n        , currency as currency\n        , description as description\n        , discountable as discountable\n        , discounts as discounts\n        , discount_amounts as discount_amounts\n        , id as invoice_line_item_id\n        , invoice as invoice_id\n        , invoice_item as invoice_item\n        , livemode as livemode\n        , object as object\n        , period as period\n        , plan as plan\n        , price as price\n        , proration as proration\n        , proration_details as proration_details\n        , quantity as quantity\n        , subscription as subscription_id\n        , subscription_item as subscription_item\n        , tax_amounts as tax_amounts\n        , tax_rates as tax_rates\n        , type as type\n\n    from source\n\n)\n\nselect * from invoice_line_items", "language": "sql", "refs": [], "sources": [["stripe", "invoice_line_items"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.stripe.invoice_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_stripe__invoices": {"database": "jaffle_shop", "schema": "main", "name": "stg_stripe__invoices", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/stripe/stg_stripe__invoices.sql", "original_file_path": "models/staging/stripe/stg_stripe__invoices.sql", "unique_id": "model.mattermost_analytics.stg_stripe__invoices", "fqn": ["mattermost_analytics", "staging", "stripe", "stg_stripe__invoices"], "alias": "stg_stripe__invoices", "checksum": {"name": "sha256", "checksum": "dd830eebbe5c12d3524c5e2ed1115a9672869db0720c620e35aa22a17a0598c6"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Staging table for Stripe Invoices", "columns": {"account_country": {"name": "account_country", "description": "The country of the business associated with this invoice, most often the business creating the invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_name": {"name": "account_name", "description": "The public name of the business associated with this invoice, most often the business creating the invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_due": {"name": "amount_due", "description": "Final amount due at this time for this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_paid": {"name": "amount_paid", "description": "The amount, in cents, that was paid.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_remaining": {"name": "amount_remaining", "description": "The difference between amount_due and amount_paid, in cents.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attempted": {"name": "attempted", "description": "Whether an attempt has been made to pay the invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attempt_count": {"name": "attempt_count", "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "automatic_tax": {"name": "automatic_tax", "description": "Settings and latest results for automatic tax lookup for this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "auto_advance": {"name": "auto_advance", "description": "Controls whether Stripe will perform automatic collection of the invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_reason": {"name": "billing_reason", "description": "Indicates the reason why the invoice was created.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "charge_id": {"name": "charge_id", "description": "ID of the latest charge generated for this invoice, if any.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "collection_method": {"name": "collection_method", "description": "Either charge_automatically, or send_invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "Time at which the object was created. Measured in seconds since the Unix epoch.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "Three-letter ISO currency code, in lowercase.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer": {"name": "customer", "description": "The ID of the customer who will be billed.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_address": {"name": "customer_address", "description": "The customers address. Until the invoice is finalized, this field will equal customer.address. Once the invoice is finalized, this field will no longer be updated.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_email": {"name": "customer_email", "description": "The customers email. Until the invoice is finalized, this field will equal customer.email. Once the invoice is finalized, this field will no longer be updated.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "The customers name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "line1": {"name": "line1", "description": "Address Line 1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "line2": {"name": "line2", "description": "Address Line 2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postal_code": {"name": "postal_code", "description": "Address Postal code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "City of Address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "state": {"name": "state", "description": "State of Address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "Country of Address", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_tax_exempt": {"name": "customer_tax_exempt", "description": "The customers tax exempt status.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_tax_ids": {"name": "customer_tax_ids", "description": "The customers tax IDs.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default_tax_rates": {"name": "default_tax_rates", "description": "The tax rates applied to this invoice, if any.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discounts": {"name": "discounts", "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "due_date_at": {"name": "due_date_at", "description": "The date on which payment for this invoice is due.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ending_balance": {"name": "ending_balance", "description": "Ending customer balance after the invoice is finalized.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "footer": {"name": "footer", "description": "Footer displayed on the invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hosted_invoice_url": {"name": "hosted_invoice_url", "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_id": {"name": "invoice_id", "description": "Unique identifier for the object. This property is always present unless the invoice is an upcoming invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_pdf": {"name": "invoice_pdf", "description": "The link to download the PDF for the invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lines": {"name": "lines", "description": "The individual line items that make up the invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number": {"name": "number", "description": "A unique, identifying string that appears on emails sent to the customer for this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "String representing the objects type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paid": {"name": "paid", "description": "Whether payment was successfully collected for this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paid_out_of_band": {"name": "paid_out_of_band", "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn\u2019t been paid yet or was paid on Stripe.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_intent": {"name": "payment_intent", "description": "The PaymentIntent associated with this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_settings": {"name": "payment_settings", "description": "Configuration settings for the PaymentIntent that is generated when the invoice is finalized.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period_end_at": {"name": "period_end_at", "description": "End of the usage period during which invoice items were added to this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period_start_at": {"name": "period_start_at", "description": "Start of the usage period during which invoice items were added to this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_payment_credit_notes_amount": {"name": "post_payment_credit_notes_amount", "description": "Total amount of all post-payment credit notes issued for this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pre_payment_credit_notes_amount": {"name": "pre_payment_credit_notes_amount", "description": "Total amount of all pre-payment credit notes issued for this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receipt_number": {"name": "receipt_number", "description": "This is the transaction number that appears on email receipts sent for this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "starting_balance": {"name": "starting_balance", "description": "Starting customer balance before the invoice is finalized.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "The status of the invoice, one of draft, open, paid, uncollectible, or void.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_transitions": {"name": "status_transitions", "description": "The timestamps at which the invoice status was updated.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription_id": {"name": "subscription_id", "description": "The subscription that this invoice was prepared for, if any.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax": {"name": "tax", "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "Total after discounts and taxes.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_discount_amounts": {"name": "total_discount_amounts", "description": "The aggregate amounts calculated per discount across all line items.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_tax_amounts": {"name": "total_tax_amounts", "description": "The aggregate amounts calculated per tax rate for all line items.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "Invoice Updated timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "webhooks_delivered_at": {"name": "webhooks_delivered_at", "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have been exhausted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "next_payment_attempt": {"name": "next_payment_attempt", "description": "The time at which payment will next be attempted.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment": {"name": "payment", "description": "Payment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forgiven": {"name": "forgiven", "description": "Instead of checking the forgiven field on an invoice, check for the uncollectible status.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing": {"name": "billing", "description": "Billing information associated with the invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_percent": {"name": "tax_percent", "description": "The percentage of tax on this invoice.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finalized_at": {"name": "finalized_at", "description": "The finalized_at property has been moved into the status_transitions hash.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closed_at": {"name": "closed_at", "description": "closed has been deprecated in favor of the more specific auto_advance field. Where you might have set closed=true on invoices in the past, set auto_advance=false.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "Event type that caused an invoice changes.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Time at which the object was created. Measured in seconds since the Unix epoch.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/stripe/_stripe__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.272526, "relation_name": "\"jaffle_shop\".main.stg_stripe__invoices", "raw_code": "with source as (\n\n    select * from {{ source('stripe', 'invoices') }}\n\n),\n\ninvoices as (\n\n    select\n            account_country as account_country\n          , account_name as account_name\n          , amount_due as amount_due\n          , amount_paid as amount_paid\n          , amount_remaining as amount_remaining\n          , attempted as attempted\n          , attempt_count as attempt_count\n          , automatic_tax as automatic_tax\n          , auto_advance as auto_advance\n          , billing_reason as billing_reason\n          , charge as charge_id\n          , collection_method as collection_method\n          , created as created_at\n          , currency as currency\n          , customer as customer\n          , customer_address as customer_address\n          , customer_email as customer_email\n          , customer_name as customer_name\n          , customer_shipping:\"address\":\"line1\"::string as line1\n          , customer_shipping:\"address\":\"line2\"::string as line2\n          , customer_shipping:\"address\":\"postal_code\"::string as postal_code\n          , customer_shipping:\"address\":\"city\"::string as city\n          , customer_shipping:\"address\":\"state\"::string as state\n          , customer_shipping:\"address\":\"country\"::string as country\n          , customer_shipping:\"name\"::string as customer_full_name\n          , customer_tax_exempt as customer_tax_exempt\n          , customer_tax_ids as customer_tax_ids\n          , default_tax_rates as default_tax_rates\n          , discount as discount\n          , discounts as discounts\n          , due_date as due_date_at\n          , ending_balance as ending_balance\n          , footer as footer\n          , hosted_invoice_url as hosted_invoice_url\n          , id as invoice_id\n          , invoice_pdf as invoice_pdf\n          , lines as lines\n          , livemode as livemode\n          , number as number\n          , object as object\n          , paid as paid\n          , paid_out_of_band as paid_out_of_band\n          , payment_intent as payment_intent\n          , payment_settings as payment_settings\n          , period_end as period_end_at\n          , period_start as period_start_at\n          , post_payment_credit_notes_amount as post_payment_credit_notes_amount\n          , pre_payment_credit_notes_amount as pre_payment_credit_notes_amount\n          , receipt_number as receipt_number\n          , starting_balance as starting_balance\n          , status as status\n          , status_transitions as status_transitions\n          , subscription as subscription_id\n          , subtotal as subtotal\n          , tax as tax\n          , total as total\n          , total_discount_amounts as total_discount_amounts\n          , total_tax_amounts as total_tax_amounts\n          , updated as updated_at\n          , webhooks_delivered_at as webhooks_delivered_at\n          , next_payment_attempt as next_payment_attempt\n          , payment as payment\n          , forgiven as forgiven\n          , billing as billing\n          , tax_percent as tax_percent\n          , finalized_at as finalized_at\n          , closed as closed_at\n          , updated_by_event_type as updated_by_event_type\n          , date as date\n\n    from source\n\n)\n\nselect * from invoices", "language": "sql", "refs": [], "sources": [["stripe", "invoices"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.stripe.invoices"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_stripe__subscriptions": {"database": "jaffle_shop", "schema": "main", "name": "stg_stripe__subscriptions", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/stripe/stg_stripe__subscriptions.sql", "original_file_path": "models/staging/stripe/stg_stripe__subscriptions.sql", "unique_id": "model.mattermost_analytics.stg_stripe__subscriptions", "fqn": ["mattermost_analytics", "staging", "stripe", "stg_stripe__subscriptions"], "alias": "stg_stripe__subscriptions", "checksum": {"name": "sha256", "checksum": "a54aa47f0fa5acf0f67013b8e8e6bed584a006098b6988f7ec4607a5a624a4af"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Staging table for Stripe subscriptions", "columns": {"billing": {"name": "billing", "description": "The billing type of the subscription (e.g., 'charge_automatically')", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_cycle_anchor": {"name": "billing_cycle_anchor", "description": "The date at which the current billing period ends", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cancel_at_period_end": {"name": "cancel_at_period_end", "description": "A boolean indicating whether the subscription will be canceled at the end of the current billing period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "collection_method": {"name": "collection_method", "description": "The payment collection method for the subscription (e.g., 'charge_automatically')", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "The timestamp when the subscription was created", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_period_end": {"name": "current_period_end", "description": "The end date of the current billing period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_period_start": {"name": "current_period_start", "description": "The start date of the current billing period", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "The customer to whom the subscription belongs", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription_id": {"name": "subscription_id", "description": "The ID of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_customer_balance_settings": {"name": "invoice_customer_balance_settings", "description": "The settings for automatic customer balance management", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "items": {"name": "items", "description": "An array of subscription line items", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "latest_invoice_id": {"name": "latest_invoice_id", "description": "The ID of the most recent invoice for the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "A boolean indicating whether the subscription is in live mode", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cws_dns": {"name": "cws_dns", "description": "The DNS of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cws_installation": {"name": "cws_installation", "description": "The installation ID of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cws_installation_state": {"name": "cws_installation_state", "description": "The installation state of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_type": {"name": "billing_type", "description": "The type of billing for the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_product_id": {"name": "current_product_id", "description": "The ID of the current product for the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_from_subscription_id": {"name": "renewed_from_subscription_id", "description": "The ID of the subscription that this subscription was renewed from", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_id": {"name": "license_id", "description": "The license ID for the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "migrated_license_id": {"name": "migrated_license_id", "description": "The id of the license, in case of a backfilled licenses since before Stripe.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "purchase_order_num": {"name": "purchase_order_num", "description": "The purchase order number for the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sfdc_migrated_opportunity_sfid": {"name": "sfdc_migrated_opportunity_sfid", "description": "The Opportunity SFID of the migrated subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sfdc_migrated_started_at": {"name": "sfdc_migrated_started_at", "description": "The license start date of the migrated subscription.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_type": {"name": "renewal_type", "description": "If `sales-only`, it cannot be renewed by self-serve.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "edition": {"name": "edition", "description": "The edition of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "The product ID of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "converted_to_paid_at": {"name": "converted_to_paid_at", "description": "The timestamp when the subscription was converted to paid status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_end_at": {"name": "license_end_at", "description": "The end date of the subscription's license", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actual_renewal_at": {"name": "actual_renewal_at", "description": "The timestamp of the actual renewal date for the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pending_setup_intent": {"name": "pending_setup_intent", "description": "The setup intent for the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "The quantity of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_at": {"name": "start_at", "description": "The start date of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "The status of the subscription", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "The timestamp when the subscription was last updated", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_start_at": {"name": "trial_start_at", "description": "The start date and time of the trial period for a subscription.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_percent": {"name": "tax_percent", "description": "The tax rate applied to a subscription.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ended_at": {"name": "ended_at", "description": "The date and time when a subscription ended.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_end_at": {"name": "trial_end_at", "description": "The end date and time of the trial period for a subscription.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "canceled_at": {"name": "canceled_at", "description": "The date and time when a subscription was canceled.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "The type of event that triggered the last update to the record.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default_payment_method": {"name": "default_payment_method", "description": "The default payment method for a customer's subscription.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cancel_at": {"name": "cancel_at", "description": "The date and time when a subscription will be canceled.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pause_collection": {"name": "pause_collection", "description": "A flag indicating whether collection of payment for a subscription has been paused.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "The discount applied to a subscription.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "days_until_due": {"name": "days_until_due", "description": "The number of days before a subscription is due for payment.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/stripe/_stripe__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.2631109, "relation_name": "\"jaffle_shop\".main.stg_stripe__subscriptions", "raw_code": "with source as (\n\n    select * from {{ source('stripe', 'subscriptions') }}\n\n),\n\nsubscriptions as (\n\n    select\n        billing,\n        billing_cycle_anchor,\n        cancel_at_period_end,\n        collection_method,\n        created as created_at,\n        current_period_end as current_period_end_at,\n        current_period_start as current_period_start_at,\n        customer as customer_id,\n        id as subscription_id,\n        invoice_customer_balance_settings,\n        items,\n        latest_invoice as latest_invoice_id,\n        livemode,\n        metadata:\"cws-dns\"::varchar as cws_dns,\n        metadata:\"cws-installation\"::varchar as cws_installation,\n        metadata:\"cws-installation-state\"::varchar as cws_installation_state,\n        metadata:\"billing-type\"::varchar as billing_type,\n        metadata:\"current_product_id\"::varchar as current_product_id,\n        metadata:\"cws-renewed-from-stripe-id\"::varchar as renewed_from_subscription_id,\n        metadata:\"cws-license-id\"::varchar as license_id,\n        metadata:\"sfdc-migrated-license-key\"::varchar as sfdc_migrated_license_id,\n        metadata:\"internal_purchase_order\"::varchar as purchase_order_number,\n        metadata:\"sfdc-migrated-opportunity-sfid\"::varchar as sfdc_migrated_opportunity_sfid,\n        TO_TIMESTAMP_NTZ(metadata:\"sfdc-original-start-date\"::varchar) as sfdc_migrated_started_at,\n        metadata:\"renewal-type\"::varchar as renewal_type,\n        plan:\"name\"::varchar as edition,\n        plan:\"product\"::varchar as product_id,\n        TO_TIMESTAMP_NTZ(metadata:\"cws-date-converted-to-paid\"::int) as converted_to_paid_at,\n        TO_TIMESTAMP_NTZ(metadata:\"cws-license-start-date\"::int) as license_start_at,\n        TO_TIMESTAMP_NTZ(metadata:\"cws-license-end-date\"::int) as license_end_at,\n        TO_TIMESTAMP_NTZ(metadata:\"cws-actual-renewal-date\"::int / 1000) as actual_renewal_at,\n        pending_setup_intent,\n        quantity,\n        start_date as start_at,\n        status,\n        updated as updated_at,\n        trial_start as trial_start_at,\n        tax_percent,\n        ended_at,\n        trial_end as trial_end_at,\n        canceled_at,\n        updated_by_event_type,\n        default_payment_method,\n        cancel_at,\n        pause_collection,\n        discount,\n        days_until_due\n\n    from source\n\n)\n\nselect\n    *\nfrom subscriptions\nwhere\n    -- Known problematic cases\n    -- On prem subscriptions with more than 2 subscription items\n    subscription_id not in (\n        'sub_IIhi2F9b4KvQof',\n        'sub_IIhmz3ZpMrAlV2'\n    )", "language": "sql", "refs": [], "sources": [["stripe", "subscriptions"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.stripe.subscriptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_stripe__products": {"database": "jaffle_shop", "schema": "main", "name": "stg_stripe__products", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/stripe/stg_stripe__products.sql", "original_file_path": "models/staging/stripe/stg_stripe__products.sql", "unique_id": "model.mattermost_analytics.stg_stripe__products", "fqn": ["mattermost_analytics", "staging", "stripe", "stg_stripe__products"], "alias": "stg_stripe__products", "checksum": {"name": "sha256", "checksum": "70c487cc541bc606596ff13a547a29577be4d369958f431e1561713dc0804c20"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "A staging table for Stripe products data.", "columns": {"active": {"name": "active", "description": "A boolean value indicating whether the product is currently available for purchase.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributes": {"name": "attributes", "description": "A dictionary containing additional information about the product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "The timestamp at which the product was created.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "A description of the product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "The unique identifier for the product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "images": {"name": "images", "description": "A list of URLs for images associated with the product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "A boolean value indicating whether the product is in live mode.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cws_product_family": {"name": "cws_product_family", "description": "The product family that the product belongs to.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sku": {"name": "sku", "description": "The SKU name associated with the product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippable": {"name": "shippable", "description": "A boolean value indicating whether the product can be shipped.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "The type of the product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "The timestamp at which the product was last updated.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unit_label": {"name": "unit_label", "description": "The label used to indicate the unit of measurement for a product.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "The type of event that triggered the last update to the record.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deactivate_on": {"name": "deactivate_on", "description": "The date and time when a product will be deactivated or no longer available.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/stripe/_stripe__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.264513, "relation_name": "\"jaffle_shop\".main.stg_stripe__products", "raw_code": "with source as (\n\n    select * from {{ source('stripe', 'products') }}\n\n),\n\nproducts as (\n\n    select\n        active,\n        attributes,\n        created AS created_at,\n        description,\n        id as product_id,\n        images,\n        livemode,\n        metadata:\"cws-product-family\"::varchar as cws_product_family,\n        metadata:\"cws-sku-name\"::varchar as sku,\n        name,\n        shippable,\n        type,\n        updated AS updated_at,\n        unit_label,\n        updated_by_event_type,\n        deactivate_on\n\n    from source\n\n)\n\nselect * from products", "language": "sql", "refs": [], "sources": [["stripe", "products"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.stripe.products"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.stg_stripe__customers": {"database": "jaffle_shop", "schema": "main", "name": "stg_stripe__customers", "resource_type": "model", "package_name": "mattermost_analytics", "path": "staging/stripe/stg_stripe__customers.sql", "original_file_path": "models/staging/stripe/stg_stripe__customers.sql", "unique_id": "model.mattermost_analytics.stg_stripe__customers", "fqn": ["mattermost_analytics", "staging", "stripe", "stg_stripe__customers"], "alias": "stg_stripe__customers", "checksum": {"name": "sha256", "checksum": "6705f1b34bc0707686dc7c1ccd52ce2fabcd02e95d07d94176b0e954f61e0dd2"}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["staging", "hourly"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["staging", "hourly"], "description": "Extracts and transforms data related to customer information from Stripe.", "columns": {"account_balance": {"name": "account_balance", "description": "The account balance of the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "balance": {"name": "balance", "description": "The available balance in the customer's Stripe account.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cards": {"name": "cards", "description": "The list of payment cards associated with the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "The date and time when the customer's Stripe account was created.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "The currency used for transactions made by the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delinquent": {"name": "delinquent", "description": "Indicates whether the customer's account is delinquent.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "The email address associated with the customer's Stripe account.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "The unique identifier for the customer's Stripe account.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_prefix": {"name": "invoice_prefix", "description": "The prefix used for the customer's invoices.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_settings": {"name": "invoice_settings", "description": "The invoice settings for the customer's account.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "Indicates whether the customer's Stripe account is in live mode.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_first_name": {"name": "contact_first_name", "description": "The first name of the customer's contact person.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_last_name": {"name": "contact_last_name", "description": "The last name of the customer's contact person.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "portal_customer_id": {"name": "portal_customer_id", "description": "The identifier for the customer in the portal site.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "The name associated with the customer's Stripe account.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "next_invoice_sequence": {"name": "next_invoice_sequence", "description": "The next sequential number for the customer's invoices.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preferred_locales": {"name": "preferred_locales", "description": "The preferred languages of the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sources": {"name": "sources", "description": "The payment sources associated with the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscriptions": {"name": "subscriptions", "description": "The subscriptions associated with the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_exempt": {"name": "tax_exempt", "description": "Indicates whether the customer is tax exempt.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "The date and time when the customer's Stripe account was last updated.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default_source": {"name": "default_source", "description": "The default payment source associated with the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "The customer's shipping information.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_ids": {"name": "tax_ids", "description": "The tax IDs associated with the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "The customer's billing address.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default_card": {"name": "default_card", "description": "The default payment card associated with the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "The discount.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "The event type that updated the customer.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/staging/stripe/_stripe__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dbt_staging", "tags": ["staging", "hourly"]}, "created_at": 1699414207.2578099, "relation_name": "\"jaffle_shop\".main.stg_stripe__customers", "raw_code": "with source as (\n\n    select * from {{ source('stripe', 'customers') }}\n\n),\n\ncustomers as (\n\n    select\n        account_balance,\n        balance,\n        cards,\n        created as created_at,\n        currency,\n        delinquent,\n        email,\n        id as customer_id,\n        invoice_prefix,\n        invoice_settings,\n        livemode,\n        COALESCE(metadata:\"contactfirstname\"::string, \n        metadata:\"cws-additional-contact-first-name\"::string) as contact_first_name,\n        COALESCE(metadata:\"contactlastname\"::string, \n        metadata:\"cws-additional-contact-last-name\"::string) as contact_last_name,\n        metadata:\"cws-customer\"::varchar as portal_customer_id,\n        metadata,\n        name,\n        next_invoice_sequence,\n        preferred_locales,\n        sources,\n        subscriptions,\n        tax_exempt,\n        updated as updated_at,\n        default_source,\n        shipping,\n        tax_ids,\n        address,\n        default_card,\n        discount,\n        updated_by_event_type\n\n    from source\n\n)\n\nselect * from customers", "language": "sql", "refs": [], "sources": [["stripe", "customers"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.mattermost_analytics.stripe.customers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.grp_performance_events": {"database": "jaffle_shop", "schema": "main", "name": "grp_performance_events", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/web_app/platform/grp_performance_events.sql", "original_file_path": "models/marts/web_app/platform/grp_performance_events.sql", "unique_id": "model.mattermost_analytics.grp_performance_events", "fqn": ["mattermost_analytics", "marts", "web_app", "platform", "grp_performance_events"], "alias": "grp_performance_events", "checksum": {"name": "sha256", "checksum": "81bef6230f7e577eac43437976be1cc1810636663bd0fb810183d5900690da21"}, "config": {"enabled": true, "alias": null, "schema": "mart_web_app", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "append", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "cluster_by": ["event_date"], "snowflake_warehouse": "transform_l"}, "tags": ["marts", "nightly"], "description": "Events Group performance_events table containing metrics \nfrom web-app and web-app RC telemetry for category = performance.\n", "columns": {"_source_relation": {"name": "_source_relation", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "anonymous_id": {"name": "anonymous_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_at": {"name": "sent_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_timestamp": {"name": "original_timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_ip": {"name": "context_ip", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event": {"name": "event", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_text": {"name": "event_text", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel": {"name": "channel", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_namespace": {"name": "context_app_namespace", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_actual_id": {"name": "user_actual_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_name": {"name": "context_library_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_version": {"name": "context_app_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_actual_role": {"name": "user_actual_role", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_build": {"name": "context_app_build", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_library_version": {"name": "context_library_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_useragent": {"name": "context_useragent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_app_name": {"name": "context_app_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_locale": {"name": "context_locale", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "context_screen_density": {"name": "context_screen_density", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duration": {"name": "duration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_of_request": {"name": "num_of_request", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "max_api_resource_size": {"name": "max_api_resource_size", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "longest_api_resource_duration": {"name": "longest_api_resource_duration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count": {"name": "count", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_count": {"name": "request_count", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/web_app/platform/_platform__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "mart_web_app", "cluster_by": ["event_date"], "incremental_strategy": "append", "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.314046, "relation_name": "\"jaffle_shop\".main.grp_performance_events", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"cluster_by\": ['event_date'],\n        \"incremental_strategy\": \"append\",\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\nWITH performance_rc AS (\n    SELECT \n        'int_mm_telemetry_rc_performance_events' AS _source_relation,\n        {{dbt_utils.star(ref('int_mm_telemetry_rc_performance_events'))}}\n     FROM\n       {{ ref('int_mm_telemetry_rc_performance_events') }}\n{% if is_incremental() %}\n    WHERE received_at > (\n        SELECT MAX(received_at)\n        FROM {{ this }} \n        WHERE _source_relation = 'int_mm_telemetry_rc_performance_events') \n{% endif %}\n), \nperformance_prod AS (\n    SELECT\n        'int_mm_telemetry_prod_performance_events' AS _source_relation,\n        {{dbt_utils.star(ref('int_mm_telemetry_prod_performance_events'))}}\n     FROM\n       {{ ref('int_mm_telemetry_prod_performance_events') }}\n{% if is_incremental() %}\n    WHERE received_at > (SELECT MAX(received_at) FROM {{ this }} \n    WHERE _source_relation = 'int_mm_telemetry_prod_performance_events')  \n\n{% endif %}\n)\n  SELECT * FROM performance_rc\n  UNION ALL\n  SELECT * FROM performance_prod", "language": "sql", "refs": [{"name": "int_mm_telemetry_rc_performance_events", "package": null, "version": null}, {"name": "int_mm_telemetry_rc_performance_events", "package": null, "version": null}, {"name": "int_mm_telemetry_prod_performance_events", "package": null, "version": null}, {"name": "int_mm_telemetry_prod_performance_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star", "macro.dbt.is_incremental"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_rc_performance_events", "model.mattermost_analytics.int_mm_telemetry_prod_performance_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.grp_community_tracks": {"database": "jaffle_shop", "schema": "main", "name": "grp_community_tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/web_app/community/grp_community_tracks.sql", "original_file_path": "models/marts/web_app/community/grp_community_tracks.sql", "unique_id": "model.mattermost_analytics.grp_community_tracks", "fqn": ["mattermost_analytics", "marts", "web_app", "community", "grp_community_tracks"], "alias": "grp_community_tracks", "checksum": {"name": "sha256", "checksum": "b8de10ceaec997cc8cc3d33d1196623ea4fd27f2ffc1da4f912d875d9d95a449"}, "config": {"enabled": true, "alias": null, "schema": "mart_web_app", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "cluster_by": ["event_date"], "snowflake_warehouse": "transform_l"}, "tags": ["marts", "nightly"], "description": "Rudderstack default columns from tracks for Community.\n", "columns": {"event_id": {"name": "event_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at": {"name": "received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/web_app/community/_community__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_web_app", "cluster_by": ["event_date"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.319922, "relation_name": "\"jaffle_shop\".main.grp_community_tracks", "raw_code": "{{\n    config({\n        \"cluster_by\": ['event_date'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\nselect\n    {{ dbt_utils.star(ref('int_mm_telemetry_prod__community_tracks')) }}\n    , timestamp::date as event_date\nfrom\n    {{ref('int_mm_telemetry_prod__community_tracks')}}\n\nunion all\n\nselect\n    {{ dbt_utils.star(ref('int_mm_telemetry_rc__community_tracks')) }}\n    , timestamp::date as event_date\nfrom\n    {{ref('int_mm_telemetry_rc__community_tracks')}}", "language": "sql", "refs": [{"name": "int_mm_telemetry_prod__community_tracks", "package": null, "version": null}, {"name": "int_mm_telemetry_prod__community_tracks", "package": null, "version": null}, {"name": "int_mm_telemetry_rc__community_tracks", "package": null, "version": null}, {"name": "int_mm_telemetry_rc__community_tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_prod__community_tracks", "model.mattermost_analytics.int_mm_telemetry_rc__community_tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.fct_events_daily_snapshot": {"database": "jaffle_shop", "schema": "main", "name": "fct_events_daily_snapshot", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/data_eng/event_registry/fct_events_daily_snapshot.sql", "original_file_path": "models/marts/data_eng/event_registry/fct_events_daily_snapshot.sql", "unique_id": "model.mattermost_analytics.fct_events_daily_snapshot", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "fct_events_daily_snapshot"], "alias": "fct_events_daily_snapshot", "checksum": {"name": "sha256", "checksum": "c824fbf8b8c2c9d2573023ad9c8c11efca759e28ad95d51d4df04a697b3314d4"}, "config": {"enabled": true, "alias": null, "schema": "mart_data_eng", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "cluster_by": ["event_date"]}, "tags": ["marts", "nightly"], "description": "Snapshot fact table, containing metrics for each event on a daily granularity.\n", "columns": {"id": {"name": "id", "description": "A unique id for the current fact table row.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "The date for the current event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The id of the event. Used for joining with event dimension.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The total number of events for the given date and event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/data_eng/event_registry/_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_data_eng", "cluster_by": ["event_date"]}, "created_at": 1699414207.332298, "relation_name": "\"jaffle_shop\".main.fct_events_daily_snapshot", "raw_code": "{{\n    config({\n        \"cluster_by\": ['event_date']\n    })\n}}\n\nSELECT DISTINCT\n    daily_event_id AS id\n    , received_at_date AS event_date\n    , event_id\n    , event_count\nFROM\n    {{ ref('int_events_aggregated_to_date') }}", "language": "sql", "refs": [{"name": "int_events_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_events_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_events": {"database": "jaffle_shop", "schema": "main", "name": "dim_events", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/data_eng/event_registry/dim_events.sql", "original_file_path": "models/marts/data_eng/event_registry/dim_events.sql", "unique_id": "model.mattermost_analytics.dim_events", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "dim_events"], "alias": "dim_events", "checksum": {"name": "sha256", "checksum": "191511d9342ce21a23990229d2245bccad1509c9e007b9298f2e7ec1666c2df2"}, "config": {"enabled": true, "alias": null, "schema": "mart_data_eng", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Dimensions table for events. Contains all textual information related to an event.\n", "columns": {"event_id": {"name": "event_id", "description": "A unique id for the current fact table row.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event, as submitted using Rudderstack's `track` function.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The name of the table where the event is stored by Rudderstack.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The category of the event. Present only on some events.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The type of the event. Present only on some events.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "A user-friendly string describing the source system of the event.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/data_eng/event_registry/_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_data_eng"}, "created_at": 1699414207.332844, "relation_name": "\"jaffle_shop\".main.dim_events", "raw_code": "SELECT DISTINCT\n    event_id\n    , event_name\n    , event_table\n    , category\n    , event_type\n    , source\nFROM\n    {{ ref('int_events_aggregated_to_date') }}", "language": "sql", "refs": [{"name": "int_events_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_events_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.fct_in_product_trial_requests": {"database": "jaffle_shop", "schema": "main", "name": "fct_in_product_trial_requests", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/sales/hightouch/fct_in_product_trial_requests.sql", "original_file_path": "models/marts/sales/hightouch/fct_in_product_trial_requests.sql", "unique_id": "model.mattermost_analytics.fct_in_product_trial_requests", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "fct_in_product_trial_requests"], "alias": "fct_in_product_trial_requests", "checksum": {"name": "sha256", "checksum": "71c04ea6c82a94ded7503b36e206fa42d3549dc33b985c56f1184b8f7ff509b3"}, "config": {"enabled": true, "alias": null, "schema": "mart_sales", "database": null, "tags": ["marts", "nightly", "hourly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly", "hourly"], "description": "Trial request data from Customer Web Server to be synced to Salesforce.\n", "columns": {"trial_request_id": {"name": "trial_request_id", "description": "The id of the trial request.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "The user's full name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "first_name": {"name": "first_name", "description": "The user's first name. This value may originate from:\n  - First name (if directly provided).\n  - By splitting the name string on first space and keeping the first part.\n  - If none of the above are available, the first 40 characters of the \"username\" part of the email.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "last_name": {"name": "last_name", "description": "The user's last name. This value may originate from:\n  - Last name (if directly provided).\n  - By splitting the name string on first space and keeping the second part.\n  - If none of the above are available, the first 40 characters of the \"username\" part of the email.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "company_size": {"name": "company_size", "description": "The lower bound of the company size bucket.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_name": {"name": "company_name", "description": "The company's name. If not provided, `Unknown` is used.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "normalized_email": {"name": "normalized_email", "description": "The contact email provided in the signup form. If not filled in, it's the email of the user \nrequesting the trial. Email is lowercased in order to match Salesforce lowercased emails.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "country_name": {"name": "country_name", "description": "The requester's country.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "trial_start_at": {"name": "trial_start_at", "description": "The starting date of the trial.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_users": {"name": "num_users", "description": "Number of end users for the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_existing_lead": {"name": "is_existing_lead", "description": "Whether there's already a lead with the same email.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_existing_campaign_member": {"name": "is_existing_campaign_member", "description": "Whether there's already a campaign member for the same email and lead.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_valid_email": {"name": "is_valid_email", "description": "Whether the email is valid. Used to skip invalid emails.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_id": {"name": "lead_id", "description": "The id of the lead to update (if any exists), matched on email.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_member_status": {"name": "campaign_member_status", "description": "The campaign member's status.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The id of the campaign to attribute this lead to.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/sales/hightouch/_hightouch__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hourly"], "schema": "mart_sales"}, "created_at": 1699414207.358371, "relation_name": "\"jaffle_shop\".main.fct_in_product_trial_requests", "raw_code": "{% set size_buckets = {\n    'ONE_TO_50': 1,\n    'FIFTY_TO_100': 50,\n    'ONE_HUNDRED_TO_500': 100,\n    'FIVE_HUNDRED_TO_1000': 500,\n    'ONE_THOUSAND_TO_2500': 1000,\n    'TWO_THOUSAND_FIVE_HUNDRED_AND_UP': 2500\n}\n%}\n\nwith trial_requests as (\n    select\n        trial_request_id,                                   -- Primary key\n        -- Convention followed in SF\n        coalesce(\n            name,\n            left(email, 40)\n        ) as name,                                              -- Mapped to field name of lead\n        -- Salesforce lowercases email\n        lower(coalesce(contact_email, email)) as normalized_email, -- Mapped to field email of lead\n        left(split_part(normalized_email, '@', 1), 40) as email_prefix, -- To be used in case name is missing.\n        coalesce(\n            first_name,\n            case when extracted_first_name = '' then null else extracted_first_name end,\n            email_prefix\n        ) as first_name,                                        -- Mapped to field first_name of lead\n        coalesce(\n            last_name,\n            case when extracted_last_name = '' then null else extracted_last_name end,\n            email_prefix\n        ) as last_name,         -- Mapped to field last_name of lead\n        case\n        {% for bucket, size_lower in size_buckets.items() -%}\n            when company_size_bucket = '{{bucket}}' then {{size_lower}}\n        {% endfor -%}\n        end as company_size,                                    -- Mapping lower threshold\n        coalesce(company_name, 'Unknown') as company_name,      -- Mapped to field company of lead\n        case\n           -- Fix inconsistency in country name so that it matches values expected by SF\n           when country_name = 'United States of America' then 'United States'\n           else country_name\n        end as country_name,                                -- Mapped to field country\n        start_at as trial_start_at,                         -- Mapped to request_a_trial_date__c and Click_to_Accept_Date_Time_Trial__c\n        num_users                                           -- Mapped to field numberofemployees of lead\n    from\n        {{ ref('stg_cws__trial_requests')}}\n    -- Sync the most recent trial\n    qualify row_number() over (partition by normalized_email order by trial_start_at desc) = 1\n)\nselect\n    -- Lead fields\n    tr.*,\n    l.lead_id is not null as is_existing_lead,\n    -- Campaign member fields\n    cm.campaign_member_id is not null as is_existing_campaign_member,\n    l.lead_id,\n    'Responded' as campaign_member_status,\n    '{{ var('in_product_trial_campaign_id') }}' as campaign_id,\n    -- Extra validation\n    {{ validate_email('tr.normalized_email') }} as is_valid_email\nfrom\n    trial_requests tr\n    left join {{ ref('stg_salesforce__lead') }} l on tr.normalized_email = l.email\n    left join {{ ref('stg_salesforce__campaign_member') }} cm\n        on l.lead_id = cm.lead_id and tr.normalized_email = cm.email and cm.campaign_id = '{{ var('in_product_trial_campaign_id') }}'\nwhere\n    -- Skip invalid emails\n    is_valid_email\n-- Update oldest lead\nqualify row_number() over (partition by tr.normalized_email order by l.created_at asc) = 1", "language": "sql", "refs": [{"name": "stg_cws__trial_requests", "package": null, "version": null}, {"name": "stg_salesforce__lead", "package": null, "version": null}, {"name": "stg_salesforce__campaign_member", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.validate_email"], "nodes": ["model.mattermost_analytics.stg_cws__trial_requests", "model.mattermost_analytics.stg_salesforce__lead", "model.mattermost_analytics.stg_salesforce__campaign_member"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.fct_cloud_trial_requests": {"database": "jaffle_shop", "schema": "main", "name": "fct_cloud_trial_requests", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/sales/hightouch/fct_cloud_trial_requests.sql", "original_file_path": "models/marts/sales/hightouch/fct_cloud_trial_requests.sql", "unique_id": "model.mattermost_analytics.fct_cloud_trial_requests", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "fct_cloud_trial_requests"], "alias": "fct_cloud_trial_requests", "checksum": {"name": "sha256", "checksum": "11d4d27bf4b506b1c4c77e385357aed2088a60a80748f9f276724f5b4edbce3c"}, "config": {"enabled": true, "alias": null, "schema": "mart_sales", "database": null, "tags": ["marts", "nightly", "hourly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly", "hourly"], "description": "Trial request data coming from the source Stripe, only limited to creating campaign member objects in Salesforce.\n", "columns": {"email": {"name": "email", "description": "Customer email for cloud trial requests coming from Stripe.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "is_existing_lead": {"name": "is_existing_lead", "description": "Whether there's already a lead with the same email.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_existing_campaign_member": {"name": "is_existing_campaign_member", "description": "Whether there's already a campaign member for the same email and lead.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_member_status": {"name": "campaign_member_status", "description": "The campaign member's status.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_valid_email": {"name": "is_valid_email", "description": "Whether the email is valid. Used to skip invalid emails.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/sales/hightouch/_hightouch__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hourly"], "schema": "mart_sales"}, "created_at": 1699414207.358725, "relation_name": "\"jaffle_shop\".main.fct_cloud_trial_requests", "raw_code": "with cloud_trial_requests_pre as (\n    select\n        email,\n        cws_installation, \n        trial_start_at,\n        trial_end_at\n    from\n        {{ ref('int_cloud_trial_requests') }} -- Fetch the most recent cloud trial\n        qualify row_number() over (\n            partition by email\n            order by\n                trial_start_at desc\n        ) = 1\n),\ncloud_trial_requests as (\n    select\n        ctr.email,\n        ctr.trial_start_at,\n        ctr.trial_end_at,\n        l.lead_id as existing_lead_id,\n        cm.campaign_member_id as existing_campaign_member_id,\n        '{{ var('cloud_enterprise_trial_campaign_id') }}' as campaign_id,\n        l.lead_id is not null as is_existing_lead,\n        cm.campaign_member_id is not null as is_existing_campaign_member,\n        -- Campaign member status\n        CASE\n            WHEN ctr.cws_installation is not null then 'Workspace Created'\n            ELSE null\n        END as campaign_member_status,\n        -- Extra validation\n        {{ validate_email('ctr.email') }} as is_valid_email\n    from\n        cloud_trial_requests_pre ctr\n        left join {{ ref('stg_salesforce__lead') }} l on ctr.email = l.email\n        left join {{ ref('stg_salesforce__campaign_member') }} cm on l.lead_id = cm.lead_id\n        and ctr.email = cm.email\n        and cm.campaign_id = '{{ var('cloud_enterprise_trial_campaign_id') }}'\n    where\n        is_valid_email\n        -- Rows may fan out in case of multiple leads with same email address, fetching the one with the latest created_at date.\n        qualify row_number() over (\n            partition by ctr.email\n            order by\n                l.created_at asc\n        ) = 1\n)\nselect\n    *\nfrom\n    cloud_trial_requests", "language": "sql", "refs": [{"name": "int_cloud_trial_requests", "package": null, "version": null}, {"name": "stg_salesforce__lead", "package": null, "version": null}, {"name": "stg_salesforce__campaign_member", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.validate_email"], "nodes": ["model.mattermost_analytics.int_cloud_trial_requests", "model.mattermost_analytics.stg_salesforce__lead", "model.mattermost_analytics.stg_salesforce__campaign_member"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_fix_versions": {"database": "jaffle_shop", "schema": "main", "name": "dim_fix_versions", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/release/dim_fix_versions.sql", "original_file_path": "models/marts/release/dim_fix_versions.sql", "unique_id": "model.mattermost_analytics.dim_fix_versions", "fqn": ["mattermost_analytics", "marts", "release", "dim_fix_versions"], "alias": "dim_fix_versions", "checksum": {"name": "sha256", "checksum": "93f83af531d1698af9e604675db95503512264ea9b8e92878a98ac625e68d03c"}, "config": {"enabled": true, "alias": null, "schema": "mart_release", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Fix versions for the given issue.", "columns": {"issue_id": {"name": "issue_id", "description": "The issue's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fix_version": {"name": "fix_version", "description": "The raw fix version value.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "semver": {"name": "semver", "description": "The semantic version part of the fix version.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major part version of the version. I.e. for `v7.5` it's 7.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor part version of the version. I.e. for `v7.5` it's 5.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "component": {"name": "component", "description": "The component that this version applies to. Valid values are Mobile, Desktop, Mobile, Playbooks,\nIR, Cloud and Apps or null (for old versions).\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_release_date": {"name": "cloud_release_date", "description": "The Cloud release date. Not null only when component is Cloud.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "planned_release_date": {"name": "planned_release_date", "description": "The date that the release in semver column is planned for. Applies only for Cloud/OnPrem.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/release/_release__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_release"}, "created_at": 1699414207.380577, "relation_name": "\"jaffle_shop\".main.dim_fix_versions", "raw_code": "WITH unparsed_fix_versions AS (\n    -- Implement filtering on this layer as it's only used here.\n    SELECT\n        issue_id,\n        value:name::string as fix_version_name,\n        -- Break down different variations of target version\n        REGEXP_SUBSTR(fix_version_name, 'v\\\\d+\\.\\\\d+') AS semver,\n        REGEXP_SUBSTR(semver, 'v(\\\\d+)', 1, 1, 'e', 1)::int AS version_major,\n        REGEXP_SUBSTR(semver, '\\\\.(\\\\d+)', 1, 1, 'e', 1)::int AS version_minor,\n        CASE\n            WHEN fix_version_name ILIKE '%mobile%' THEN 'Mobile'\n            WHEN fix_version_name ILIKE '%desktop%' THEN 'Desktop'\n            WHEN fix_version_name ILIKE '%playbooks%' THEN 'Playbooks'\n            WHEN fix_version_name ILIKE '%ir%' THEN 'IR'\n            WHEN fix_version_name ILIKE '%cloud%' THEN 'Cloud'\n            WHEN fix_version_name ILIKE '%apps%' THEN 'Apps'\n        END AS component,\n        TO_DATE(REGEXP_SUBSTR(fix_version_name, '\\\\d{2}/\\\\d{2}/\\\\d{2}'), 'mm/dd/yy') AS cloud_release_date\n    FROM\n        {{ ref('stg_mattermost_jira__issues') }},\n        LATERAL FLATTEN(INPUT => fix_versions)\n    WHERE\n        -- Keep only relevant fix versions - ones that contain a version in the form `v[major].[minor]`\n        REGEXP_LIKE(fix_version_name, '.*v\\\\d+\\.\\\\d+.*', 'i')\n)\nSELECT\n    fv.issue_id,\n    fv.fix_version_name AS fix_version,\n    fv.semver,\n    fv.version_major,\n    fv.version_minor,\n    fv.component,\n    fv.cloud_release_date,\n    rd.planned_release_date\nFROM\n    unparsed_fix_versions fv\n    -- Add planned release date by looking up dates ONLY for Cloud and On Prem releases)\n    LEFT JOIN {{ ref('stg_mattermost__version_release_dates') }} rd\n        ON fv.semver = rd.short_version AND (fv.component IS NULL OR fv.component = 'Cloud')", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}, {"name": "stg_mattermost__version_release_dates", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues", "model.mattermost_analytics.stg_mattermost__version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_labels": {"database": "jaffle_shop", "schema": "main", "name": "dim_labels", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/release/dim_labels.sql", "original_file_path": "models/marts/release/dim_labels.sql", "unique_id": "model.mattermost_analytics.dim_labels", "fqn": ["mattermost_analytics", "marts", "release", "dim_labels"], "alias": "dim_labels", "checksum": {"name": "sha256", "checksum": "da1e556b3b3d40de94264b24a9832fd1bc83d80a54e0ea3bfa7ff33c7ae4ac01"}, "config": {"enabled": true, "alias": null, "schema": "mart_release", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Dimension storing all labels assigned to an issue.", "columns": {"issue_id": {"name": "issue_id", "description": "The issue's ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "label": {"name": "label", "description": "The label assigned to the issue.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/release/_release__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_release"}, "created_at": 1699414207.379203, "relation_name": "\"jaffle_shop\".main.dim_labels", "raw_code": "SELECT\n     issue_id,\n     value::string as label\nFROM\n    {{ ref('stg_mattermost_jira__issues') }},\n    LATERAL FLATTEN(INPUT => labels)", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_projects": {"database": "jaffle_shop", "schema": "main", "name": "dim_projects", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/release/dim_projects.sql", "original_file_path": "models/marts/release/dim_projects.sql", "unique_id": "model.mattermost_analytics.dim_projects", "fqn": ["mattermost_analytics", "marts", "release", "dim_projects"], "alias": "dim_projects", "checksum": {"name": "sha256", "checksum": "c84fc6b8a93606a3f5aca42ff3a47f2a2a7c73e1e21e6c1ccf11711cad568aec"}, "config": {"enabled": true, "alias": null, "schema": "mart_release", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Dimension storing all known projects.", "columns": {"project_id": {"name": "project_id", "description": "The project's unique ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_key": {"name": "project_key", "description": "The project's key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "The project's name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/release/_release__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_release"}, "created_at": 1699414207.3795671, "relation_name": "\"jaffle_shop\".main.dim_projects", "raw_code": "SELECT\n    {{ dbt_utils.star(ref('stg_mattermost_jira__projects')) }}\nFROM\n    {{ ref('stg_mattermost_jira__projects') }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__projects", "package": null, "version": null}, {"name": "stg_mattermost_jira__projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.fct_issues_daily_snapshot": {"database": "jaffle_shop", "schema": "main", "name": "fct_issues_daily_snapshot", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/release/fct_issues_daily_snapshot.sql", "original_file_path": "models/marts/release/fct_issues_daily_snapshot.sql", "unique_id": "model.mattermost_analytics.fct_issues_daily_snapshot", "fqn": ["mattermost_analytics", "marts", "release", "fct_issues_daily_snapshot"], "alias": "fct_issues_daily_snapshot", "checksum": {"name": "sha256", "checksum": "6540fedafb6b676cc076a72dfb55a4aeb3428d07502e67eab5225449722fa68c"}, "config": {"enabled": true, "alias": null, "schema": "mart_release", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Issues snapshot facts. Stores a snapshot of all issues, updated daily.", "columns": {"issue_id": {"name": "issue_id", "description": "The issue's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issue_key": {"name": "issue_key", "description": "The issue's key (example MM-12345).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_id": {"name": "project_id", "description": "The project's ID.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issue_type": {"name": "issue_type", "description": "The type of the issue (bug, task, feature etc).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "The timestamp that the project was created.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closed_at": {"name": "closed_at", "description": "The timestamp that the issue was closed. Uses the last `updated_at` value if the issue has a status of `Closed` or `Done`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "The status of the ticket.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution": {"name": "resolution", "description": "The resolution of the ticket.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_time_in_days": {"name": "lead_time_in_days", "description": "The lead time, defined as the number of days between `created_at` and `closed_at`. Null if the issue hasn't been closed yet.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/release/_release__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_release"}, "created_at": 1699414207.3819299, "relation_name": "\"jaffle_shop\".main.fct_issues_daily_snapshot", "raw_code": "SELECT\n    issue_id,\n    issue_key,\n    project_id,\n    created_at,\n    CASE\n        WHEN status_name IN ('Closed', 'Done') THEN updated_at\n    END AS closed_at,\n    issue_type_name AS issue_type,\n    status_name AS status,\n    resolution_name AS resolution,\n    {{ datediff(\"created_at\", \"closed_at\", \"day\") }} AS lead_time_in_days\nFROM\n    {{ ref('stg_mattermost_jira__issues') }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.datediff"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_server_info": {"database": "jaffle_shop", "schema": "main", "name": "dim_server_info", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/product/dim_server_info.sql", "original_file_path": "models/marts/product/dim_server_info.sql", "unique_id": "model.mattermost_analytics.dim_server_info", "fqn": ["mattermost_analytics", "marts", "product", "dim_server_info"], "alias": "dim_server_info", "checksum": {"name": "sha256", "checksum": "32e9be41315c9ae7f8538a09f2b4ea45507cfe6c5be38f21896b4fb48a7fa635"}, "config": {"enabled": true, "alias": null, "schema": "mart_product", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Static information for a given server.", "columns": {"server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_id": {"name": "installation_id", "description": "The id of the installation. Exists only for cloud installations.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hosting_type": {"name": "hosting_type", "description": "Type of hosting for this server. Can be one of:\n- `Cloud`: server always reports an installation id\n- `Self-hosted`: server always reports a null installation id.\n- `Unknown`: missing server info or server reports a mix of cloud and self hosted.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/product/_product__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_product"}, "created_at": 1699414207.427283, "relation_name": "\"jaffle_shop\".main.dim_server_info", "raw_code": "with hosting_type_info as (\n    -- Summarize server hosting type information\n    select\n        server_id,\n        -- Aggregate is cloud in order to validate whether the server is cloud or not\n        count_if(is_cloud = true) as count_is_cloud_days,\n        count_if(is_cloud = false) as count_not_is_cloud_days\n    from\n         {{ ref('int_server_active_days_spined') }}\n    group by\n        server_id\n), latest_values as (\n    -- Get latest values for installation id (if exists) and full version string\n    select\n        server_id,\n        installation_id\n    from\n         {{ ref('int_server_active_days_spined') }}\n    -- Keep latest record per day\n    qualify row_number() over (partition by server_id order by activity_date desc) = 1\n)\nselect\n    hti.server_id,\n    case\n        when count_is_cloud_days > 0 and count_not_is_cloud_days = 0 then 'Cloud'\n        when count_is_cloud_days = 0 and count_not_is_cloud_days > 0 then 'Self-hosted'\n        else 'Unknown'\n    end as hosting_type,\n    l.installation_id\nfrom\n    hosting_type_info hti\n    join latest_values l on hti.server_id = l.server_id", "language": "sql", "refs": [{"name": "int_server_active_days_spined", "package": null, "version": null}, {"name": "int_server_active_days_spined", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_server_active_days_spined"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_daily_server_info": {"database": "jaffle_shop", "schema": "main", "name": "dim_daily_server_info", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/product/dim_daily_server_info.sql", "original_file_path": "models/marts/product/dim_daily_server_info.sql", "unique_id": "model.mattermost_analytics.dim_daily_server_info", "fqn": ["mattermost_analytics", "marts", "product", "dim_daily_server_info"], "alias": "dim_daily_server_info", "checksum": {"name": "sha256", "checksum": "aad2d131cd76a3d18882477eef174ba2e8d857254d557e6f50094eefb1742ec4"}, "config": {"enabled": true, "alias": null, "schema": "mart_product", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "snowflake_warehouse": "transform_l"}, "tags": ["marts", "nightly"], "description": "Daily information about the server based on telemetry data. In case of multiple values in a day, the latest\nvalue is kept. Does not contain servers marked for exclusion.\n", "columns": {"daily_server_id": {"name": "daily_server_id", "description": "A unique id for each server and date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activity_date": {"name": "activity_date", "description": "The date that server sent the information.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_type": {"name": "installation_type", "description": "The method used for installing the Mattermost server (docker, deb package, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_ip": {"name": "server_ip", "description": "The IP address of the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "The name of the operating system the server is installed at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type": {"name": "database_type", "description": "The type of the database used for this installation (i.e. postgres, mysql, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_version": {"name": "database_version", "description": "The version of the database.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_enterprise_ready": {"name": "is_enterprise_ready", "description": "Whether this server is an enterprise-ready build.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reported_versions": {"name": "reported_versions", "description": "The unique versions reported from the server for that date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_reported_versions": {"name": "count_reported_versions", "description": "The total number of distinct versions reported for the given date & server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_telemetry_data": {"name": "has_telemetry_data", "description": "Whether there were telemetry data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_legacy_telemetry_data": {"name": "has_legacy_telemetry_data", "description": "Whether there were legacy (segment) telemetry data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_diagnostics_data": {"name": "has_diagnostics_data", "description": "Whether there were security update server data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/product/_product__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_product", "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.4250472, "relation_name": "\"jaffle_shop\".main.dim_daily_server_info", "raw_code": "{{\n    config({\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\nselect\n    daily_server_id,\n    server_id,\n    activity_date,\n    operating_system,\n    database_type,\n    database_version,\n    is_enterprise_ready,\n    installation_id,\n    server_ip,\n    installation_type,\n    count_reported_versions,\n    has_telemetry_data,\n    has_legacy_telemetry_data,\n    has_diagnostics_data\nfrom\n    {{ ref('int_server_active_days_spined') }}\nwhere\n    server_id not in (\n        select server_id from {{ ref('int_excludable_servers') }} where server_id is not null\n    )", "language": "sql", "refs": [{"name": "int_server_active_days_spined", "package": null, "version": null}, {"name": "int_excludable_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_server_active_days_spined", "model.mattermost_analytics.int_excludable_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_daily_server_config": {"database": "jaffle_shop", "schema": "main", "name": "dim_daily_server_config", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/product/dim_daily_server_config.sql", "original_file_path": "models/marts/product/dim_daily_server_config.sql", "unique_id": "model.mattermost_analytics.dim_daily_server_config", "fqn": ["mattermost_analytics", "marts", "product", "dim_daily_server_config"], "alias": "dim_daily_server_config", "checksum": {"name": "sha256", "checksum": "b62ef399df017ac432b2484f5177ecc9f388dc502cb0fe1cea3c5e5f04aef4a4"}, "config": {"enabled": true, "alias": null, "schema": "mart_product", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Daily server configuration.", "columns": {"daily_server_id": {"name": "daily_server_id", "description": "A unique id for each server and date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_office365_enabled": {"name": "is_office365_enabled", "description": "Whether Office365 OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_google_enabled": {"name": "is_google_enabled", "description": "Whether Google OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_gitlab_enabled": {"name": "is_gitlab_enabled", "description": "Whether Gitlab OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_openid_enabled": {"name": "is_openid_enabled", "description": "Whether OpenID OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_openid_google_enabled": {"name": "is_openid_google_enabled", "description": "Whether OpenID with Google OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_openid_gitlab_enabled": {"name": "is_openid_gitlab_enabled", "description": "Whether OpenID with Gitlab OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_openid_office365_enabled": {"name": "is_openid_office365_enabled", "description": "Whether OpenID with Office365 OAuth is enabled", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/product/_product__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_product"}, "created_at": 1699414207.427671, "relation_name": "\"jaffle_shop\".main.dim_daily_server_config", "raw_code": "with segment_oauth as (\n    select\n        server_id,\n        cast(timestamp as date) as server_date,\n        {{ dbt_utils.generate_surrogate_key(['server_id', 'server_date']) }} as daily_server_id,\n\n        is_office365_enabled,\n        is_google_enabled,\n        is_gitlab_enabled\n    from\n        {{ ref('stg_mattermost2__oauth') }}\n    qualify row_number() over (partition by server_id, server_date order by timestamp desc) = 1\n), rudderstack_oauth as (\n    select\n        server_id,\n        cast(timestamp as date) as server_date,\n        {{ dbt_utils.generate_surrogate_key(['server_id', 'server_date']) }} as daily_server_id,\n\n        is_office365_enabled,\n        is_google_enabled,\n        is_gitlab_enabled,\n        is_openid_enabled,\n        is_openid_google_enabled,\n        is_openid_gitlab_enabled,\n        is_openid_office365_enabled\n    from\n        {{ ref('stg_mm_telemetry_prod__oauth') }}\n    qualify row_number() over (partition by server_id, server_date order by timestamp desc) = 1\n)\nselect\n    spine.daily_server_id,\n    coalesce(r.is_office365_enabled, s.is_office365_enabled) as is_office365_enabled,\n    coalesce(r.is_google_enabled, s.is_google_enabled) as is_google_enabled,\n    coalesce(r.is_gitlab_enabled, s.is_gitlab_enabled) as is_gitlab_enabled,\n    case when r.is_openid_enabled = true then true else false end as is_openid_enabled,\n    case when r.is_openid_google_enabled = true then true else false end as is_openid_google_enabled,\n    case when r.is_openid_gitlab_enabled = true then true else false end as is_openid_gitlab_enabled,\n    case when r.is_openid_office365_enabled = true then true else false end as is_openid_office365_enabled\nfrom\n    {{ ref('int_server_active_days_spined') }} spine\n    left join segment_oauth s on spine.daily_server_id = s.daily_server_id\n    left join rudderstack_oauth r on spine.daily_server_id = r.daily_server_id", "language": "sql", "refs": [{"name": "stg_mattermost2__oauth", "package": null, "version": null}, {"name": "stg_mm_telemetry_prod__oauth", "package": null, "version": null}, {"name": "int_server_active_days_spined", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.stg_mattermost2__oauth", "model.mattermost_analytics.stg_mm_telemetry_prod__oauth", "model.mattermost_analytics.int_server_active_days_spined"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.fct_active_users": {"database": "jaffle_shop", "schema": "main", "name": "fct_active_users", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/product/fct_active_users.sql", "original_file_path": "models/marts/product/fct_active_users.sql", "unique_id": "model.mattermost_analytics.fct_active_users", "fqn": ["mattermost_analytics", "marts", "product", "fct_active_users"], "alias": "fct_active_users", "checksum": {"name": "sha256", "checksum": "3ddee50435385641a467ed25504e2de83c2e909da3b9a77d933e9eb920825145"}, "config": {"enabled": true, "alias": null, "schema": "mart_product", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Contains statistics about daily, weekly and monthly active users for each date. Statistics are stored per server.\nTelemetry data are used to identify user activity.\n\nAlso offers:\n- Mobile only DAU/WAU/MAU. \n- Desktop/server DAU/WAU/MAU. Includes all telemetry from within the app, plus any user telemetry that might be originating from server side, excluding old servers (pre 5.23.0).\n- Legacy DAU/WAU/MAU. Same as desktop/server, but includes telemetry up to 5.25.0.\n\n> Version 5.23.0 - 5.25.0 of Mattermost server transmitted telemetry both to Segment and Rudderstack.\n", "columns": {"daily_server_id": {"name": "daily_server_id", "description": "A unique id for each server and date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activity_date": {"name": "activity_date", "description": "The date for the measurement.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_active_users": {"name": "daily_active_users", "description": "The number of unique active users for the given server and date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "weekly_active_users": {"name": "weekly_active_users", "description": "The number of unique active users for the date and previous 6 days.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_active_users": {"name": "monthly_active_users", "description": "The number of unique active users for the date and previous 29 days.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_desktop_active_users": {"name": "daily_desktop_active_users", "description": "The number of unique desktop active users for the given server and date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "weekly_desktop_active_users": {"name": "weekly_desktop_active_users", "description": "The number of unique desktop active users for the date and previous 6 days.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_desktop_active_users": {"name": "monthly_desktop_active_users", "description": "The number of unique desktop active users for the date and previous 29 days.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_mobile_active_users": {"name": "daily_mobile_active_users", "description": "The number of unique mobile active users for the given server and date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "weekly_mobile_active_users": {"name": "weekly_mobile_active_users", "description": "The number of unique mobile active users for the date and previous 6 days.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_mobile_active_users": {"name": "monthly_mobile_active_users", "description": "The number of unique mobile active users for the date and previous 29 days.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_legacy_active_users": {"name": "daily_legacy_active_users", "description": "The number of unique legacy active users for the given server and date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "weekly_legacy_active_users": {"name": "weekly_legacy_active_users", "description": "The number of unique legacy active users for the date and previous 6 days.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_legacy_active_users": {"name": "monthly_legacy_active_users", "description": "The number of unique legacy active users for the date and previous 29 days.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_daily_active_users": {"name": "server_daily_active_users", "description": "Total number of active users for the past 24 hours prior to the timestamp of the event.\nBots and deleted users are excluded. Reported by mattermost server.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_monthly_active_users": {"name": "server_monthly_active_users", "description": "Total number of active users for the past 31 days prior to the timestamp of the event.\nBots and deleted users are excluded. Reported by mattermost server.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_users": {"name": "count_registered_users", "description": "Total number of users, including deleted users. Reported by mattermost server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_deactivated_users": {"name": "count_registered_deactivated_users", "description": "Total number of inactive (deleted) users. Reported by mattermost server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_missing_activity_data": {"name": "is_missing_activity_data", "description": "Whether there are missing server activity data for the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_id": {"name": "version_id", "description": "The id of the server's version for the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/product/_product__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_product"}, "created_at": 1699414207.4235032, "relation_name": "\"jaffle_shop\".main.fct_active_users", "raw_code": "{%\n    set column_map = {\n        'is_active': 'active_users',\n        'is_desktop_or_server': 'desktop_active_users',\n        'is_mobile': 'mobile_active_users',\n        'is_old_server': 'legacy_active_users'\n    }\n%}\n\nwith metrics as (\n    select\n        {{ dbt_utils.generate_surrogate_key(['server_id', 'activity_date']) }} AS daily_server_id\n        , activity_date\n        , server_id\n    {% for metric, column in column_map.items() %}\n        , sum({{metric}}_today::integer) as daily_{{column}}\n        , sum({{metric}}_last_7_days::integer) as weekly_{{column}}\n        , sum({{metric}}_last_30_days::integer) as monthly_{{column}}\n    {% endfor %}\n    from {{ ref('int_user_active_days_spined') }}\n    group by activity_date, server_id\n)\nselect\n    -- Client telemetry\n    m.*,\n    -- Server-reported activity\n    coalesce(sas.daily_active_users, 0) as server_daily_active_users,\n    coalesce(sas.monthly_active_users, 0) as server_monthly_active_users,\n    coalesce(sas.count_registered_users, 0) as count_registered_users,\n    coalesce(sas.count_registered_deactivated_users, 0) as count_registered_deactivated_users,\n    coalesce(sas.is_missing_activity_data, true) as is_missing_server_activity_data,\n    -- Extra dimensions\n    {{ dbt_utils.generate_surrogate_key(['sas.version_full']) }} AS version_id\n\nfrom\n    metrics m\n    left join {{ ref('int_server_active_days_spined')}} sas on m.daily_server_id = sas.daily_server_id\nwhere\n    m.server_id not in (\n        select server_id from {{ ref('dim_excludable_servers') }}\n    )", "language": "sql", "refs": [{"name": "int_user_active_days_spined", "package": null, "version": null}, {"name": "int_server_active_days_spined", "package": null, "version": null}, {"name": "dim_excludable_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.int_user_active_days_spined", "model.mattermost_analytics.int_server_active_days_spined", "model.mattermost_analytics.dim_excludable_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_version": {"database": "jaffle_shop", "schema": "main", "name": "dim_version", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/product/dim_version.sql", "original_file_path": "models/marts/product/dim_version.sql", "unique_id": "model.mattermost_analytics.dim_version", "fqn": ["mattermost_analytics", "marts", "product", "dim_version"], "alias": "dim_version", "checksum": {"name": "sha256", "checksum": "e7fad9378329705527f5abfaf2d106badfc48cf1ea334d564a5d72357ad37749"}, "config": {"enabled": true, "alias": null, "schema": "mart_product", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "List of known server versions", "columns": {"version_id": {"name": "version_id", "description": "The version's unique id. Surrogate key derived from full version.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_full": {"name": "version_full", "description": "The full semver of the Mattermost server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major version part of the server's semver. I.e. 7 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor version part of the server's semver. I.e. 2 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major_minor": {"name": "version_major_minor", "description": "The major and minor parts of the version concatenated, separated by `.`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_patch": {"name": "version_patch", "description": "The patch version part of the server's semver. I.e. 3 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/product/_product__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_product"}, "created_at": 1699414207.426008, "relation_name": "\"jaffle_shop\".main.dim_version", "raw_code": "with versions as (\n    select\n        distinct version_full, version_major, version_minor, version_patch\n    from\n        {{ ref('int_server_active_days_spined') }}\n)\nselect\n    {{ dbt_utils.generate_surrogate_key(['version_full']) }} AS version_id,\n    version_full,\n    version_major,\n    version_minor,\n    version_major || '.' || version_minor as version_major_minor,\n    version_patch\nfrom\n    versions", "language": "sql", "refs": [{"name": "int_server_active_days_spined", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.int_server_active_days_spined"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.dim_excludable_servers": {"database": "jaffle_shop", "schema": "main", "name": "dim_excludable_servers", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/product/dim_excludable_servers.sql", "original_file_path": "models/marts/product/dim_excludable_servers.sql", "unique_id": "model.mattermost_analytics.dim_excludable_servers", "fqn": ["mattermost_analytics", "marts", "product", "dim_excludable_servers"], "alias": "dim_excludable_servers", "checksum": {"name": "sha256", "checksum": "129d8800c39a1f39b47f2d1090becf5ce093c1e4969773053ca2f0e0754e5b36"}, "config": {"enabled": true, "alias": null, "schema": "mart_product", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "List of known excludable servers", "columns": {"server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reasons": {"name": "reasons", "description": "A list of reasons this server should be excluded.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/product/_product__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_product"}, "created_at": 1699414207.425492, "relation_name": "\"jaffle_shop\".main.dim_excludable_servers", "raw_code": "select\n    server_id,\n    array_agg(reason) within group (order by reason) as reasons\nfrom\n    {{ ref('int_excludable_servers') }}\nwhere\n    server_id is not null\ngroup by server_id", "language": "sql", "refs": [{"name": "int_excludable_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_excludable_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.fct_active_servers": {"database": "jaffle_shop", "schema": "main", "name": "fct_active_servers", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/product/fct_active_servers.sql", "original_file_path": "models/marts/product/fct_active_servers.sql", "unique_id": "model.mattermost_analytics.fct_active_servers", "fqn": ["mattermost_analytics", "marts", "product", "fct_active_servers"], "alias": "fct_active_servers", "checksum": {"name": "sha256", "checksum": "cb5a04301c317e591a905d55ab347ddad058f1bbfdccf7aac13a8eb9ab728d14"}, "config": {"enabled": true, "alias": null, "schema": "mart_product", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Contains daily information about each active server. A server is considered as active if:\n\n- User telemetry was detected via Rudderstack or Segment.\n- Server activity was detected via Rudderstack or Segment.\n- Server queried security update check endpoint.\n\nNote that server information is available only between the first and last date (inclusive) that the server was \nidentified as active using any of the previously mentioned methods.\n", "columns": {"daily_server_id": {"name": "daily_server_id", "description": "A unique id for each server and date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activity_date": {"name": "activity_date", "description": "The date for the measurement.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_id": {"name": "version_id", "description": "The id of the server's version.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_type": {"name": "installation_type", "description": "The method used for installing the Mattermost server (docker, deb package, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registered_user_bin": {"name": "registered_user_bin", "description": "The group the server belongs based on the number of active (non deleted) registered users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_active_users": {"name": "count_registered_active_users", "description": "The number of active (not deleted) registered users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_enterprise_ready": {"name": "is_enterprise_ready", "description": "Whether the server is running an enterprise ready build.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_reported_versions": {"name": "count_reported_versions", "description": "The number of versions reported via all possible channels for the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_telemetry_data": {"name": "has_telemetry_data", "description": "Whether there were telemetry data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_legacy_telemetry_data": {"name": "has_legacy_telemetry_data", "description": "Whether there were legacy (segment) telemetry data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_diagnostics_data": {"name": "has_diagnostics_data", "description": "Whether there were security update server data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_missing_activity_data": {"name": "is_missing_activity_data", "description": "Whether server activity data are available for the given date and server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/product/_product__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_product"}, "created_at": 1699414207.426816, "relation_name": "\"jaffle_shop\".main.fct_active_servers", "raw_code": "select\n    -- Identifiers\n    daily_server_id,\n    server_id,\n    activity_date,\n\n    -- Dimensions\n    {{ dbt_utils.generate_surrogate_key(['version_full']) }} AS version_id,\n    -- Degenerate dimensions\n    installation_type,\n    case\n        when count_registered_active_users < 10 then '< 10'\n        when count_registered_active_users >= 10 and count_registered_active_users < 100 then '10-100'\n        when count_registered_active_users >= 100 and count_registered_active_users < 250 then '100-250'\n        when count_registered_active_users >= 250 and count_registered_active_users < 500 then '250-500'\n        when count_registered_active_users >= 500 and count_registered_active_users < 1000 then '500-1000'\n        when count_registered_active_users >= 1000 and count_registered_active_users < 2500 then '1000-2500'\n        when count_registered_active_users >= 2500 then '>=2500'\n        else 'Unknown'\n    end as registered_user_bin,\n\n    -- Facts\n    count_registered_active_users,\n    is_enterprise_ready,\n    count_reported_versions,\n\n    -- Metadata\n    has_telemetry_data,\n    has_legacy_telemetry_data,\n    has_diagnostics_data,\n    is_missing_activity_data\nfrom\n    {{ ref('int_server_active_days_spined') }}", "language": "sql", "refs": [{"name": "int_server_active_days_spined", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.int_server_active_days_spined"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.fct_security_newsletter": {"database": "jaffle_shop", "schema": "main", "name": "fct_security_newsletter", "resource_type": "model", "package_name": "mattermost_analytics", "path": "marts/marketing/fct_security_newsletter.sql", "original_file_path": "models/marts/marketing/fct_security_newsletter.sql", "unique_id": "model.mattermost_analytics.fct_security_newsletter", "fqn": ["mattermost_analytics", "marts", "marketing", "fct_security_newsletter"], "alias": "fct_security_newsletter", "checksum": {"name": "sha256", "checksum": "34f9f9444181ed6ffa686f6d28a35db90f041649caf8d777b6dd2d09dcfdc34e"}, "config": {"enabled": true, "alias": null, "schema": "mart_marketing", "database": null, "tags": ["marts", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["marts", "nightly"], "description": "Security Newsletter data from cws marketing, to sync with leads & campaign member in Salesforce.\n", "columns": {"marketing_id": {"name": "marketing_id", "description": "Unique identifier for cws marketing data.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "Customer email for marketing coming from cws.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": ["pii"]}, "server_id": {"name": "server_id", "description": "Server ID of the user who subscribed to the marketing campaign.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_id": {"name": "lead_id", "description": "Lead ID of the user who subscribed to the marketing campaign in Salesforce. Lead ID is selected by joining with the email provided in cws marketing, and in case of multiple Lead ID's we are picking the one which was created first.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_member_id": {"name": "campaign_member_id", "description": "Campaign Member ID of the user who subscribed to the marketing campaign in Salesforce.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_existing_lead": {"name": "is_existing_lead", "description": "Whether there's already a lead with the same email.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_existing_campaign_member": {"name": "is_existing_campaign_member", "description": "Whether there's already a campaign member for the same email and lead.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "Unique identifier of the campaign.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_valid_email": {"name": "is_valid_email", "description": "Whether the email is valid. Used to skip invalid emails.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/marts/marketing/_marketing__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "mart_marketing"}, "created_at": 1699414207.462799, "relation_name": "\"jaffle_shop\".main.fct_security_newsletter", "raw_code": "with marketing as (\n    select marketing_id\n        , email as email\n        , server_id\n        , created_at\n        , updated_at\n    from\n        {{ ref('stg_cws__marketing')}}\n    where subscribed_content = 'security_newsletter'\n    qualify row_number() over (\n            partition by email\n            order by\n                created_at desc\n        ) = 1\n),\nsecurity_newsletter as (\n    select distinct m.marketing_id as marketing_id\n        , m.email as email\n        , m.server_id as server_id\n        , l.lead_id as lead_id\n        , cm.campaign_member_id as campaign_member_id\n        , l.lead_id is not null as is_existing_lead\n        , cm.campaign_member_id is not null as is_existing_campaign_member\n        , '{{ var('marketing_newsletter_campaign_id') }}' as campaign_id\n        , {{ validate_email('m.email') }} as is_valid_email\n    from\n        marketing m\n        left join {{ ref('stg_salesforce__lead') }}  l on m.email = l.email\n        left join {{ ref('stg_salesforce__campaign_member') }} cm on l.lead_id = cm.lead_id and m.email = cm.email \n        and cm.campaign_id = '{{ var('marketing_newsletter_campaign_id') }}'\n        where is_valid_email\n        qualify row_number() over (\n            partition by m.email\n            order by\n                l.created_at asc\n        ) = 1\n)\nselect\n    *\nfrom\n    security_newsletter", "language": "sql", "refs": [{"name": "stg_cws__marketing", "package": null, "version": null}, {"name": "stg_salesforce__lead", "package": null, "version": null}, {"name": "stg_salesforce__campaign_member", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.validate_email"], "nodes": ["model.mattermost_analytics.stg_cws__marketing", "model.mattermost_analytics.stg_salesforce__lead", "model.mattermost_analytics.stg_salesforce__campaign_member"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.telemetry_days": {"database": "jaffle_shop", "schema": "main", "name": "telemetry_days", "resource_type": "model", "package_name": "mattermost_analytics", "path": "utilities/telemetry_days.sql", "original_file_path": "models/utilities/telemetry_days.sql", "unique_id": "model.mattermost_analytics.telemetry_days", "fqn": ["mattermost_analytics", "utilities", "telemetry_days"], "alias": "telemetry_days", "checksum": {"name": "sha256", "checksum": "3ea6137ca85ccaba43bff2dae775406a573d37fec2b3212dd65e60745ec4681a"}, "config": {"enabled": true, "alias": null, "schema": "utilities", "database": null, "tags": ["utilities", "hourly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["utilities", "hourly"], "description": "Date spine for telemetry related metrics. Date spines is from first telemetry date and up to current day \n(inclusive).\n", "columns": {"date_day": {"name": "date_day", "description": "Timestamp for the date of the spine. Always midnight of the day.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/utilities/_utilities__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "utilities", "tags": ["utilities", "hourly"]}, "created_at": 1699414207.466321, "relation_name": "\"jaffle_shop\".main.telemetry_days", "raw_code": "-- Create a date spine starting on the first date that events were ingested up to (and including) today.\n{{ dbt_utils.date_spine(\n    datepart=\"day\",\n    start_date=\"'\" + var('telemetry_start_date') + \"'\",\n    end_date=\"dateadd(day, 1, current_date)\"\n) }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.date_spine"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mm_telemetry_prod_performance_events": {"database": "jaffle_shop", "schema": "main", "name": "int_mm_telemetry_prod_performance_events", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/web_app/platform/int_mm_telemetry_prod_performance_events.sql", "original_file_path": "models/intermediate/web_app/platform/int_mm_telemetry_prod_performance_events.sql", "unique_id": "model.mattermost_analytics.int_mm_telemetry_prod_performance_events", "fqn": ["mattermost_analytics", "intermediate", "web_app", "platform", "int_mm_telemetry_prod_performance_events"], "alias": "int_mm_telemetry_prod_performance_events", "checksum": {"name": "sha256", "checksum": "7cbaf340c0947327042905d5091e2bff0707436aaace8aa893972f172a8a0d79"}, "config": {"enabled": true, "alias": null, "schema": "int_web_app", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_web_app", "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414206.260108, "relation_name": "\"jaffle_shop\".main.int_mm_telemetry_prod_performance_events", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"cluster_by\": ['received_at_date'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\nSELECT\n    {{ dbt_utils.star(ref('stg_mm_telemetry_prod__performance_events')) }}\nFROM\n    {{ ref('stg_mm_telemetry_prod__performance_events') }}\nWHERE\n    id not in (\n        'd\\';waitfor/**/delay\\'0:0:0\\'/**/--/**/',\n        's\\');waitfor/**/delay\\'0:0:0\\'/**/--/**/',\n        'v\\';waitfor/**/delay\\'0:0:2\\'/**/--/**/',\n        'o\\');waitfor/**/delay\\'0:0:0\\'/**/--/**/'\n    )\n{% if is_incremental() %}\n    and received_at > (SELECT MAX(received_at) FROM {{ this }})\n{% endif %}", "language": "sql", "refs": [{"name": "stg_mm_telemetry_prod__performance_events", "package": null, "version": null}, {"name": "stg_mm_telemetry_prod__performance_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star", "macro.dbt.is_incremental"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_prod__performance_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mm_telemetry_rc_performance_events": {"database": "jaffle_shop", "schema": "main", "name": "int_mm_telemetry_rc_performance_events", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/web_app/platform/int_mm_telemetry_rc_performance_events.sql", "original_file_path": "models/intermediate/web_app/platform/int_mm_telemetry_rc_performance_events.sql", "unique_id": "model.mattermost_analytics.int_mm_telemetry_rc_performance_events", "fqn": ["mattermost_analytics", "intermediate", "web_app", "platform", "int_mm_telemetry_rc_performance_events"], "alias": "int_mm_telemetry_rc_performance_events", "checksum": {"name": "sha256", "checksum": "191cfd9e14ae739762c790e0c0d497019cb99467723790d6260bd0712e58bc11"}, "config": {"enabled": true, "alias": null, "schema": "int_web_app", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "cluster_by": ["received_at_date"]}, "tags": ["intermediate", "nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_web_app", "cluster_by": ["received_at_date"]}, "created_at": 1699414206.263785, "relation_name": "\"jaffle_shop\".main.int_mm_telemetry_rc_performance_events", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"cluster_by\": ['received_at_date'],\n    })\n}}\n\nSELECT {{ dbt_utils.star(ref('stg_mm_telemetry_rc__performance_events')) }} FROM \n{{ ref('stg_mm_telemetry_rc__performance_events') }} \nWHERE\n    id not in (\n        'd\\';waitfor/**/delay\\'0:0:0\\'/**/--/**/',\n        's\\');waitfor/**/delay\\'0:0:0\\'/**/--/**/',\n        'v\\';waitfor/**/delay\\'0:0:2\\'/**/--/**/',\n        'o\\');waitfor/**/delay\\'0:0:0\\'/**/--/**/'\n    )\n{% if is_incremental() %}\n   and received_at > (SELECT MAX(received_at) FROM {{ this }})\n{% endif %}", "language": "sql", "refs": [{"name": "stg_mm_telemetry_rc__performance_events", "package": null, "version": null}, {"name": "stg_mm_telemetry_rc__performance_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star", "macro.dbt.is_incremental"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_rc__performance_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mm_telemetry_prod__community_tracks": {"database": "jaffle_shop", "schema": "main", "name": "int_mm_telemetry_prod__community_tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/web_app/community/int_mm_telemetry_prod__community_tracks.sql", "original_file_path": "models/intermediate/web_app/community/int_mm_telemetry_prod__community_tracks.sql", "unique_id": "model.mattermost_analytics.int_mm_telemetry_prod__community_tracks", "fqn": ["mattermost_analytics", "intermediate", "web_app", "community", "int_mm_telemetry_prod__community_tracks"], "alias": "int_mm_telemetry_prod__community_tracks", "checksum": {"name": "sha256", "checksum": "31ac861b4da6227cd93bda165045618e9e10eef6d9b3dba517eb244f21184e44"}, "config": {"enabled": true, "alias": null, "schema": "int_web_app", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "append", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_web_app", "cluster_by": ["received_at_date"], "incremental_strategy": "append", "snowflake_warehouse": "transform_l"}, "created_at": 1699414206.267541, "relation_name": "\"jaffle_shop\".main.int_mm_telemetry_prod__community_tracks", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"cluster_by\": ['received_at_date'],\n        \"incremental_strategy\": \"append\",\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\n    SELECT\n        {{dbt_utils.star(ref('stg_mm_telemetry_prod__tracks'))}},\n        'stg_mm_telemetry_prod__tracks' AS _source_relation,\n        received_at::date as received_at_date\n     FROM\n       {{ ref('stg_mm_telemetry_prod__tracks') }}\n    WHERE server_id = '{{ var(\"community_server_id\") }}'\n{% if is_incremental() %}\n    AND received_at > (SELECT MAX(received_at) FROM {{ this }})\n{% endif %}", "language": "sql", "refs": [{"name": "stg_mm_telemetry_prod__tracks", "package": null, "version": null}, {"name": "stg_mm_telemetry_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star", "macro.dbt.is_incremental"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mm_telemetry_rc__community_tracks": {"database": "jaffle_shop", "schema": "main", "name": "int_mm_telemetry_rc__community_tracks", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/web_app/community/int_mm_telemetry_rc__community_tracks.sql", "original_file_path": "models/intermediate/web_app/community/int_mm_telemetry_rc__community_tracks.sql", "unique_id": "model.mattermost_analytics.int_mm_telemetry_rc__community_tracks", "fqn": ["mattermost_analytics", "intermediate", "web_app", "community", "int_mm_telemetry_rc__community_tracks"], "alias": "int_mm_telemetry_rc__community_tracks", "checksum": {"name": "sha256", "checksum": "1377029881ed4457d6825a82d45f4427c749f9ec12dcb617854250b2ca999019"}, "config": {"enabled": true, "alias": null, "schema": "int_web_app", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "append", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_web_app", "cluster_by": ["received_at_date"], "incremental_strategy": "append", "snowflake_warehouse": "transform_l"}, "created_at": 1699414206.2719822, "relation_name": "\"jaffle_shop\".main.int_mm_telemetry_rc__community_tracks", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"cluster_by\": ['received_at_date'],\n        \"incremental_strategy\": \"append\",\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\n    SELECT\n        {{dbt_utils.star(ref('stg_mm_telemetry_rc__tracks'))}},\n        'stg_mm_telemetry_rc__tracks' AS _source_relation,\n        received_at::date as received_at_date\n     FROM\n       {{ ref('stg_mm_telemetry_rc__tracks') }}\n    WHERE server_id = '{{ var(\"community_server_id\") }}'\n{% if is_incremental() %}\n    AND received_at > (SELECT MAX(received_at) FROM {{ this }})\n{% endif %}", "language": "sql", "refs": [{"name": "stg_mm_telemetry_rc__tracks", "package": null, "version": null}, {"name": "stg_mm_telemetry_rc__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.star", "macro.dbt.is_incremental"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_rc__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mattermostcom_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_mattermostcom_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_mattermostcom_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_mattermostcom_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_mattermostcom_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_mattermostcom_aggregated_to_date"], "alias": "int_mattermostcom_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "9ac0d77cd0217791de1076613b95f466d381a392ed8524ffa6c22148f7a29374"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "tags": ["intermediate", "nightly"], "description": "Mattermost.com events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Mattermost.com` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "created_at": 1699414207.4685209, "relation_name": "\"jaffle_shop\".main.int_mattermostcom_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_mattermostcom__tracks'),\n        by_columns=['event_table', 'event_name'],\n        source_name='Mattermost.com'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_mattermostcom__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_mattermostcom__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_mattermost_docs_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_mattermost_docs_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_mattermost_docs_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_mattermost_docs_aggregated_to_date"], "alias": "int_mattermost_docs_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "8ecf5c66669b30dbf3e0dc00f7c3c3bfa59a3a10529db2e53823849419f75f08"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "tags": ["intermediate", "nightly"], "description": "Mattermost documentation events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Mattermost Docs` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "created_at": 1699414207.467819, "relation_name": "\"jaffle_shop\".main.int_mattermost_docs_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_mattermost_docs__tracks'),\n        by_columns=['event_table', 'event_name'],\n        source_name='Mattermost Docs'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_mattermost_docs__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_mattermost_docs__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_hacktoberboard_prod_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_hacktoberboard_prod_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_hacktoberboard_prod_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_hacktoberboard_prod_aggregated_to_date"], "alias": "int_hacktoberboard_prod_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "f2ed20793a1ea5e77f27e6406ddb5a8f0da8805edbc7e000a1cd66103c8e3686"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "tags": ["intermediate", "nightly"], "description": "Focalboard events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Focalboard Prod` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The event's type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "created_at": 1699414207.466989, "relation_name": "\"jaffle_shop\".main.int_hacktoberboard_prod_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_hacktoberboard_prod__tracks'),\n        by_columns=['event_table', 'event_name', 'category', 'event_type'],\n        source_name='Focalboard Prod'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_hacktoberboard_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_hacktoberboard_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_mm_plugin_prod_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_mm_plugin_prod_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_mm_plugin_prod_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_mm_plugin_prod_aggregated_to_date"], "alias": "int_mm_plugin_prod_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "4b19ca8f6613a09b04b8e16f7ccc7b534d8714ff8f12a0e4e1935d9f33fba313"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "tags": ["intermediate", "nightly"], "description": "Mobile events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Plugins Prod` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The event's type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "created_at": 1699414207.469408, "relation_name": "\"jaffle_shop\".main.int_mm_plugin_prod_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_mm_plugin_prod__tracks'),\n        by_columns=['event_table', 'event_name', 'event_type'],\n        source_name='Plugins Prod'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_mm_plugin_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_mm_plugin_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_portal_prod_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_portal_prod_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_portal_prod_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_portal_prod_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_portal_prod_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_portal_prod_aggregated_to_date"], "alias": "int_portal_prod_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "349a3e122718079e8be127e85c5a10b348ffe26d6039b695bbd41651f73e6c94"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "tags": ["intermediate", "nightly"], "description": "Portal events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Portal Prod` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "created_at": 1699414207.470718, "relation_name": "\"jaffle_shop\".main.int_portal_prod_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_portal_prod__tracks'),\n        by_columns=['event_table', 'event_name', 'category'],\n        source_name='Portal Prod'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_portal_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_portal_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_mm_telemetry_prod_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_mm_telemetry_prod_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_mm_telemetry_prod_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_mm_telemetry_prod_aggregated_to_date"], "alias": "int_mm_telemetry_prod_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "7bd41a13b568f7b0710f625ca011ef16aac110945daec22aa5dc45c5b5eb9edb"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "Telemetry Prod events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Telemetry Prod` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The event's type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.4698539, "relation_name": "\"jaffle_shop\".main.int_mm_telemetry_prod_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_mm_telemetry_prod__tracks'),\n        by_columns=['event_table', 'event_name', 'category', 'event_type'],\n        source_name='Telemetry Prod'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_mm_telemetry_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_incident_response_prod_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_incident_response_prod_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_incident_response_prod_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_incident_response_prod_aggregated_to_date"], "alias": "int_incident_response_prod_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "3d72811e8b69a3f4f1c87caa334206e30a1681b91b5e1707d797eb891e33895c"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "tags": ["intermediate", "nightly"], "description": "Playbook events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Incident Response Prod` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"]}, "created_at": 1699414207.4674098, "relation_name": "\"jaffle_shop\".main.int_incident_response_prod_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_incident_response_prod__tracks'),\n        by_columns=['event_table', 'event_name'],\n        source_name='Incident Response Prod'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_incident_response_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_incident_response_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_mm_telemetry_rc_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_mm_telemetry_rc_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_mm_telemetry_rc_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_mm_telemetry_rc_aggregated_to_date"], "alias": "int_mm_telemetry_rc_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "4ac210431c4032dd1d565711682d9963e796e97c204f573206b338a98653bf32"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "Telemetry RC events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Telemetry RC` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The event's type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.470298, "relation_name": "\"jaffle_shop\".main.int_mm_telemetry_rc_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_mm_telemetry_rc__tracks'),\n        by_columns=['event_table', 'event_name', 'category', 'event_type'],\n        source_name='Telemetry RC'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_mm_telemetry_rc__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_rc__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_mm_mobile_prod_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_mm_mobile_prod_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_mm_mobile_prod_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_mm_mobile_prod_aggregated_to_date"], "alias": "int_mm_mobile_prod_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "2edffae8b1a18411fa4d39eef67f555df356c2823ee86970aa22b6f64d7706d9"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_event_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "Mobile events, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event. Always `Mobile Prod` for events of this table..", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The event's type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_data_eng", "incremental_strategy": "merge", "unique_key": ["daily_event_id"], "merge_update_columns": ["event_count"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.468979, "relation_name": "\"jaffle_shop\".main.int_mm_mobile_prod_aggregated_to_date", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"unique_key\": ['daily_event_id'],\n        \"merge_update_columns\": ['event_count'],\n        \"cluster_by\": ['received_at_date'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\n{{\n    rudder_daily_event_count(\n        ref('stg_mm_mobile_prod__tracks'),\n        by_columns=['event_table', 'event_name', 'category', 'event_type'],\n        source_name='Mobile Prod'\n    )\n}}", "language": "sql", "refs": [{"name": "stg_mm_mobile_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.rudder_daily_event_count"], "nodes": ["model.mattermost_analytics.stg_mm_mobile_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_events_aggregated_to_date": {"database": "jaffle_shop", "schema": "main", "name": "int_events_aggregated_to_date", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/data_eng/event_registry/int_events_aggregated_to_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/int_events_aggregated_to_date.sql", "unique_id": "model.mattermost_analytics.int_events_aggregated_to_date", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "int_events_aggregated_to_date"], "alias": "int_events_aggregated_to_date", "checksum": {"name": "sha256", "checksum": "b0985f86d6c9b0e199266af6addd2b563da924ec795c9744f6fc41c3b72a9045"}, "config": {"enabled": true, "alias": null, "schema": "int_data_eng", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "Union of all telemetry events from all sources, aggregated by date.", "columns": {"event_id": {"name": "event_id", "description": "Surrogate key representing a group of events with specific name, category, type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_event_id": {"name": "daily_event_id", "description": "Surrogate key representing a group of events with specific name, category, type for a specific date.\nMultiple `daily_event_id`'s may exist for the same event id.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "the date that the event was ingested at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_table": {"name": "event_table", "description": "The table this event was read from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The name of the event.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The event's category.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The event's type.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_count": {"name": "event_count", "description": "The number of events with specified name, category, type etc for date in `received_at_date`.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_data_eng"}, "created_at": 1699414207.4712, "relation_name": null, "raw_code": "{{\n    dbt_utils.union_relations(\n        relations=[\n            ref('int_hacktoberboard_prod_aggregated_to_date'),\n            ref('int_incident_response_prod_aggregated_to_date'),\n            ref('int_mattermost_docs_aggregated_to_date'),\n            ref('int_mattermostcom_aggregated_to_date'),\n            ref('int_mm_mobile_prod_aggregated_to_date'),\n            ref('int_mm_plugin_prod_aggregated_to_date'),\n            ref('int_mm_telemetry_prod_aggregated_to_date'),\n            ref('int_mm_telemetry_rc_aggregated_to_date'),\n            ref('int_portal_prod_aggregated_to_date'),\n        ],\n        source_column_name=None\n    )\n}}", "language": "sql", "refs": [{"name": "int_hacktoberboard_prod_aggregated_to_date", "package": null, "version": null}, {"name": "int_incident_response_prod_aggregated_to_date", "package": null, "version": null}, {"name": "int_mattermost_docs_aggregated_to_date", "package": null, "version": null}, {"name": "int_mattermostcom_aggregated_to_date", "package": null, "version": null}, {"name": "int_mm_mobile_prod_aggregated_to_date", "package": null, "version": null}, {"name": "int_mm_plugin_prod_aggregated_to_date", "package": null, "version": null}, {"name": "int_mm_telemetry_prod_aggregated_to_date", "package": null, "version": null}, {"name": "int_mm_telemetry_rc_aggregated_to_date", "package": null, "version": null}, {"name": "int_portal_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.union_relations"], "nodes": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date", "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date", "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date", "model.mattermost_analytics.int_mattermostcom_aggregated_to_date", "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date", "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date", "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date", "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date", "model.mattermost_analytics.int_portal_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_cloud_trial_requests": {"database": "jaffle_shop", "schema": "main", "name": "int_cloud_trial_requests", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/sales/int_cloud_trial_requests.sql", "original_file_path": "models/intermediate/sales/int_cloud_trial_requests.sql", "unique_id": "model.mattermost_analytics.int_cloud_trial_requests", "fqn": ["mattermost_analytics", "intermediate", "sales", "int_cloud_trial_requests"], "alias": "int_cloud_trial_requests", "checksum": {"name": "sha256", "checksum": "7c1d5f195d12447cb0a1a65d7a6b49cfe123ababda88f00b11fdd24c031c0c26"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["intermediate"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["intermediate"]}, "created_at": 1699414206.328512, "relation_name": null, "raw_code": "WITH customers as (\n    SELECT\n        customer_id,\n        email\n    FROM\n        {{ ref('stg_stripe__customers') }}\n    where\n        created_at >= '2023-04-27' -- only select customers after the release.\n),\nsubscriptions as (\n    SELECT\n        subscription_id,\n        cws_installation,\n        cws_dns,\n        customer_id,\n        trial_start_at,\n        trial_end_at,\n        product_id\n    FROM\n        {{ ref('stg_stripe__subscriptions') }}\n),\nproducts as (\n    SELECT\n        product_id,\n        name,\n        sku\n    FROM\n        {{ ref('stg_stripe__products') }}\n),\ncloud_trial_requests as (\n    select\n        customers.customer_id,\n        customers.email,\n        subscriptions.subscription_id,\n        subscriptions.trial_start_at,\n        subscriptions.trial_end_at,\n        subscriptions.cws_installation,\n        products.product_id,\n        products.name as product_name\n    from\n        customers\n        -- Will lead to rows fanning out since a customer can have many subscriptions\n        left join subscriptions on subscriptions.customer_id = customers.customer_id\n        left join products on subscriptions.product_id = products.product_id\n        -- Trial data end is in the future\n        where CURRENT_DATE < subscriptions.trial_end_at\n        -- Only get cloud subscriptions\n        AND cws_installation is not null\n)\n\nselect\n    *\nfrom\n    cloud_trial_requests", "language": "sql", "refs": [{"name": "stg_stripe__customers", "package": null, "version": null}, {"name": "stg_stripe__subscriptions", "package": null, "version": null}, {"name": "stg_stripe__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.stg_stripe__customers", "model.mattermost_analytics.stg_stripe__subscriptions", "model.mattermost_analytics.stg_stripe__products"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_user_active_days_spined": {"database": "jaffle_shop", "schema": "main", "name": "int_user_active_days_spined", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/active_users/int_user_active_days_spined.sql", "original_file_path": "models/intermediate/product/active_users/int_user_active_days_spined.sql", "unique_id": "model.mattermost_analytics.int_user_active_days_spined", "fqn": ["mattermost_analytics", "intermediate", "product", "active_users", "int_user_active_days_spined"], "alias": "int_user_active_days_spined", "checksum": {"name": "sha256", "checksum": "e30ff6fe632580f4d9252adb66066cb0dddae845bf567e726d2a6c3c5ba3f516"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["activity_date", "server_id", "user_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "cluster_by": ["activity_date", "server_id"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "Contains record per user per day since the user's first active date. Uses data from new & old servers, as well as \nfrom mobile. Performs deduplication for servers that sent data both via Rudderstack and Segment.\n", "columns": {"activity_date": {"name": "activity_date", "description": "The date that the user was active on.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The user's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active_today": {"name": "is_active_today", "description": "Boolean flag indicating whether the user was active on the specific date and server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active_last_7_days": {"name": "is_active_last_7_days", "description": "Boolean flag indicating whether the user was active on the specific date and previous 6 days, and \nfor the specific server.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active_last_30_days": {"name": "is_active_last_30_days", "description": "Boolean flag indicating whether the user was active on the specific date and previous 29 days, and \nfor the specific server.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_desktop_or_server_today": {"name": "is_desktop_or_server_today", "description": "Indicates whether the user was active on the specific date and server. Only for new (>= 5.23.0) servers.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_desktop_or_server_last_7_days": {"name": "is_desktop_or_server_last_7_days", "description": "Indicates whether the user was active on the specific date and previous 6 days, and for the specific server.\nOnly for new (>= 5.23.0) servers.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_desktop_or_server_last_30_days": {"name": "is_desktop_or_server_last_30_days", "description": "Indicates whether the user was active on the specific date and previous 29 days, and for the specific server.\nOnly for new (>= 5.23.0) servers.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_mobile_today": {"name": "is_mobile_today", "description": "Indicates whether the user was active on the specific date and server. Only for mobile users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_mobile-last_7_days": {"name": "is_mobile-last_7_days", "description": "Indicates whether the user was active on the specific date and previous 6 days, and for the specific server.\nOnly for mobile users.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_mobile_last_30_days": {"name": "is_mobile_last_30_days", "description": "Indicates whether the user was active on the specific date and previous 29 days, and for the specific server.\nOnly for mobile users.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_old_server_today": {"name": "is_old_server_today", "description": "Indicates whether the user was active on the specific date and server. Only for old (<= 5.25.0) servers.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_old_server_last_7_days": {"name": "is_old_server_last_7_days", "description": "Indicates whether the user was active on the specific date and previous 6 days, and for the specific server.\nOnly for old (<= 5.25.0) servers.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_old_server_last_30_days": {"name": "is_old_server_last_30_days", "description": "Indicates whether the user was active on the specific date and previous 29 days, and for the specific server.\nOnly for old (<= 5.25.0) servers.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/active_users/_int_active_users__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "int_product", "cluster_by": ["activity_date", "server_id"], "unique_key": ["activity_date", "server_id", "user_id"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.509918, "relation_name": "\"jaffle_shop\".main.int_user_active_days_spined", "raw_code": "{{\n    config({\n        \"materialized\": \"table\",\n        \"cluster_by\": ['activity_date', 'server_id'],\n        \"unique_key\": ['activity_date', 'server_id', 'user_id'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\n{% set metrics = ['is_active', 'is_desktop_or_server', 'is_mobile', 'is_old_server'] %}\n\nwith user_active_days as (\n    -- Merge mobile with server data\n    select\n        -- Load only required columns\n        coalesce(s.activity_date, m.activity_date, l.activity_date) as activity_date,\n        coalesce(s.server_id, m.server_id, l.server_id) as server_id,\n        coalesce(s.user_id, m.user_id, l.user_id) as user_id,\n        coalesce(s.is_active, m.is_active, l.is_active) as is_active,\n        s.server_id is not null as is_desktop_or_server,\n        m.server_id is not null as is_mobile,\n        l.server_id is not null as is_old_server\n    from\n        {{ ref('int_user_active_days_server_telemetry') }} s\n        full outer join {{ ref('int_user_active_days_mobile_telemetry') }} m on s.daily_user_id = m.daily_user_id\n        full outer join {{ ref('int_user_active_days_legacy_telemetry') }} l on s.daily_user_id = l.daily_user_id\n), user_first_active_day as (\n    select\n        server_id,\n        user_id,\n        min(activity_date) as first_active_day\n    from\n        user_active_days\n    where\n        activity_date >= '{{ var('telemetry_start_date')}}'\n    group by 1, 2\n), spined as (\n    -- Use date spine to fill in missing days\n    select\n        first_day.server_id,\n        first_day.user_id,\n        all_days.date_day\n    from\n        user_first_active_day first_day\n        left join {{ ref('telemetry_days') }} all_days on all_days.date_day >= first_day.first_active_day\n)\nselect\n    cast(spined.date_day as date) as activity_date\n    , spined.server_id\n    , spined.user_id\n\n{% for metric in metrics %}\n    , coalesce(user_active_days.{{metric}}, false) as {{metric}}_today\n    , max({{metric}}_today) over(\n        partition by spined.user_id order by spined.date_day\n        rows between 6 preceding and current row\n    ) as {{metric}}_last_7_days\n    , max({{metric}}_today) over(\n        partition by spined.user_id order by spined.date_day\n        rows between 29 preceding and current row\n    ) as {{metric}}_last_30_days\n{% endfor %}\nfrom\n    spined\n    left join user_active_days\n        on spined.date_day = user_active_days.activity_date\n            and spined.server_id = user_active_days.server_id\n            and spined.user_id = user_active_days.user_id", "language": "sql", "refs": [{"name": "int_user_active_days_server_telemetry", "package": null, "version": null}, {"name": "int_user_active_days_mobile_telemetry", "package": null, "version": null}, {"name": "int_user_active_days_legacy_telemetry", "package": null, "version": null}, {"name": "telemetry_days", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_user_active_days_server_telemetry", "model.mattermost_analytics.int_user_active_days_mobile_telemetry", "model.mattermost_analytics.int_user_active_days_legacy_telemetry", "model.mattermost_analytics.telemetry_days"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_user_active_days_legacy_telemetry": {"database": "jaffle_shop", "schema": "main", "name": "int_user_active_days_legacy_telemetry", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/active_users/int_user_active_days_legacy_telemetry.sql", "original_file_path": "models/intermediate/product/active_users/int_user_active_days_legacy_telemetry.sql", "unique_id": "model.mattermost_analytics.int_user_active_days_legacy_telemetry", "fqn": ["mattermost_analytics", "intermediate", "product", "active_users", "int_user_active_days_legacy_telemetry"], "alias": "int_user_active_days_legacy_telemetry", "checksum": {"name": "sha256", "checksum": "568716674db89b7eb2eff0933f7435f255514652c6ceba807b094ff5fab7f96a"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_user_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["received_at_date"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "User activity per date and server for old servers (up to 5.25.0). Used to mark the days that a user was active on\na server. This table contains rows only for the dates/servers that a user is active on.\n", "columns": {"daily_user_id": {"name": "daily_user_id", "description": "A unique id for each date/server/user combination.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activity_date": {"name": "activity_date", "description": "The date that the user was active on.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The user's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Boolean flag marking whether the user was active on the specific date and server. Always true.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "Date that the event for the user activity was received. Used for incremental load only, not to be used\ndownstream.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/active_users/_int_active_users__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_product", "incremental_strategy": "merge", "merge_update_columns": ["received_at_date"], "unique_key": ["daily_user_id"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.507054, "relation_name": "\"jaffle_shop\".main.int_user_active_days_legacy_telemetry", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"merge_update_columns\": ['received_at_date'],\n        \"unique_key\": ['daily_user_id'],\n        \"cluster_by\": ['received_at_date'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\nwith tmp as (\n    select\n        cast(received_at as date) as received_at_date,\n        cast(timestamp as date) as activity_date,\n        server_id,\n        user_id\n    from\n        {{ ref('stg_mattermost2__tracks') }}\n    where\n        -- Exclude items without user ids, such as server side telemetry etc\n        user_id is not null\n        -- Exclude items without server ids\n        and server_id is not null\n        -- Exclude items with missing timestamps\n        and timestamp is not null\n        and received_at <= current_timestamp\n{% if is_incremental() %}\n        -- this filter will only be applied on an incremental run\n        and received_at >= (select max(received_at_date) from {{ this }})\n{% endif %}\n    group by received_at_date, activity_date, server_id, user_id\n    order by received_at_date\n)\nselect\n    -- Surrogate key required as it's both a good practice, as well as allows merge incremental strategy.\n    {{ dbt_utils.generate_surrogate_key(['received_at_date', 'activity_date', 'server_id', 'user_id']) }} as daily_user_id\n    , activity_date\n    , server_id\n    , user_id\n    , true as is_active\n    -- Required for incremental loading\n    , received_at_date\nfrom\n    tmp\nwhere\n    activity_date >= '{{ var('telemetry_start_date')}}'", "language": "sql", "refs": [{"name": "stg_mattermost2__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.stg_mattermost2__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_user_active_days_mobile_telemetry": {"database": "jaffle_shop", "schema": "main", "name": "int_user_active_days_mobile_telemetry", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/active_users/int_user_active_days_mobile_telemetry.sql", "original_file_path": "models/intermediate/product/active_users/int_user_active_days_mobile_telemetry.sql", "unique_id": "model.mattermost_analytics.int_user_active_days_mobile_telemetry", "fqn": ["mattermost_analytics", "intermediate", "product", "active_users", "int_user_active_days_mobile_telemetry"], "alias": "int_user_active_days_mobile_telemetry", "checksum": {"name": "sha256", "checksum": "931b940509799a91dae8f63e2f6316dbd663b1fd5437342d592d0c46d09154cb"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_user_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["received_at_date"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "User activity per date and server for mobile. Used to mark the days that a user was active on\na server. This table contains rows only for the dates/servers that a user is active on.\n", "columns": {"daily_user_id": {"name": "daily_user_id", "description": "A unique id for each date/server/user combination.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activity_date": {"name": "activity_date", "description": "The date that the user was active on.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The user's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Boolean flag marking whether the user was active on the specific date and server. Always true.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "Date that the event for the user activity was received. Used for incremental load only, not to be used\ndownstream.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/active_users/_int_active_users__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_product", "incremental_strategy": "merge", "merge_update_columns": ["received_at_date"], "unique_key": ["daily_user_id"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.507396, "relation_name": "\"jaffle_shop\".main.int_user_active_days_mobile_telemetry", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"merge_update_columns\": ['received_at_date'],\n        \"unique_key\": ['daily_user_id'],\n        \"cluster_by\": ['received_at_date'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\nwith tmp as (\n    select\n        cast(received_at as date) as received_at_date,\n        cast(timestamp as date) as activity_date,\n        server_id,\n        user_id\n    from\n        {{ ref('stg_mm_mobile_prod__tracks') }}\n    where\n        -- Exclude items without user ids, such as server side telemetry etc\n        user_id is not null\n        -- Exclude items without server ids\n        and server_id is not null\n        -- Exclude items with missing timestamps\n        and timestamp is not null\n        and received_at <= current_timestamp\n{% if is_incremental() %}\n        -- this filter will only be applied on an incremental run\n        and received_at >= (select max(received_at_date) from {{ this }})\n{% endif %}\n    group by received_at_date, activity_date, server_id, user_id\n    order by received_at_date\n)\nselect\n    -- Surrogate key required as it's both a good practice, as well as allows merge incremental strategy.\n    {{ dbt_utils.generate_surrogate_key(['received_at_date', 'activity_date', 'server_id', 'user_id']) }} as daily_user_id\n    , activity_date\n    , server_id\n    , user_id\n    , true as is_active\n    -- Required for incremental loading\n    , received_at_date\nfrom\n    tmp\nwhere\n    activity_date >= '{{ var('telemetry_start_date')}}'", "language": "sql", "refs": [{"name": "stg_mm_mobile_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.stg_mm_mobile_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_user_active_days_server_telemetry": {"database": "jaffle_shop", "schema": "main", "name": "int_user_active_days_server_telemetry", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/active_users/int_user_active_days_server_telemetry.sql", "original_file_path": "models/intermediate/product/active_users/int_user_active_days_server_telemetry.sql", "unique_id": "model.mattermost_analytics.int_user_active_days_server_telemetry", "fqn": ["mattermost_analytics", "intermediate", "product", "active_users", "int_user_active_days_server_telemetry"], "alias": "int_user_active_days_server_telemetry", "checksum": {"name": "sha256", "checksum": "116f5b7ab925f7b403241255125819eb0082d91ef87ff28d540b27e0efc76363"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["daily_user_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "merge_update_columns": ["received_at_date"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "User activity per date and server for new servers (since 5.23.0). Used to mark the days that a user was active on\na server. This table contains rows only for the dates/servers that a user is active on.\n", "columns": {"daily_user_id": {"name": "daily_user_id", "description": "A unique id for each date/server/user combination.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activity_date": {"name": "activity_date", "description": "The date that the user was active on.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The user's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Boolean flag marking whether the user was active on the specific date and server. Always true.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_at_date": {"name": "received_at_date", "description": "Date that the event for the user activity was received. Used for incremental load only, not to be used\ndownstream.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/active_users/_int_active_users__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["nightly"], "schema": "int_product", "incremental_strategy": "merge", "merge_update_columns": ["received_at_date"], "unique_key": ["daily_user_id"], "cluster_by": ["received_at_date"], "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.507725, "relation_name": "\"jaffle_shop\".main.int_user_active_days_server_telemetry", "raw_code": "{{\n    config({\n        \"materialized\": \"incremental\",\n        \"incremental_strategy\": \"merge\",\n        \"merge_update_columns\": ['received_at_date'],\n        \"unique_key\": ['daily_user_id'],\n        \"cluster_by\": ['received_at_date'],\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n\nwith tmp as (\n    select\n        cast(received_at as date) as received_at_date,\n        cast(timestamp as date) as activity_date,\n        server_id,\n        user_id\n    from\n        {{ ref('stg_mm_telemetry_prod__tracks') }}\n    where\n        -- Exclude items without user ids, such as server side telemetry etc\n        user_id is not null\n        -- Exclude items without server ids\n        and server_id is not null\n        -- Exclude items with missing timestamps\n        and timestamp is not null\n        and received_at <= current_timestamp\n{% if is_incremental() %}\n        -- this filter will only be applied on an incremental run\n        and received_at >= (select max(received_at_date) from {{ this }})\n{% endif %}\n    group by received_at_date, activity_date, server_id, user_id\n    order by received_at_date\n)\nselect\n    -- Surrogate key required as it's both a good practice, as well as allows merge incremental strategy.\n    {{ dbt_utils.generate_surrogate_key(['received_at_date', 'activity_date', 'server_id', 'user_id']) }} as daily_user_id\n    , activity_date\n    , server_id\n    , user_id\n    , true as is_active\n    -- Required for incremental loading\n    , received_at_date\nfrom\n    tmp\nwhere\n    activity_date >= '{{ var('telemetry_start_date')}}'", "language": "sql", "refs": [{"name": "stg_mm_telemetry_prod__tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_prod__tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_server_active_days_spined": {"database": "jaffle_shop", "schema": "main", "name": "int_server_active_days_spined", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/int_server_active_days_spined.sql", "original_file_path": "models/intermediate/product/servers/int_server_active_days_spined.sql", "unique_id": "model.mattermost_analytics.int_server_active_days_spined", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "int_server_active_days_spined"], "alias": "int_server_active_days_spined", "checksum": {"name": "sha256", "checksum": "cc8d5d5a6d7c381fb834ae45efb1b221319abc02e939d44e6ab02c51068be48b"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "Contains record per server per day since the server's first active date and up to the latest day (inclusive) that\nthe server submitted any information. Uses data from new & old servers, as well as from mobile amd security \nupdate endpoint. Performs deduplication for servers that sent data both via Rudderstack and Segment.\n\nStores the latest server info submitted by a server per date. In case of data from multiple channels \n(i.e. rudderstack and segment), rudderstack is preferred.\n", "columns": {"daily_server_id": {"name": "daily_server_id", "description": "A unique id for each server and date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activity_date": {"name": "activity_date", "description": "The date that server sent the information.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_full": {"name": "version_full", "description": "The full semver of the Mattermost server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major version part of the server's semver. I.e. 7 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor version part of the server's semver. I.e. 2 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_patch": {"name": "version_patch", "description": "The patch version part of the server's semver. I.e. 3 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "The name of the operating system the server is installed at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type": {"name": "database_type", "description": "The type of the database used for this installation (i.e. postgres, mysql, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_version": {"name": "database_version", "description": "The version of the database.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_enterprise_ready": {"name": "is_enterprise_ready", "description": "Whether this server is an enterprise-ready build.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_cloud": {"name": "is_cloud", "description": "Whether this server is a cloud installation or not.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_ip": {"name": "server_ip", "description": "The IP address of the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_type": {"name": "installation_type", "description": "The method used for installing the Mattermost server (docker, deb package, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reported_versions": {"name": "reported_versions", "description": "The unique versions reported from the server for that date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_reported_versions": {"name": "count_reported_versions", "description": "The total number of distinct versions reported for the given date & server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_active_users": {"name": "daily_active_users", "description": "Daily active users reported by server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_active_users": {"name": "monthly_active_users", "description": "Monthly active users reported by server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_users": {"name": "count_registered_users", "description": "Total number of registered users. Includes deleted users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_deactivated_users": {"name": "count_registered_deactivated_users", "description": "Number of deleted users.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_registered_active_users": {"name": "count_registered_active_users", "description": "Total number of active registered users. Calculated as \n`count_registered_users - count_registered_deactivated_users`.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_telemetry_data": {"name": "has_telemetry_data", "description": "Whether there were telemetry data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_legacy_telemetry_data": {"name": "has_legacy_telemetry_data", "description": "Whether there were legacy (segment) telemetry data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_diagnostics_data": {"name": "has_diagnostics_data", "description": "Whether there were security update server data reported for this server on the given date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_missing_activity_data": {"name": "is_missing_activity_data", "description": "Whether server activity data are available for the given date and server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_int_servers__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "int_product", "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.510792, "relation_name": "\"jaffle_shop\".main.int_server_active_days_spined", "raw_code": "{{\n    config({\n        \"materialized\": \"table\",\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\nwith server_first_day_per_telemetry as (\n    select\n        server_id,\n        min(server_date) as first_server_date,\n        max(server_date) as last_server_date\n    from\n        {{ ref('int_server_telemetry_legacy_latest_daily') }}\n    where\n        server_date >= '{{ var('telemetry_start_date')}}'\n        -- and server_id not in (select server_id from {{ ref('int_excludable_servers') }} where server_id is not null)\n    group by\n        server_id\n\n    union all\n\n    select\n        server_id,\n        min(server_date) as first_server_date,\n        max(server_date) as last_server_date\n    from\n        {{ ref('int_server_telemetry_latest_daily') }}\n    where\n        server_date >= '{{ var('telemetry_start_date')}}'\n        -- and server_id not in (select server_id from {{ ref('int_excludable_servers') }} where server_id is not null)\n    group by\n        server_id\n\n    union all\n\n    select\n        server_id,\n        min(server_date) as first_server_date,\n        max(server_date) as last_server_date\n    from\n        {{ ref('int_server_security_update_latest_daily') }}\n    where\n        server_date >= '{{ var('telemetry_start_date')}}'\n        -- and server_id not in (select server_id from {{ ref('int_excludable_servers') }} where server_id is not null)\n    group by\n        server_id\n), server_activity_date_range as (\n    select\n        server_id,\n        min(first_server_date) as first_active_day,\n        max(last_server_date) as last_active_day\n    from\n        server_first_day_per_telemetry\n    group by\n        server_id\n), spined as (\n    -- Use date spine to fill in missing days\n    select\n        sadr.server_id,\n        all_days.date_day::date as activity_date,\n        {{ dbt_utils.generate_surrogate_key(['server_id', 'activity_date']) }} AS daily_server_id\n    from\n        server_activity_date_range sadr\n        left join {{ ref('telemetry_days') }} all_days\n            on all_days.date_day >= sadr.first_active_day and all_days.date_day <= sadr.last_active_day\n)\nselect\n    s.daily_server_id,\n    s.server_id,\n    s.activity_date,\n\n    -- Server information\n    coalesce(t.version_full, l.version_full, d.version_full) as version_full,\n    coalesce(t.version_major, l.version_major, d.version_major) as version_major,\n    coalesce(t.version_minor, l.version_minor, d.version_minor) as version_minor,\n    coalesce(t.version_patch, l.version_patch, d.version_patch) as version_patch,\n    coalesce(t.operating_system, l.operating_system, d.operating_system) as operating_system,\n    coalesce(t.database_type, l.database_type, d.database_type) as database_type,\n    coalesce(t.database_version, l.database_version) as database_version,\n    coalesce(t.edition, l.edition, d.is_enterprise_ready) as is_enterprise_ready,\n    t.installation_id,\n    case\n        when t.server_id is not null and t.installation_id is not null then true\n        when t.server_id is not null and t.installation_id is null then false\n        else null\n    end as is_cloud,\n    coalesce(t.server_ip, d.server_ip) as server_ip,\n    t.installation_type,\n    array_distinct(\n        array_cat(\n            coalesce(t.reported_versions, array_construct()),\n            array_cat(\n                coalesce(l.reported_versions, array_construct()),\n                coalesce(d.reported_versions, array_construct())\n            )\n        )\n    ) as reported_versions,\n    array_size(array_distinct(\n        array_cat(\n            coalesce(t.reported_versions, array_construct()),\n            array_cat(\n                coalesce(l.reported_versions, array_construct()),\n                coalesce(d.reported_versions, array_construct())\n            )\n        )\n    )) as count_reported_versions,\n\n    -- Activity data\n    coalesce(activity.daily_active_users, legacy_activity.daily_active_users, 0) as daily_active_users,\n    coalesce(activity.monthly_active_users, legacy_activity.monthly_active_users, 0) as monthly_active_users,\n    coalesce(activity.count_registered_users, legacy_activity.count_registered_users, 0) as count_registered_users,\n    coalesce(activity.count_registered_deactivated_users, legacy_activity.count_registered_deactivated_users, 0) as count_registered_deactivated_users,\n    coalesce(activity.count_registered_users, legacy_activity.count_registered_users, 0) - coalesce(activity.count_registered_deactivated_users, legacy_activity.count_registered_deactivated_users, 0) as count_registered_active_users,\n\n    -- Metadata regarding telemetry/activity availability\n    t.daily_server_id is not null as has_telemetry_data,\n    l.daily_server_id is not null as has_legacy_telemetry_data,\n    d.daily_server_id is not null as has_diagnostics_data,\n    activity.daily_server_id is null and legacy_activity.daily_server_id is null as is_missing_activity_data\n\nfrom\n    spined s\n    -- Telemetry (rudderstack) data\n    left join {{ ref('int_server_telemetry_latest_daily') }} t on s.daily_server_id = t.daily_server_id\n    -- Telemetry (segment) data\n    left join {{ ref('int_server_telemetry_legacy_latest_daily') }} l on s.daily_server_id = l.daily_server_id\n    -- Security update logs (diagnostics) data\n    left join {{ ref('int_server_security_update_latest_daily') }} d on s.daily_server_id = d.daily_server_id\n    -- Activity data (rudderstack)\n    left join {{ ref('int_activity_latest_daily') }} activity on s.daily_server_id = activity.daily_server_id\n    --  Activity data (segment)\n    left join {{ ref('int_activity_legacy_latest_daily') }} legacy_activity on s.daily_server_id = legacy_activity.daily_server_id\nwhere\n    s.server_id is not null", "language": "sql", "refs": [{"name": "int_server_telemetry_legacy_latest_daily", "package": null, "version": null}, {"name": "int_excludable_servers", "package": null, "version": null}, {"name": "int_server_telemetry_latest_daily", "package": null, "version": null}, {"name": "int_excludable_servers", "package": null, "version": null}, {"name": "int_server_security_update_latest_daily", "package": null, "version": null}, {"name": "int_excludable_servers", "package": null, "version": null}, {"name": "telemetry_days", "package": null, "version": null}, {"name": "int_server_telemetry_latest_daily", "package": null, "version": null}, {"name": "int_server_telemetry_legacy_latest_daily", "package": null, "version": null}, {"name": "int_server_security_update_latest_daily", "package": null, "version": null}, {"name": "int_activity_latest_daily", "package": null, "version": null}, {"name": "int_activity_legacy_latest_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.int_server_telemetry_legacy_latest_daily", "model.mattermost_analytics.int_excludable_servers", "model.mattermost_analytics.int_server_telemetry_latest_daily", "model.mattermost_analytics.int_server_security_update_latest_daily", "model.mattermost_analytics.telemetry_days", "model.mattermost_analytics.int_activity_latest_daily", "model.mattermost_analytics.int_activity_legacy_latest_daily"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_excludable_servers": {"database": "jaffle_shop", "schema": "main", "name": "int_excludable_servers", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/int_excludable_servers.sql", "original_file_path": "models/intermediate/product/servers/int_excludable_servers.sql", "unique_id": "model.mattermost_analytics.int_excludable_servers", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "int_excludable_servers"], "alias": "int_excludable_servers", "checksum": {"name": "sha256", "checksum": "7b5c93754f58a315ed33a4405056053ff2cde6e7be4ec779f90b463dbaa32b9f"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "List of servers with an exclusion reason. Combines different exclusion reasons.\nEach server might have multiple exclusion reasons.\n", "columns": {"server_id": {"name": "server_id", "description": "The server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "The reason this server id must be excluded.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_int_servers__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "int_product", "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.511032, "relation_name": "\"jaffle_shop\".main.int_excludable_servers", "raw_code": "-- Materializing this intermediate table as it's used multiple times downstream.\n{{\n    config({\n        \"materialized\": \"table\",\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\n    with seed_file as (\n    -- Servers defined in seed file\n    select\n        trim(server_id) as server_id,\n        trim(reason) as reason\n    from\n        {{ ref('excludable_servers') }}\n)\nselect * from seed_file\nunion all\nselect * from {{ ref('int_excludable_servers_invalid_security_data') }} where server_id is not null\nunion all\nselect * from {{ ref('int_excludable_servers_cloud_installations') }} where server_id is not null\nunion all\nselect * from {{ ref('int_excludable_servers_single_day_activity') }} where server_id is not null\nunion all\nselect * from {{ ref('int_excludable_servers_invalid_server_id')}} where server_id is not null", "language": "sql", "refs": [{"name": "excludable_servers", "package": null, "version": null}, {"name": "int_excludable_servers_invalid_security_data", "package": null, "version": null}, {"name": "int_excludable_servers_cloud_installations", "package": null, "version": null}, {"name": "int_excludable_servers_single_day_activity", "package": null, "version": null}, {"name": "int_excludable_servers_invalid_server_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["seed.mattermost_analytics.excludable_servers", "model.mattermost_analytics.int_excludable_servers_invalid_security_data", "model.mattermost_analytics.int_excludable_servers_cloud_installations", "model.mattermost_analytics.int_excludable_servers_single_day_activity", "model.mattermost_analytics.int_excludable_servers_invalid_server_id"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_server_summary": {"database": "jaffle_shop", "schema": "main", "name": "int_server_summary", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/int_server_summary.sql", "original_file_path": "models/intermediate/product/servers/int_server_summary.sql", "unique_id": "model.mattermost_analytics.int_server_summary", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "int_server_summary"], "alias": "int_server_summary", "checksum": {"name": "sha256", "checksum": "47ace30b8fbe177a705885382b32257d620af941b20e7184d2a6b34525ec88e1"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "Contains a summary of different data sources (telemetry, security update check etc)  for each server id.\n", "columns": {"server_id": {"name": "server_id", "description": "The server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_server_active_days": {"name": "count_server_active_days", "description": "The number of days the current server sent telemetry from server side.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_user_active_days": {"name": "count_user_active_days", "description": "The number of days that user telemetry was received for this server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_diagnostics_active_days": {"name": "count_diagnostics_active_days", "description": "The number of days that the current server called security update check endpoint.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_telemetry_first_date": {"name": "server_telemetry_first_date", "description": "The first date where server telemetry was detected for the current server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_telemetry_last_date": {"name": "server_telemetry_last_date", "description": "The last date where server telemetry was detected for the current server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_telemetry_first_date": {"name": "user_telemetry_first_date", "description": "The first date where user telemetry was detected for the current server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_telemetry_last_date": {"name": "user_telemetry_last_date", "description": "The last date where user telemetry was detected for the current server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "diagnostics_telemetry_first_date": {"name": "diagnostics_telemetry_first_date", "description": "The first date where request to security update check was detected for the current server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "diagnostics_telemetry_last_date": {"name": "diagnostics_telemetry_last_date", "description": "The last date where request to security update check was detected for the current server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_int_servers__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "int_product", "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.512596, "relation_name": "\"jaffle_shop\".main.int_server_summary", "raw_code": "-- Materialize as table in order to break chained view dependency.  This model performs quite a few operations,\n-- so it's a good candidate to materialize to table rather than ephemeral.\n-- See https://dbt-labs.github.io/dbt-project-evaluator/0.7/rules/performance/#chained-view-dependencies for more\n-- details\n{{\n    config({\n        \"materialized\": \"table\",\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\nwith server_side_activity as (\n    select\n        distinct server_id, server_date\n    from\n        {{ ref('int_server_telemetry_legacy_latest_daily') }}\n    union\n    select\n        distinct server_id, server_date\n    from\n        {{ ref('int_server_telemetry_latest_daily') }}\n),\nserver_summary as (\n    -- Servers side telemetry summary\n    select\n        server_id,\n        count(distinct server_date) as count_server_active_days,\n        min(server_date) as first_date,\n        max(server_date) as last_date\n    from\n        server_side_activity\n    group by 1\n),\nuser_activity as (\n    select\n        distinct server_id, activity_date\n    from\n        {{ ref('int_user_active_days_legacy_telemetry') }}\n    union\n    select\n        distinct server_id, activity_date\n    from\n        {{ ref('int_user_active_days_server_telemetry') }}\n),\nuser_summary as (\n    -- User telemetry summary\n    select\n        server_id,\n        count(distinct activity_date) as count_user_active_days,\n        min(activity_date) as first_date,\n        max(activity_date) as last_date\n    from\n        user_activity\n    group by 1\n),\n diagnostics_summary as (\n    select\n        server_id,\n        count(distinct log_date) as count_diagnostics_active_days,\n        min(log_date) as first_date,\n        max(log_date) as last_date\n    from\n        {{ ref('stg_diagnostics__log_entries') }}\n    group by server_id\n), all_server_ids as (\n    select distinct server_id from server_summary\n    union\n    select distinct server_id from user_summary\n    union\n    select distinct server_id from diagnostics_summary\n)\nselect\n    s.server_id,\n    coalesce(ss.count_server_active_days, 0) as count_server_active_days,\n    coalesce(us.count_user_active_days, 0) as count_user_active_days,\n    coalesce(ds.count_diagnostics_active_days, 0) as count_diagnostics_active_days,\n    ss.first_date as server_telemetry_first_date,\n    ss.last_date as server_telemetry_last_date,\n    us.first_date as user_telemetry_first_date,\n    us.last_date as user_telemetry_last_date,\n    ds.first_date as diagnostics_telemetry_first_date,\n    ds.last_date as diagnostics_telemetry_last_date\nfrom\n    all_server_ids s\n    left join server_summary ss on s.server_id = ss.server_id\n    left join user_summary us on s.server_id = us.server_id\n    left join diagnostics_summary ds on s.server_id = ds.server_id", "language": "sql", "refs": [{"name": "int_server_telemetry_legacy_latest_daily", "package": null, "version": null}, {"name": "int_server_telemetry_latest_daily", "package": null, "version": null}, {"name": "int_user_active_days_legacy_telemetry", "package": null, "version": null}, {"name": "int_user_active_days_server_telemetry", "package": null, "version": null}, {"name": "stg_diagnostics__log_entries", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_server_telemetry_legacy_latest_daily", "model.mattermost_analytics.int_server_telemetry_latest_daily", "model.mattermost_analytics.int_user_active_days_legacy_telemetry", "model.mattermost_analytics.int_user_active_days_server_telemetry", "model.mattermost_analytics.stg_diagnostics__log_entries"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics._int_server_installation_id_bridge": {"database": "jaffle_shop", "schema": "main", "name": "_int_server_installation_id_bridge", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_int_server_installation_id_bridge.sql", "original_file_path": "models/intermediate/product/servers/_int_server_installation_id_bridge.sql", "unique_id": "model.mattermost_analytics._int_server_installation_id_bridge", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_int_server_installation_id_bridge"], "alias": "_int_server_installation_id_bridge", "checksum": {"name": "sha256", "checksum": "3c9a0f1ab1f9528f289ff7c005023e5ee5b45fb229fd9fb0949d576eea9eb8e4"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "A bridge table between server id and installation id. Useful for cloud related servers.", "columns": {"server_id": {"name": "server_id", "description": "The server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_id": {"name": "installation_id", "description": "The server's installation id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_int_servers__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414207.512835, "relation_name": null, "raw_code": "select\n    server_id,\n    installation_id\nfrom\n    -- Installation ID exists only in rudderstack telemetry\n    {{ ref('int_server_telemetry_latest_daily') }}\nwhere\n    installation_id is not null\ngroup by 1, 2", "language": "sql", "refs": [{"name": "int_server_telemetry_latest_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_server_telemetry_latest_daily"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_excludable_servers_cloud_installations": {"database": "jaffle_shop", "schema": "main", "name": "int_excludable_servers_cloud_installations", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_excludable_servers/int_excludable_servers_cloud_installations.sql", "original_file_path": "models/intermediate/product/servers/_excludable_servers/int_excludable_servers_cloud_installations.sql", "unique_id": "model.mattermost_analytics.int_excludable_servers_cloud_installations", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_excludable_servers", "int_excludable_servers_cloud_installations"], "alias": "int_excludable_servers_cloud_installations", "checksum": {"name": "sha256", "checksum": "13bafb8b8c310f9e99dae4e32d49a9ccdfec6130fc61e48c7bc32edecc33bee8"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "Server exclusion reasons for cloud related servers. Exclusion reason may contain:\n- Telemetry id not registered in Stripe.\n- Internal email (email with @mattermost.com domain).\n", "columns": {"server_id": {"name": "server_id", "description": "The server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "The reason that this server is excluded.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_excludable_servers/_int_servers__excludable_servers__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414207.513144, "relation_name": null, "raw_code": "-- Servers marked as cloud from telemetry but no matching stripe data\nselect\n    distinct sib.server_id,\n    case\n        -- Telemetry indicates an installation id but it doesn't exist in stripe\n        when sib.installation_id is not null and s.cws_installation is null then 'No Stripe Installation Found'\n        -- Installation exists but email belongs to an internal user\n        when\n            lower(split_part(c.email, '@', 2)) in ('mattermost.com', 'adamcgross.com', 'hulen.com')\n            or lower(c.email) IN ('ericsteven1992@gmail.com', 'eric.nelson720@gmail.com') then 'Internal Email'\n        else null\n    end as reason\nfrom\n    {{ ref('_int_server_installation_id_bridge')}} sib\n    left join {{ ref('stg_stripe__subscriptions')}} s on sib.installation_id = s.cws_installation\n    left join {{ ref('stg_stripe__customers' )}} c on s.customer_id = c.customer_id and s.cws_installation is not null\nwhere\n    reason is not null", "language": "sql", "refs": [{"name": "_int_server_installation_id_bridge", "package": null, "version": null}, {"name": "stg_stripe__subscriptions", "package": null, "version": null}, {"name": "stg_stripe__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics._int_server_installation_id_bridge", "model.mattermost_analytics.stg_stripe__subscriptions", "model.mattermost_analytics.stg_stripe__customers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_excludable_servers_single_day_activity": {"database": "jaffle_shop", "schema": "main", "name": "int_excludable_servers_single_day_activity", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_excludable_servers/int_excludable_servers_single_day_activity.sql", "original_file_path": "models/intermediate/product/servers/_excludable_servers/int_excludable_servers_single_day_activity.sql", "unique_id": "model.mattermost_analytics.int_excludable_servers_single_day_activity", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_excludable_servers", "int_excludable_servers_single_day_activity"], "alias": "int_excludable_servers_single_day_activity", "checksum": {"name": "sha256", "checksum": "f51448684382404df63fac9d548b51d6a0aa9d562d0c88c93c02cb75bb1e7ca5"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "Server exclusion reasons based on number of active telemetry or diagnostics data. The goal of these exclusion\nis to catch any telemetry from test servers that seem to be active just for a single day. The majority of these \nservers is expected to be test servers or invalid telemetry data (i.e. pen test etc).\nExclusion reason may contain:\n- Server received telemetry for server side for a single day and no telemetry from users.\n- Server received telemetry for user actions for a single day and no telemetry from server.\n- Security update check endpoint was called for a single day for a server, but neither server nor user telemetry \n  has been recorded.\n", "columns": {"server_id": {"name": "server_id", "description": "The server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "The reason that this server is excluded.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_excludable_servers/_int_servers__excludable_servers__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414207.513634, "relation_name": null, "raw_code": "select\n    server_id,\n    case\n        -- Server side telemetry only\n        when count_server_active_days = 1 and count_user_active_days = 0 then 'Single day server-side telemetry only'\n        -- User telemetry only\n        when count_server_active_days = 0 and count_user_active_days = 1 then 'Single day user telemetry only'\n        -- Single day telemetry reported\n        when count_server_active_days = 1 and count_server_active_days = 1 then 'Single day telemetry only'\n        -- Security only reported\n        when count_server_active_days = 0 and count_server_active_days = 0 and count_diagnostics_active_days = 1 then 'Single day security only'\n        else null\n    end as reason\nfrom\n    {{ ref('int_server_summary') }}\nwhere\n    reason is not null", "language": "sql", "refs": [{"name": "int_server_summary", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_server_summary"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_excludable_servers_invalid_security_data": {"database": "jaffle_shop", "schema": "main", "name": "int_excludable_servers_invalid_security_data", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_excludable_servers/int_excludable_servers_invalid_security_data.sql", "original_file_path": "models/intermediate/product/servers/_excludable_servers/int_excludable_servers_invalid_security_data.sql", "unique_id": "model.mattermost_analytics.int_excludable_servers_invalid_security_data", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_excludable_servers", "int_excludable_servers_invalid_security_data"], "alias": "int_excludable_servers_invalid_security_data", "checksum": {"name": "sha256", "checksum": "89fb45aedba1f6eb5878fe058e46f7df29d03d1d391ed3e6a961bb52ff724828"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "Server exclusion reasons based on requests to security update check endpoint. The main source for these exclusion \nreasons was [Mattermost Handbook](https://handbook.mattermost.com/operations/operations/company-metrics/metrics-definitions#server-considerations).\nExclusion reason may contain:\n- Restricted IP (i.e. IPs reporting large number of server ids).\n- Ran tests\n- Server reporting active users > registered users\n- Custom build version format. \n", "columns": {"server_id": {"name": "server_id", "description": "The server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "The reason that this server is excluded.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_excludable_servers/_int_servers__excludable_servers__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414207.513401, "relation_name": null, "raw_code": "with security_exclusion_reasons as (\n    select\n        server_id,\n        case when server_ip = '194.30.0.184' then 'Restricted IP' end as restricted_ip,\n        case when has_run_unit_tests then 'Ran Tests' end as ran_tests,\n        case when count_users < count_active_users then 'Active Users > Registered Users' end as user_count_sanity_check,\n        case when is_custom_build_version_format then 'Custom Build Version Format' end as custom_build_version_format\n        -- One check in existing logic does not work:\n        -- dev_build is never 1\n    from {{ ref('stg_diagnostics__log_entries') }}\n)\nselect\n    distinct server_id, reason\nfrom\n    security_exclusion_reasons\n    unpivot(reason for explanation in (restricted_ip, ran_tests, user_count_sanity_check, custom_build_version_format))\nwhere\n    reason is not null", "language": "sql", "refs": [{"name": "stg_diagnostics__log_entries", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.stg_diagnostics__log_entries"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_excludable_servers_invalid_server_id": {"database": "jaffle_shop", "schema": "main", "name": "int_excludable_servers_invalid_server_id", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_excludable_servers/int_excludable_servers_invalid_server_id.sql", "original_file_path": "models/intermediate/product/servers/_excludable_servers/int_excludable_servers_invalid_server_id.sql", "unique_id": "model.mattermost_analytics.int_excludable_servers_invalid_server_id", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_excludable_servers", "int_excludable_servers_invalid_server_id"], "alias": "int_excludable_servers_invalid_server_id", "checksum": {"name": "sha256", "checksum": "84168256e598967ae73e8c6b7f64a7f1384a23a9a324002a3782a6a0ff03347e"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "List of servers with invalid ids (i.e. fake telemetry, uuids etc).", "columns": {"server_id": {"name": "server_id", "description": "The server id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "The reason that this server is excluded.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_excludable_servers/_int_servers__excludable_servers__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414207.513877, "relation_name": null, "raw_code": "select\n    server_id,\n    'Invalid server id'\nfrom\n    {{ ref('int_server_summary') }}\nwhere\n    length(server_id) <> 26", "language": "sql", "refs": [{"name": "int_server_summary", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.int_server_summary"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_server_security_update_latest_daily": {"database": "jaffle_shop", "schema": "main", "name": "int_server_security_update_latest_daily", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_latest_daily/int_server_security_update_latest_daily.sql", "original_file_path": "models/intermediate/product/servers/_latest_daily/int_server_security_update_latest_daily.sql", "unique_id": "model.mattermost_analytics.int_server_security_update_latest_daily", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_latest_daily", "int_server_security_update_latest_daily"], "alias": "int_server_security_update_latest_daily", "checksum": {"name": "sha256", "checksum": "1ca98fd333c49a8414cc7d05ee44885e47b9da9e7aca83451be3d8c27ecefcce"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "snowflake_warehouse": "transform_l"}, "tags": ["intermediate", "nightly"], "description": "Daily server security update information. In case multiple server informations were\nsubmitted for the same server within the same day, the last values are stored.\n", "columns": {"daily_server_id": {"name": "daily_server_id", "description": "A unique id for each server and date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_date": {"name": "server_date", "description": "The date that server sent the information.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_full": {"name": "version_full", "description": "The full semver of the Mattermost server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major version part of the server's semver. I.e. 7 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor version part of the server's semver. I.e. 2 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_patch": {"name": "version_patch", "description": "The patch version part of the server's semver. I.e. 3 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_ip": {"name": "server_ip", "description": "The IP that the request for security updates came from.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "The name of the operating system the server is installed at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type": {"name": "database_type", "description": "The type of the database used for this installation (i.e. postgres, mysql, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_enterprise_ready": {"name": "is_enterprise_ready", "description": "Whether it's an enterprise ready build.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_latest_daily/_int_servers__latest_daily__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["nightly"], "schema": "int_product", "snowflake_warehouse": "transform_l"}, "created_at": 1699414207.5156639, "relation_name": "\"jaffle_shop\".main.int_server_security_update_latest_daily", "raw_code": "{{\n    config({\n        \"materialized\": \"table\",\n        \"snowflake_warehouse\": \"transform_l\"\n    })\n}}\nselect\n    server_id,\n    log_date AS server_date,\n    {{ dbt_utils.generate_surrogate_key(['server_id', 'server_date']) }} AS daily_server_id,\n    version_full,\n    version_major,\n    version_minor,\n    version_patch,\n    server_ip,\n    operating_system,\n    database_type,\n    is_enterprise_ready,\n    -- Can be used to identify potential upgrade/upgrade attempts or erroneous data\n    count(distinct version_full) over (partition by server_id, server_date) as count_reported_versions,\n    array_unique_agg(version_full) over (partition by server_id, server_date) as reported_versions\nfrom\n    {{ ref('stg_diagnostics__log_entries') }}\n{% if is_incremental() %}\nwhere\n    -- this filter will only be applied on an incremental run\n    log_date >= (select max(server_date) from {{ this }})\n{% endif %}\n-- Keep latest record per day\nqualify row_number() over (partition by server_id, server_date order by log_at desc) = 1", "language": "sql", "refs": [{"name": "stg_diagnostics__log_entries", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.dbt.is_incremental"], "nodes": ["model.mattermost_analytics.stg_diagnostics__log_entries"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_activity_latest_daily": {"database": "jaffle_shop", "schema": "main", "name": "int_activity_latest_daily", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_latest_daily/int_activity_latest_daily.sql", "original_file_path": "models/intermediate/product/servers/_latest_daily/int_activity_latest_daily.sql", "unique_id": "model.mattermost_analytics.int_activity_latest_daily", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_latest_daily", "int_activity_latest_daily"], "alias": "int_activity_latest_daily", "checksum": {"name": "sha256", "checksum": "9e1fd6afbbd01d0d6db73d14a6e2f9b8c36d06521ef10660668151124bd75ec0"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414206.3720992, "relation_name": null, "raw_code": "select\n    server_id,\n    CAST(timestamp AS date) AS server_date,\n    {{ dbt_utils.generate_surrogate_key(['server_id', 'server_date']) }} AS daily_server_id,\n    daily_active_users,\n    monthly_active_users,\n    count_registered_users,\n    count_registered_deactivated_users\nfrom\n    {{ ref('stg_mm_telemetry_prod__activity') }}\nwhere\n    -- Ignore rows where server date is in the future.\n    server_date <= CURRENT_DATE()\n-- Keep latest record per day\nqualify row_number() over (partition by server_id, server_date order by timestamp desc) = 1", "language": "sql", "refs": [{"name": "stg_mm_telemetry_prod__activity", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_prod__activity"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_server_telemetry_legacy_latest_daily": {"database": "jaffle_shop", "schema": "main", "name": "int_server_telemetry_legacy_latest_daily", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_latest_daily/int_server_telemetry_legacy_latest_daily.sql", "original_file_path": "models/intermediate/product/servers/_latest_daily/int_server_telemetry_legacy_latest_daily.sql", "unique_id": "model.mattermost_analytics.int_server_telemetry_legacy_latest_daily", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_latest_daily", "int_server_telemetry_legacy_latest_daily"], "alias": "int_server_telemetry_legacy_latest_daily", "checksum": {"name": "sha256", "checksum": "c52cbec56d1805a9b19348837d294510ea6ff2e934b35d6337c7462170e91428"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "Daily server information for old servers (<=5.25.0). In case multiple server informations were\nsubmitted for the same server within the same day, the last values are stored.\n", "columns": {"daily_server_id": {"name": "daily_server_id", "description": "A unique id for each server and date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_date": {"name": "server_date", "description": "The date that server sent the information.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_system_admins": {"name": "count_system_admins", "description": "The number of system admins.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_full": {"name": "version_full", "description": "The full semver of the Mattermost server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major version part of the server's semver. I.e. 7 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor version part of the server's semver. I.e. 2 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_patch": {"name": "version_patch", "description": "The patch version part of the server's semver. I.e. 3 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "The name of the operating system the server is installed at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type": {"name": "database_type", "description": "The type of the database used for this installation (i.e. postgres, mysql, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_version": {"name": "database_version", "description": "The version of the database.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "edition": {"name": "edition", "description": "Whether this server is an enterprise-ready build.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_reported_versions": {"name": "count_reported_versions", "description": "The total number of distinct versions reported for the given date & server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reported_versions": {"name": "reported_versions", "description": "The unique versions reported from the server for that date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_latest_daily/_int_servers__latest_daily__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414207.514525, "relation_name": null, "raw_code": "select\n    server_id,\n    CAST(timestamp AS date) AS server_date,\n    {{ dbt_utils.generate_surrogate_key(['server_id', 'server_date']) }} AS daily_server_id,\n    count_system_admins,\n    version_full,\n    version_major,\n    version_minor,\n    version_patch,\n    operating_system,\n    database_type,\n    database_version,\n    edition,\n    -- Can be used to identify potential upgrade/upgrade attempts or erroneous data\n    count(distinct version_full) over (partition by server_id, server_date) as count_reported_versions,\n    array_unique_agg(version_full) over (partition by server_id, server_date) as reported_versions\nfrom\n    {{ ref('stg_mattermost2__server') }}\n-- Keep latest record per day\nqualify row_number() over (partition by server_id, server_date order by timestamp desc) = 1", "language": "sql", "refs": [{"name": "stg_mattermost2__server", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.stg_mattermost2__server"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_activity_legacy_latest_daily": {"database": "jaffle_shop", "schema": "main", "name": "int_activity_legacy_latest_daily", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_latest_daily/int_activity_legacy_latest_daily.sql", "original_file_path": "models/intermediate/product/servers/_latest_daily/int_activity_legacy_latest_daily.sql", "unique_id": "model.mattermost_analytics.int_activity_legacy_latest_daily", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_latest_daily", "int_activity_legacy_latest_daily"], "alias": "int_activity_legacy_latest_daily", "checksum": {"name": "sha256", "checksum": "a840528c4d43c4fdb3de394d4ac730fa779e8681323469434203fae2b775c505"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414206.378901, "relation_name": null, "raw_code": "select\n    server_id,\n    CAST(timestamp AS date) AS server_date,\n    {{ dbt_utils.generate_surrogate_key(['server_id', 'server_date']) }} AS daily_server_id,\n    daily_active_users,\n    monthly_active_users,\n    count_registered_users,\n    count_registered_deactivated_users\nfrom\n    {{ ref('stg_mattermost2__activity') }}\nwhere\n    -- Ignore rows where server date is in the future.\n    server_date <= CURRENT_DATE()\n-- Keep latest record per day\nqualify row_number() over (partition by server_id, server_date order by timestamp desc) = 1", "language": "sql", "refs": [{"name": "stg_mattermost2__activity", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.stg_mattermost2__activity"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.mattermost_analytics.int_server_telemetry_latest_daily": {"database": "jaffle_shop", "schema": "main", "name": "int_server_telemetry_latest_daily", "resource_type": "model", "package_name": "mattermost_analytics", "path": "intermediate/product/servers/_latest_daily/int_server_telemetry_latest_daily.sql", "original_file_path": "models/intermediate/product/servers/_latest_daily/int_server_telemetry_latest_daily.sql", "unique_id": "model.mattermost_analytics.int_server_telemetry_latest_daily", "fqn": ["mattermost_analytics", "intermediate", "product", "servers", "_latest_daily", "int_server_telemetry_latest_daily"], "alias": "int_server_telemetry_latest_daily", "checksum": {"name": "sha256", "checksum": "c0881232c263bf09e0cba7153784eb18320809b146887b5e641468169af91454"}, "config": {"enabled": true, "alias": null, "schema": "int_product", "database": null, "tags": ["intermediate", "nightly"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": ["intermediate", "nightly"], "description": "Daily server information for newer servers (>=5.23.0). In case multiple server informations were\nsubmitted for the same server within the same day, the last values are stored.\n", "columns": {"daily_server_id": {"name": "daily_server_id", "description": "A unique id for each server and date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_id": {"name": "server_id", "description": "The server's unique id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_date": {"name": "server_date", "description": "The date that server sent the information.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_system_admins": {"name": "count_system_admins", "description": "The number of system admins.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_full": {"name": "version_full", "description": "The full semver of the Mattermost server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_major": {"name": "version_major", "description": "The major version part of the server's semver. I.e. 7 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_minor": {"name": "version_minor", "description": "The minor version part of the server's semver. I.e. 2 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_patch": {"name": "version_patch", "description": "The patch version part of the server's semver. I.e. 3 for 7.2.3.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_id": {"name": "installation_id", "description": "The reported ID of the installation.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_type": {"name": "installation_type", "description": "The method used for installing the Mattermost server (docker, deb package, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "anonymous_id": {"name": "anonymous_id", "description": "An anonymous id for the server", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_ip": {"name": "server_ip", "description": "The IP address of the server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "The name of the operating system the server is installed at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type": {"name": "database_type", "description": "The type of the database used for this installation (i.e. postgres, mysql, ...).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_version": {"name": "database_version", "description": "The version of the database.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "edition": {"name": "edition", "description": "Whether this server is an enterprise-ready build.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "count_reported_versions": {"name": "count_reported_versions", "description": "The total number of distinct versions reported for the given date & server.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reported_versions": {"name": "reported_versions", "description": "The unique versions reported from the server for that date.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://models/intermediate/product/servers/_latest_daily/_int_servers__latest_daily__models.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["nightly"], "schema": "int_product"}, "created_at": 1699414207.5152562, "relation_name": null, "raw_code": "select\n    server_id,\n    CAST(timestamp AS date) AS server_date,\n    {{ dbt_utils.generate_surrogate_key(['server_id', 'server_date']) }} AS daily_server_id,\n    count_system_admins,\n    version_full,\n    version_major,\n    version_minor,\n    version_patch,\n    installation_id,\n    installation_type,\n    anonymous_id,\n    server_ip,\n    operating_system,\n    database_type,\n    database_version,\n    edition,\n    -- Can be used to identify potential upgrade/upgrade attempts or erroneous data\n    count(distinct version_full) over (partition by server_id, server_date) as count_reported_versions,\n    array_unique_agg(version_full) over (partition by server_id, server_date) as reported_versions\nfrom\n    {{ ref('stg_mm_telemetry_prod__server') }}\nwhere\n    -- Ignore rows where server date is in the future.\n    server_date <= CURRENT_DATE()\n-- Keep latest record per day\nqualify row_number() over (partition by server_id, server_date order by timestamp desc) = 1", "language": "sql", "refs": [{"name": "stg_mm_telemetry_prod__server", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.mattermost_analytics.stg_mm_telemetry_prod__server"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "test.mattermost_analytics.test_trial_requests": {"database": "jaffle_shop", "schema": "main", "name": "test_trial_requests", "resource_type": "test", "package_name": "mattermost_analytics", "path": "staging/cws/test_trial_requests.sql", "original_file_path": "tests/staging/cws/test_trial_requests.sql", "unique_id": "test.mattermost_analytics.test_trial_requests", "fqn": ["mattermost_analytics", "staging", "cws", "test_trial_requests"], "alias": "test_trial_requests", "checksum": {"name": "sha256", "checksum": "351bdcaa2699afb6300325aae7ee9c29b2f4906b1a459d7884d2db86fd764955"}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "> 5"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "warn", "error_if": "> 5"}, "created_at": 1699414206.425952, "relation_name": null, "raw_code": "-- There are a few examples in the original data. Fail if new are introduced.\n{{ config(\n    severity = 'warn',\n    error_if = '> 5'\n) }}\n\nselect\n    contactemail,\n    contactemail is null\n    or contactemail = ''\n    or {{validate_email('contactemail')}} as is_valid_contactemail,\n    email,\n    {{validate_email('email')}} as is_valid_email\nfrom\n    {{ source('cws', 'trial_requests') }}\nwhere\n    not is_valid_contactemail\n    or not is_valid_email", "language": "sql", "refs": [], "sources": [["cws", "trial_requests"]], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.validate_email"], "nodes": ["source.mattermost_analytics.cws.trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "test.mattermost_analytics.test_lead__unique_email": {"database": "jaffle_shop", "schema": "main", "name": "test_lead__unique_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "staging/salesforce/test_lead__unique_email.sql", "original_file_path": "tests/staging/salesforce/test_lead__unique_email.sql", "unique_id": "test.mattermost_analytics.test_lead__unique_email", "fqn": ["mattermost_analytics", "staging", "salesforce", "test_lead__unique_email"], "alias": "test_lead__unique_email", "checksum": {"name": "sha256", "checksum": "1fe96774824b5e659dbcd491708757db36abce5a3e1d9288d018eb01acc3e779"}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "> 850"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"], "severity": "warn", "error_if": "> 850"}, "created_at": 1699414206.428958, "relation_name": null, "raw_code": "-- Warn until the duplicates are fixed\n{{ config(\n    severity = 'warn',\n    error_if = '> 850'\n) }}\n\nselect\n    email, count(lead_id)\nfrom {{ ref('stg_salesforce__lead')}}\ngroup by email\nhaving count(lead_id) > 1", "language": "sql", "refs": [{"name": "stg_salesforce__lead", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.stg_salesforce__lead"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "test.mattermost_analytics.test_contact__unique_email": {"database": "jaffle_shop", "schema": "main", "name": "test_contact__unique_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "staging/salesforce/test_contact__unique_email.sql", "original_file_path": "tests/staging/salesforce/test_contact__unique_email.sql", "unique_id": "test.mattermost_analytics.test_contact__unique_email", "fqn": ["mattermost_analytics", "staging", "salesforce", "test_contact__unique_email"], "alias": "test_contact__unique_email", "checksum": {"name": "sha256", "checksum": "9707aa10c7651f92b8f76bd6bdeffac0f2d093724ced80a090c9995e9e7114ad"}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "> 260"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"], "severity": "warn", "error_if": "> 260"}, "created_at": 1699414206.431472, "relation_name": null, "raw_code": "-- Warn until the duplicates are fixed\n{{ config(\n    severity = 'warn',\n    error_if = '> 260'\n) }}\n\nselect\n    email, count(contact_id)\nfrom {{ ref('stg_salesforce__contact')}}\ngroup by email\nhaving count(contact_id) > 1", "language": "sql", "refs": [{"name": "stg_salesforce__contact", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.stg_salesforce__contact"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "test.mattermost_analytics.test_subscription__onprem_has_license_data": {"database": "jaffle_shop", "schema": "main", "name": "test_subscription__onprem_has_license_data", "resource_type": "test", "package_name": "mattermost_analytics", "path": "staging/stripe/test_subscription__onprem_has_license_data.sql", "original_file_path": "tests/staging/stripe/test_subscription__onprem_has_license_data.sql", "unique_id": "test.mattermost_analytics.test_subscription__onprem_has_license_data", "fqn": ["mattermost_analytics", "staging", "stripe", "test_subscription__onprem_has_license_data"], "alias": "test_subscription__onprem_has_license_data", "checksum": {"name": "sha256", "checksum": "29ef2c19afea949b7423387b26348dd76b35dbc5cb245fd57e1a8fc4d3ac87fd"}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414206.4339259, "relation_name": null, "raw_code": "-- Test all specs defined in https://mattermost.atlassian.net/wiki/spaces/DATAENG/pages/2453733377/Self+Serve+Renewals\n\nselect\n    s.subscription_id,\n    p.name as plan_name,\n    case\n        -- Handle backfills\n        when s.sfdc_migrated_license_id is not null then sfdc_migrated_started_at\n        else s.license_start_at\n    end as coalesced_license_start_at,\n    case\n        -- Handle backfills\n        when s.sfdc_migrated_license_id is not null then s.current_period_end_at\n        else s.license_end_at\n    end as coalesced_license_end_at,\n    license_id is null as is_missing_license_id,\n    coalesced_license_start_at is null as is_missing_license_start_at,\n    coalesced_license_end_at is null as is_missing_license_end_at\nfrom\n    {{ ref('stg_stripe__subscriptions')}} s\n    left join {{ ref('stg_stripe__subscription_items')}} si on s.subscription_id = si.subscription_id\n    left join {{ ref('stg_stripe__products')}} p on si.product_id = p.product_id\nwhere\n    -- Onprem subscription/subscription items\n    p.name not ilike '%cloud%'\n    -- Skip support subscription items and focus on main plan\n    and p.name <> 'Premier Support'\n    -- Skip incomplete subscriptions\n    and s.status <> 'incomplete_expired'\n    and (\n        -- License id must be non null\n        is_missing_license_id\n        -- License must have start and end date\n        or is_missing_license_start_at\n        or is_missing_license_end_at\n    )\n    -- Ignoring subscriptions that come from admin portal/sales\n    and s.renewal_type <> 'sales-only'\n    -- Data before this date might not be in-line with specification\n    and s.created_at > '2021-04-01'", "language": "sql", "refs": [{"name": "stg_stripe__subscriptions", "package": null, "version": null}, {"name": "stg_stripe__subscription_items", "package": null, "version": null}, {"name": "stg_stripe__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.stg_stripe__subscriptions", "model.mattermost_analytics.stg_stripe__subscription_items", "model.mattermost_analytics.stg_stripe__products"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "test.mattermost_analytics.test_subscription_items__max_two_per_onprem_subscription": {"database": "jaffle_shop", "schema": "main", "name": "test_subscription_items__max_two_per_onprem_subscription", "resource_type": "test", "package_name": "mattermost_analytics", "path": "staging/stripe/test_subscription_items__max_two_per_onprem_subscription.sql", "original_file_path": "tests/staging/stripe/test_subscription_items__max_two_per_onprem_subscription.sql", "unique_id": "test.mattermost_analytics.test_subscription_items__max_two_per_onprem_subscription", "fqn": ["mattermost_analytics", "staging", "stripe", "test_subscription_items__max_two_per_onprem_subscription"], "alias": "test_subscription_items__max_two_per_onprem_subscription", "checksum": {"name": "sha256", "checksum": "2315004038a20263c40e7fbb60a1ab15eca533e4a0c3d49008e6015b17332d2b"}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414206.4365141, "relation_name": null, "raw_code": "select\n    si.subscription_id, count(si.subscription_item_id)\nfrom\n    {{ ref('stg_stripe__subscription_items')}} si\n    left join {{ ref('stg_stripe__products')}} p on si.product_id = p.product_id\nwhere\n    p.name not ilike '%cloud%'\ngroup by subscription_id\nhaving count(si.subscription_item_id) > 2", "language": "sql", "refs": [{"name": "stg_stripe__subscription_items", "package": null, "version": null}, {"name": "stg_stripe__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.stg_stripe__subscription_items", "model.mattermost_analytics.stg_stripe__products"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "test.mattermost_analytics.test_valid_emails": {"database": "jaffle_shop", "schema": "main", "name": "test_valid_emails", "resource_type": "test", "package_name": "mattermost_analytics", "path": "intermediate/sales/test_valid_emails.sql", "original_file_path": "tests/intermediate/sales/test_valid_emails.sql", "unique_id": "test.mattermost_analytics.test_valid_emails", "fqn": ["mattermost_analytics", "intermediate", "sales", "test_valid_emails"], "alias": "test_valid_emails", "checksum": {"name": "sha256", "checksum": "9a7f3ba744898dcf99ab7b92d4a769e32ede85663a6aa5809207b13fcbc57f07"}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "warn"}, "created_at": 1699414206.438872, "relation_name": null, "raw_code": "{{ config(\n    severity = 'warn'\n) }}\n\nselect\n    email,\n    email is null\n    or email = ''\n    or {{validate_email('email')}} as is_valid_email\nfrom\n    {{ ref('int_cloud_trial_requests') }}\nwhere\n    not is_valid_email", "language": "sql", "refs": [{"name": "int_cloud_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.validate_email"], "nodes": ["model.mattermost_analytics.int_cloud_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "seed.mattermost_analytics.dbt_project_evaluator_exceptions": {"database": "jaffle_shop", "schema": "main", "name": "dbt_project_evaluator_exceptions", "resource_type": "seed", "package_name": "mattermost_analytics", "path": "dbt_project_evaluator_exceptions.csv", "original_file_path": "seeds/dbt_project_evaluator_exceptions.csv", "unique_id": "seed.mattermost_analytics.dbt_project_evaluator_exceptions", "fqn": ["mattermost_analytics", "dbt_project_evaluator_exceptions"], "alias": "dbt_project_evaluator_exceptions", "checksum": {"name": "sha256", "checksum": "ab954ab7398ac96b13ccaa8721469aea8054986695557a006a711194e67c9adf"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"fct_name": "string", "column_name": "string", "id_to_exclude": "string", "comment": "string"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "List of exceptions not to be reported.", "columns": {"fct_name": {"name": "fct_name", "description": "Name of the fact table to define exceptions.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "column_name": {"name": "column_name", "description": "Column name from fct_name to define exceptions.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id_to_exclude": {"name": "id_to_exclude", "description": "Values (or like pattern) to exclude for column_name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment": {"name": "comment", "description": "Field to document why a given exception is legitimate.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://seeds/seeds.yml", "build_path": null, "deferred": false, "unrendered_config": {"column_types": {"fct_name": "string", "column_name": "string", "id_to_exclude": "string", "comment": "string"}, "enabled": true}, "created_at": 1699414207.634133, "relation_name": "\"jaffle_shop\".main.dbt_project_evaluator_exceptions", "raw_code": "", "root_path": "/Users/wcchang/InfuseAI/projects/tmp/mattermost-data-warehouse/transform/mattermost-analytics", "depends_on": {"macros": []}}, "seed.mattermost_analytics.country_codes": {"database": "jaffle_shop", "schema": "main", "name": "country_codes", "resource_type": "seed", "package_name": "mattermost_analytics", "path": "salesforce/country_codes.csv", "original_file_path": "seeds/salesforce/country_codes.csv", "unique_id": "seed.mattermost_analytics.country_codes", "fqn": ["mattermost_analytics", "salesforce", "country_codes"], "alias": "country_codes", "checksum": {"name": "sha256", "checksum": "cf0060e188ff98b2a2d1f17036bad07b865d48991eb7c37ef2a483624ead0aae"}, "config": {"enabled": true, "alias": null, "schema": "seed_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {"code": "varchar(2)", "name": "varchar(50)"}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"enabled": true, "schema": "seed_salesforce", "column_types": {"code": "varchar(2)", "name": "varchar(50)"}}, "created_at": 1699414206.520737, "relation_name": "\"jaffle_shop\".main.country_codes", "raw_code": "", "root_path": "/Users/wcchang/InfuseAI/projects/tmp/mattermost-data-warehouse/transform/mattermost-analytics", "depends_on": {"macros": []}}, "seed.mattermost_analytics.excludable_servers": {"database": "jaffle_shop", "schema": "main", "name": "excludable_servers", "resource_type": "seed", "package_name": "mattermost_analytics", "path": "servers/excludable_servers.csv", "original_file_path": "seeds/servers/excludable_servers.csv", "unique_id": "seed.mattermost_analytics.excludable_servers", "fqn": ["mattermost_analytics", "servers", "excludable_servers"], "alias": "excludable_servers", "checksum": {"name": "sha256", "checksum": "dd33370256697d12cfd388ce43157bbb631553a46fee91422fe55b3e9c1ef437"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"enabled": true}, "created_at": 1699414206.5219069, "relation_name": "\"jaffle_shop\".main.excludable_servers", "raw_code": "", "root_path": "/Users/wcchang/InfuseAI/projects/tmp/mattermost-data-warehouse/transform/mattermost-analytics", "depends_on": {"macros": []}}, "operation.mattermost_analytics.mattermost_analytics-on-run-start-0": {"database": "jaffle_shop", "schema": "main", "name": "mattermost_analytics-on-run-start-0", "resource_type": "operation", "package_name": "mattermost_analytics", "path": "hooks/mattermost_analytics-on-run-start-0.sql", "original_file_path": "./dbt_project.yml", "unique_id": "operation.mattermost_analytics.mattermost_analytics-on-run-start-0", "fqn": ["mattermost_analytics", "hooks", "mattermost_analytics-on-run-start-0"], "alias": "mattermost_analytics-on-run-start-0", "checksum": {"name": "sha256", "checksum": "d685a1c5ccb17b5eb28994a30caaec62f3a2f50d9ae3050ae8b78299e2482be2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}}, "tags": ["on-run-start"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414206.558985, "relation_name": null, "raw_code": "{{ create_parse_qs_udf()}}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.mattermost_analytics.create_parse_qs_udf"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "index": 0}, "model.dbt_project_evaluator.stg_nodes": {"database": "jaffle_shop", "schema": "main", "name": "stg_nodes", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/stg_nodes.sql", "original_file_path": "models/staging/graph/stg_nodes.sql", "unique_id": "model.dbt_project_evaluator.stg_nodes", "fqn": ["dbt_project_evaluator", "staging", "graph", "stg_nodes"], "alias": "stg_nodes", "checksum": {"name": "sha256", "checksum": "a5dd6c5c50790a30619356e1af038e55bccb8b93bea38dc2b09cc55a9985f44f"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "{{ insert_resources_from_graph(this, resource_type='nodes') }}", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "post-hook": ["{{ insert_resources_from_graph(this, resource_type='nodes') }}"], "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.5797482, "relation_name": "\"jaffle_shop\".main.stg_nodes", "raw_code": "{{\n    config(\n        materialized='table',\n        post_hook=\"{{ insert_resources_from_graph(this, resource_type='nodes') }}\"\n    )\n}}\n\n{% if execute %}\n    {{ check_model_is_table(model) }}\n{% endif %}\n\n/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect \n\n    cast(null as {{ dbt.type_string() }}) as unique_id,\n    cast(null as {{ dbt.type_string() }}) as name,\n    cast(null as {{ dbt.type_string() }}) as resource_type,\n    cast(null as {{ dbt.type_string() }}) as file_path,\n    cast(True as boolean) as is_enabled,\n    cast(null as {{ dbt.type_string() }}) as materialized,\n    cast(null as {{ dbt.type_string() }}) as on_schema_change,\n    cast(null as {{ dbt.type_string() }}) as database,\n    cast(null as {{ dbt.type_string() }}) as schema,\n    cast(null as {{ dbt.type_string() }}) as package_name,\n    cast(null as {{ dbt.type_string() }}) as alias,\n    cast(True as boolean) as is_described,\n    cast(null as {{ dbt.type_string() }}) as column_name,\n    cast(null as {{ dbt.type_string() }}) as meta,\n    cast(null as {{ dbt.type_string() }}) as hard_coded_references,\n    cast(null as {{ dbt.type_string() }}) as macro_dependencies,\n    cast(True as boolean) as is_generic_test,\n    cast(True as boolean) as is_excluded\n\nfrom dummy_cte\nwhere false", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt_project_evaluator.insert_resources_from_graph"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.stg_exposure_relationships": {"database": "jaffle_shop", "schema": "main", "name": "stg_exposure_relationships", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/stg_exposure_relationships.sql", "original_file_path": "models/staging/graph/stg_exposure_relationships.sql", "unique_id": "model.dbt_project_evaluator.stg_exposure_relationships", "fqn": ["dbt_project_evaluator", "staging", "graph", "stg_exposure_relationships"], "alias": "stg_exposure_relationships", "checksum": {"name": "sha256", "checksum": "80d348798f7b7c4a00990729922ccdd248ff8f8b29ee3dbffdd6589315d3930f"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.596952, "relation_name": "\"jaffle_shop\".main.stg_exposure_relationships", "raw_code": "with \n\n_base_exposure_relationships as (\n    select * from {{ ref('base_exposure_relationships') }}\n),\n\nfinal as (\n    select \n        {{ dbt_utils.generate_surrogate_key(['resource_id', 'direct_parent_id']) }} as unique_id, \n        *\n    from _base_exposure_relationships\n)\n\nselect distinct * from final", "language": "sql", "refs": [{"name": "base_exposure_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.dbt_project_evaluator.base_exposure_relationships"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.stg_node_relationships": {"database": "jaffle_shop", "schema": "main", "name": "stg_node_relationships", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/stg_node_relationships.sql", "original_file_path": "models/staging/graph/stg_node_relationships.sql", "unique_id": "model.dbt_project_evaluator.stg_node_relationships", "fqn": ["dbt_project_evaluator", "staging", "graph", "stg_node_relationships"], "alias": "stg_node_relationships", "checksum": {"name": "sha256", "checksum": "3b1dff9088982b74dc0917adbd9567d164e56b85c9fec26adfc961be2b22ac63"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.600502, "relation_name": "\"jaffle_shop\".main.stg_node_relationships", "raw_code": "with \n\n_base_node_relationships as (\n    select * from {{ ref('base_node_relationships') }}\n),\n\nfinal as (\n    select \n        {{ dbt_utils.generate_surrogate_key(['resource_id', 'direct_parent_id']) }} as unique_id, \n        *\n    from _base_node_relationships\n)\n\n-- we need distinct as the graph lists relationships multiple times if they are ref'd multiple times\nselect distinct * from final", "language": "sql", "refs": [{"name": "base_node_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.dbt_project_evaluator.base_node_relationships"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.stg_sources": {"database": "jaffle_shop", "schema": "main", "name": "stg_sources", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/stg_sources.sql", "original_file_path": "models/staging/graph/stg_sources.sql", "unique_id": "model.dbt_project_evaluator.stg_sources", "fqn": ["dbt_project_evaluator", "staging", "graph", "stg_sources"], "alias": "stg_sources", "checksum": {"name": "sha256", "checksum": "fb212f965b115ee0600184ab12e205754211ebf47bc23bcc44285ec5e68e61ff"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "{{ insert_resources_from_graph(this, resource_type='sources') }}", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "post-hook": ["{{ insert_resources_from_graph(this, resource_type='sources') }}"], "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.604766, "relation_name": "\"jaffle_shop\".main.stg_sources", "raw_code": "{{\n    config(\n        materialized='table',\n        post_hook=\"{{ insert_resources_from_graph(this, resource_type='sources') }}\"\n    )\n}}\n\n{% if execute %}\n    {{ check_model_is_table(model) }}\n{% endif %}\n\n/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect \n\n    cast(null as {{ dbt.type_string() }}) as unique_id,\n    cast(null as {{ dbt.type_string() }}) as name,\n    cast(null as {{ dbt.type_string() }}) as file_path,\n    cast(null as {{ dbt.type_string() }}) as alias,\n    cast(null as {{ dbt.type_string() }}) as resource_type,\n    cast(null as {{ dbt.type_string() }}) as source_name,\n    cast(True as boolean) as is_source_described,\n    cast(True as boolean) as is_described,\n    cast(True as boolean) as is_enabled,\n    cast(null as {{ dbt.type_string() }}) as loaded_at_field,\n    cast(null as {{ dbt.type_string() }}) as database,\n    cast(null as {{ dbt.type_string() }}) as schema,\n    cast(null as {{ dbt.type_string() }}) as package_name,\n    cast(null as {{ dbt.type_string() }}) as loader,\n    cast(null as {{ dbt.type_string() }}) as identifier,\n    cast(null as {{ dbt.type_string() }})  as meta,\n    cast(True as boolean) as is_excluded\n\nfrom dummy_cte\nwhere false", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt_project_evaluator.insert_resources_from_graph"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.stg_exposures": {"database": "jaffle_shop", "schema": "main", "name": "stg_exposures", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/stg_exposures.sql", "original_file_path": "models/staging/graph/stg_exposures.sql", "unique_id": "model.dbt_project_evaluator.stg_exposures", "fqn": ["dbt_project_evaluator", "staging", "graph", "stg_exposures"], "alias": "stg_exposures", "checksum": {"name": "sha256", "checksum": "e3d1d84450b9d43a0632aa52fcd8c5e1eecd908119c6e68f79d7be6ecbbadc92"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "{{ insert_resources_from_graph(this, resource_type='exposures') }}", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "post-hook": ["{{ insert_resources_from_graph(this, resource_type='exposures') }}"], "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.615327, "relation_name": "\"jaffle_shop\".main.stg_exposures", "raw_code": "{{\n    config(\n        materialized='table',\n        post_hook=\"{{ insert_resources_from_graph(this, resource_type='exposures') }}\"\n    )\n}}\n\n{% if execute %}\n    {{ check_model_is_table(model) }}\n{% endif %}\n/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect \n\n    cast(null as {{ dbt.type_string() }} ) as unique_id,\n    cast(null as {{ dbt.type_string() }} ) as name,\n    cast(null as {{ dbt.type_string() }} ) as resource_type,\n    cast(null as {{ dbt.type_string() }} ) as file_path,\n    cast(True as boolean) as is_described,\n    cast(null as {{ dbt.type_string() }} ) as exposure_type,\n    cast(null as {{ dbt.type_string() }} ) as maturity,\n    cast(null as {{ dbt.type_string() }} ) as package_name,\n    cast(null as {{ dbt.type_string() }} ) as url,\n    cast(null as {{ dbt.type_string() }} ) as owner_name,\n    cast(null as {{ dbt.type_string() }} ) as owner_email,\n    cast(null as {{ dbt.type_string() }} ) as meta\n\nfrom dummy_cte\nwhere false", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt_project_evaluator.insert_resources_from_graph"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.stg_metric_relationships": {"database": "jaffle_shop", "schema": "main", "name": "stg_metric_relationships", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/stg_metric_relationships.sql", "original_file_path": "models/staging/graph/stg_metric_relationships.sql", "unique_id": "model.dbt_project_evaluator.stg_metric_relationships", "fqn": ["dbt_project_evaluator", "staging", "graph", "stg_metric_relationships"], "alias": "stg_metric_relationships", "checksum": {"name": "sha256", "checksum": "0351601c92dd9b5b4b0a4fac69e491f2c6fd568cf38aeb1040947d6b3ecbb9ac"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.624703, "relation_name": "\"jaffle_shop\".main.stg_metric_relationships", "raw_code": "with \n\n_base_metric_relationships as (\n    select * from {{ ref('base_metric_relationships') }}\n),\n\nfinal as (\n    select \n        {{ dbt_utils.generate_surrogate_key(['resource_id', 'direct_parent_id']) }} as unique_id, \n        *\n    from _base_metric_relationships\n)\n\nselect distinct * from final", "language": "sql", "refs": [{"name": "base_metric_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.dbt_project_evaluator.base_metric_relationships"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.stg_metrics": {"database": "jaffle_shop", "schema": "main", "name": "stg_metrics", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/stg_metrics.sql", "original_file_path": "models/staging/graph/stg_metrics.sql", "unique_id": "model.dbt_project_evaluator.stg_metrics", "fqn": ["dbt_project_evaluator", "staging", "graph", "stg_metrics"], "alias": "stg_metrics", "checksum": {"name": "sha256", "checksum": "66ec46215a795e68a6818f083309f3a022551f8d53fb7b0ea61955200dd2f5b0"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "{{ insert_resources_from_graph(this, resource_type='metrics') }}", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "post-hook": ["{{ insert_resources_from_graph(this, resource_type='metrics') }}"], "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.628188, "relation_name": "\"jaffle_shop\".main.stg_metrics", "raw_code": "{{\n    config(\n        materialized='table',\n        post_hook=\"{{ insert_resources_from_graph(this, resource_type='metrics') }}\"\n    )\n}}\n\n{% if execute %}\n    {{ check_model_is_table(model) }}\n{% endif %}\n/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect \n\n    cast(null as {{ dbt.type_string() }}) as unique_id,\n    cast(null as {{ dbt.type_string() }}) as name,\n    cast(null as {{ dbt.type_string() }}) as resource_type,\n    cast(null as {{ dbt.type_string() }}) as file_path,\n    cast(True as boolean) as is_described,\n    cast(null as {{ dbt.type_string() }}) as metric_type,\n    cast(null as {{ dbt.type_string() }}) as model,\n    cast(null as {{ dbt.type_string() }}) as label,\n    cast(null as {{ dbt.type_string() }}) as sql,\n    cast(null as {{ dbt.type_string() }}) as timestamp,\n    cast(null as {{ dbt.type_string() }}) as package_name,\n    cast(null as {{ dbt.type_string() }}) as dimensions,\n    cast(null as {{ dbt.type_string() }}) as filters,\n    cast(null as {{ dbt.type_string() }}) as meta\n\nfrom dummy_cte\nwhere false", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt_project_evaluator.insert_resources_from_graph"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.base_node_relationships": {"database": "jaffle_shop", "schema": "main", "name": "base_node_relationships", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/base/base_node_relationships.sql", "original_file_path": "models/staging/graph/base/base_node_relationships.sql", "unique_id": "model.dbt_project_evaluator.base_node_relationships", "fqn": ["dbt_project_evaluator", "staging", "graph", "base", "base_node_relationships"], "alias": "base_node_relationships", "checksum": {"name": "sha256", "checksum": "73abbe4663c2a2672fcb6b8c037522168e07bd6c4e528f0676f765a03028f884"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "{{ insert_resources_from_graph(this, resource_type='nodes', relationships=True) }}", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "post-hook": ["{{ insert_resources_from_graph(this, resource_type='nodes', relationships=True) }}"], "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.639652, "relation_name": "\"jaffle_shop\".main.base_node_relationships", "raw_code": "{{\n    config(\n        materialized='table',\n        post_hook=\"{{ insert_resources_from_graph(this, resource_type='nodes', relationships=True) }}\"\n    )\n}}\n\n{% if execute %}\n    {{ check_model_is_table(model) }}\n{% endif %}\n/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n) \n\nselect \n    cast(null as {{ dbt.type_string()}}) as resource_id,\n    cast(null as {{ dbt.type_string()}}) as direct_parent_id,\n    cast(True as boolean) as is_primary_relationship\n\nfrom dummy_cte\nwhere false", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt_project_evaluator.insert_resources_from_graph"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.base_exposure_relationships": {"database": "jaffle_shop", "schema": "main", "name": "base_exposure_relationships", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/base/base_exposure_relationships.sql", "original_file_path": "models/staging/graph/base/base_exposure_relationships.sql", "unique_id": "model.dbt_project_evaluator.base_exposure_relationships", "fqn": ["dbt_project_evaluator", "staging", "graph", "base", "base_exposure_relationships"], "alias": "base_exposure_relationships", "checksum": {"name": "sha256", "checksum": "43d70b23da009db4032e146081258b658390c10d8a7443b7f05fa2905bc3972b"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "{{ insert_resources_from_graph(this, resource_type='exposures', relationships=True) }}", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "post-hook": ["{{ insert_resources_from_graph(this, resource_type='exposures', relationships=True) }}"], "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.6488042, "relation_name": "\"jaffle_shop\".main.base_exposure_relationships", "raw_code": "{{\n    config(\n        materialized='table',\n        post_hook=\"{{ insert_resources_from_graph(this, resource_type='exposures', relationships=True) }}\"\n    )\n}}\n\n{% if execute %}\n    {{ check_model_is_table(model) }}\n{% endif %}\n\n/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n) \n\nselect \n    cast(null as {{ dbt.type_string()}}) as resource_id,\n    cast(null as {{ dbt.type_string()}}) as direct_parent_id,\n    cast(True as boolean) as is_primary_relationship\n\nfrom dummy_cte\nwhere false", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt_project_evaluator.insert_resources_from_graph"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.base_metric_relationships": {"database": "jaffle_shop", "schema": "main", "name": "base_metric_relationships", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/graph/base/base_metric_relationships.sql", "original_file_path": "models/staging/graph/base/base_metric_relationships.sql", "unique_id": "model.dbt_project_evaluator.base_metric_relationships", "fqn": ["dbt_project_evaluator", "staging", "graph", "base", "base_metric_relationships"], "alias": "base_metric_relationships", "checksum": {"name": "sha256", "checksum": "e3433f665162baee1d841f2623208dfda3b741d1419fcbe2b613e810a0fe1016"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "{{ insert_resources_from_graph(this, resource_type='metrics', relationships=True) }}", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "post-hook": ["{{ insert_resources_from_graph(this, resource_type='metrics', relationships=True) }}"], "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.653495, "relation_name": "\"jaffle_shop\".main.base_metric_relationships", "raw_code": "{{\n    config(\n        materialized='table',\n        post_hook=\"{{ insert_resources_from_graph(this, resource_type='metrics', relationships=True) }}\"\n    )\n}}\n\n{% if execute %}\n    {{ check_model_is_table(model) }}\n{% endif %}\n\n/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n) \n\nselect \n    cast(null as {{ dbt.type_string()}}) as resource_id,\n    cast(null as {{ dbt.type_string()}}) as direct_parent_id,\n    cast(True as boolean) as is_primary_relationship\n\nfrom dummy_cte\nwhere false", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt_project_evaluator.insert_resources_from_graph"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.stg_naming_convention_folders": {"database": "jaffle_shop", "schema": "main", "name": "stg_naming_convention_folders", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/variables/stg_naming_convention_folders.sql", "original_file_path": "models/staging/variables/stg_naming_convention_folders.sql", "unique_id": "model.dbt_project_evaluator.stg_naming_convention_folders", "fqn": ["dbt_project_evaluator", "staging", "variables", "stg_naming_convention_folders"], "alias": "stg_naming_convention_folders", "checksum": {"name": "sha256", "checksum": "269b827916875eb1bdc24c13fd0c33735c86aea2cbb2a978bc3668e5c8cb516f"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type == 'redshift' else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.658401, "relation_name": "\"jaffle_shop\".main.stg_naming_convention_folders", "raw_code": "{% set var_model_types = var('model_types') %}\n{% set suffix_folder = '_folder_name' %}\n\n{% set vars_folders = [] %}\n\n{% for model_type in var_model_types %}\n  {% do vars_folders.append(model_type ~ suffix_folder) %}\n{% endfor %}\n\nwith vars_folders_table as (\n    {{ dbt_project_evaluator.loop_vars(vars_folders) }}\n)\n\nselect\n    var_name as folder_name, \n    {{ dbt.replace('var_name', wrap_string_with_quotes(suffix_folder), \"''\") }} as model_type,\n    var_value as folder_name_value\nfrom vars_folders_table", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.loop_vars", "macro.dbt_project_evaluator.wrap_string_with_quotes", "macro.dbt.replace"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.stg_naming_convention_prefixes": {"database": "jaffle_shop", "schema": "main", "name": "stg_naming_convention_prefixes", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "staging/variables/stg_naming_convention_prefixes.sql", "original_file_path": "models/staging/variables/stg_naming_convention_prefixes.sql", "unique_id": "model.dbt_project_evaluator.stg_naming_convention_prefixes", "fqn": ["dbt_project_evaluator", "staging", "variables", "stg_naming_convention_prefixes"], "alias": "stg_naming_convention_prefixes", "checksum": {"name": "sha256", "checksum": "2dccea5430120d7f403c4f57d02227545db604d23925f41b474236a4094d8c04"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type == 'redshift' else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.667698, "relation_name": "\"jaffle_shop\".main.stg_naming_convention_prefixes", "raw_code": "{% set var_model_types = var('model_types') %}\n{% set suffix_model_type = '_prefixes' %}\n\n{% set vars_prefix = [] %}\n\n{% for model_type in var_model_types %}\n  {% do vars_prefix.append(model_type ~ suffix_model_type) %}\n{% endfor %}\n\nwith vars_prefix_table as (\n    {{ dbt_project_evaluator.loop_vars(vars_prefix) }}\n),\n\nparsed as (\n\nselect\n    var_name as prefix_name, \n    {{ dbt.replace('var_name', wrap_string_with_quotes(suffix_model_type) , \"''\") }} as model_type,\n    var_value as prefix_value\nfrom vars_prefix_table\n\n),\n\nfinal as (\n\n    select\n        {{ dbt_utils.generate_surrogate_key(['model_type', 'prefix_value']) }} as unique_id,\n        *\n    from parsed\n\n)\n\nselect * from final", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.loop_vars", "macro.dbt_project_evaluator.wrap_string_with_quotes", "macro.dbt.replace", "macro.dbt_utils.generate_surrogate_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_undocumented_models": {"database": "jaffle_shop", "schema": "main", "name": "fct_undocumented_models", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/documentation/fct_undocumented_models.sql", "original_file_path": "models/marts/documentation/fct_undocumented_models.sql", "unique_id": "model.dbt_project_evaluator.fct_undocumented_models", "fqn": ["dbt_project_evaluator", "marts", "documentation", "fct_undocumented_models"], "alias": "fct_undocumented_models", "checksum": {"name": "sha256", "checksum": "25bc7e1e1729a315cfde6836060f2f867bb7d8bc4ae5052563b55888790b3707"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This model contains all models that do not have a description configured in a YML file. \n", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/documentation/documentation.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.570273, "relation_name": "\"jaffle_shop\".main.fct_undocumented_models", "raw_code": "with\n\nall_resources as (\n    select * from {{ ref('int_all_graph_resources') }}\n    where not is_excluded\n\n),\n\nfinal as (\n\n    select\n        resource_name,\n        model_type\n\n    from all_resources\n    where not is_described and resource_type = 'model'\n\n)\n\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_documentation_coverage": {"database": "jaffle_shop", "schema": "main", "name": "fct_documentation_coverage", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/documentation/fct_documentation_coverage.sql", "original_file_path": "models/marts/documentation/fct_documentation_coverage.sql", "unique_id": "model.dbt_project_evaluator.fct_documentation_coverage", "fqn": ["dbt_project_evaluator", "marts", "documentation", "fct_documentation_coverage"], "alias": "fct_documentation_coverage", "checksum": {"name": "sha256", "checksum": "560b257b1b96999dab681a1783107281d20101e9651539f7ffa88074a75fe195"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This model calculates the percent of enabled models in the project that have a configured description.  We recommend you describe at least 75 percent of your models. \n", "columns": {"documentation_coverage_pct": {"name": "documentation_coverage_pct", "description": "the number of models in the project with a description divided by the total number of models in the project", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/documentation/documentation.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.57004, "relation_name": "\"jaffle_shop\".main.fct_documentation_coverage", "raw_code": "with\n\nmodels as (\n    select * from {{ ref('int_all_graph_resources') }}\n    where resource_type = 'model'\n    and not is_excluded\n),\n\nconversion as (\n    select\n        resource_id,\n        case when is_described then 1 else 0 end as is_described_model,\n        {% for model_type in var('model_types') %}\n            case when model_type = '{{ model_type }}' then 1.0 else NULL end as is_{{ model_type }}_model,\n            case when is_described and model_type = '{{ model_type }}' then 1.0 else 0 end as is_described_{{ model_type }}_model{% if not loop.last %},{% endif %}\n        {% endfor %}\n\n    from models\n),\n\nfinal as (\n    select\n        current_timestamp as measured_at,\n        count(*) as total_models,\n        sum(is_described_model) as documented_models,\n        round(sum(is_described_model) * 100.0 / count(*), 2) as documentation_coverage_pct,\n        {% for model_type in var('model_types') %}\n            round(\n                {{ dbt_utils.safe_divide(\n                    numerator = \"sum(is_described_\" ~ model_type ~ \"_model) * 100\", \n                    denominator = \"count(is_\" ~ model_type ~ \"_model)\"\n                ) }}\n            , 2) as {{ model_type }}_documentation_coverage_pct{% if not loop.last %},{% endif %}\n        {% endfor %}\n\n    from models\n    left join conversion\n    on models.resource_id = conversion.resource_id\n)\n\nselect * from final", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.safe_divide"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.int_direct_relationships": {"database": "jaffle_shop", "schema": "main", "name": "int_direct_relationships", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/core/int_direct_relationships.sql", "original_file_path": "models/marts/core/int_direct_relationships.sql", "unique_id": "model.dbt_project_evaluator.int_direct_relationships", "fqn": ["dbt_project_evaluator", "marts", "core", "int_direct_relationships"], "alias": "int_direct_relationships", "checksum": {"name": "sha256", "checksum": "05e7eb56bc0bbc57a0541b996dfd80ae3a44acf4ab0e1a7e801d0ed6c5f3ff55"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['bigquery', 'redshift', 'databricks'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.684125, "relation_name": "\"jaffle_shop\".main.int_direct_relationships", "raw_code": "-- one record for each resource in the graph and its direct parent\nwith \n\nall_graph_resources as (\n    select\n        resource_id,\n        resource_name,\n        resource_type,\n        file_path,\n        directory_path, \n        file_name,\n        model_type,\n        materialized,\n        source_name,\n        is_excluded\n    from {{ ref('int_all_graph_resources') }}\n),\n\ndirect_model_relationships as (\n    select  \n        resource_id,\n        direct_parent_id,\n        is_primary_relationship\n    from {{ ref('stg_node_relationships')}}\n),\n\ndirect_exposure_relationships as (\n    select  \n        resource_id,\n        direct_parent_id,\n        is_primary_relationship\n    from {{ ref('stg_exposure_relationships')}}\n),\n\ndirect_metrics_relationships as (\n    select  \n        resource_id,\n        direct_parent_id,\n        is_primary_relationship\n    from {{ ref('stg_metric_relationships')}}\n),\n\n-- for all resources in the graph, find their direct parent\ndirect_relationships as (\n    select\n        all_graph_resources.*,\n        case \n            when all_graph_resources.resource_type = 'source' then null\n            when all_graph_resources.resource_type = 'exposure' then exposures.direct_parent_id\n            when all_graph_resources.resource_type = 'metric' then metrics.direct_parent_id\n            when all_graph_resources.resource_type in ('model', 'snapshot', 'test') then models.direct_parent_id\n            else null\n        end as direct_parent_id,\n        (\n            all_graph_resources.resource_type = 'test'\n            and models.is_primary_relationship\n        ) as is_primary_test_relationship\n    from all_graph_resources\n    left join direct_model_relationships as models\n        on all_graph_resources.resource_id = models.resource_id\n    left join direct_exposure_relationships as exposures\n        on all_graph_resources.resource_id = exposures.resource_id\n    left join direct_metrics_relationships as metrics\n        on all_graph_resources.resource_id = metrics.resource_id\n),\n\nfinal as (\n    select\n        {{ dbt_utils.generate_surrogate_key(['resource_id', 'direct_parent_id']) }} as unique_id,\n        *\n    from direct_relationships\n)\n\nselect * from final", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}, {"name": "stg_node_relationships", "package": null, "version": null}, {"name": "stg_exposure_relationships", "package": null, "version": null}, {"name": "stg_metric_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.stg_node_relationships", "model.dbt_project_evaluator.stg_exposure_relationships", "model.dbt_project_evaluator.stg_metric_relationships"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.int_all_dag_relationships": {"database": "jaffle_shop", "schema": "main", "name": "int_all_dag_relationships", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/core/int_all_dag_relationships.sql", "original_file_path": "models/marts/core/int_all_dag_relationships.sql", "unique_id": "model.dbt_project_evaluator.int_all_dag_relationships", "fqn": ["dbt_project_evaluator", "marts", "core", "int_all_dag_relationships"], "alias": "int_all_dag_relationships", "checksum": {"name": "sha256", "checksum": "b4c408aa270f14f715b34649af63bf54609d14d2995c38005e858574b531b731"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['bigquery', 'redshift', 'databricks'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.688061, "relation_name": "\"jaffle_shop\".main.int_all_dag_relationships", "raw_code": "-- creates a cte called all_relationships that will either use \"with recursive\" or loops depending on the DW\n{{ dbt_project_evaluator.recursive_dag() }}\n\nselect * from all_relationships\norder by parent, distance", "language": "sql", "refs": [{"name": "int_direct_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.recursive_dag"], "nodes": ["model.dbt_project_evaluator.int_direct_relationships"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.int_all_graph_resources": {"database": "jaffle_shop", "schema": "main", "name": "int_all_graph_resources", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/core/int_all_graph_resources.sql", "original_file_path": "models/marts/core/int_all_graph_resources.sql", "unique_id": "model.dbt_project_evaluator.int_all_graph_resources", "fqn": ["dbt_project_evaluator", "marts", "core", "int_all_graph_resources"], "alias": "int_all_graph_resources", "checksum": {"name": "sha256", "checksum": "7b6bbb857eef228d88ab3819fccdc62b2bae21f72763ec42e7fc34284f8bf9fe"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.6977081, "relation_name": "\"jaffle_shop\".main.int_all_graph_resources", "raw_code": "-- one row for each resource in the graph\n\n{# flatten the sets of permissable primary key test sets to one level for later iteration #}\n{%- set test_macro_list = [] %}\n{%- for test_set in var('primary_key_test_macros') -%}\n      {%- for test in test_set %}\n        {%- do test_macro_list.append(test) -%}\n      {%- endfor %}\n{%- endfor -%}\n\n{%- set quoted_directory_pattern = wrap_string_with_quotes(get_directory_pattern()) %}\n\nwith unioned as (\n\n    {{ dbt_utils.union_relations([\n        ref('stg_nodes'),\n        ref('stg_exposures'),\n        ref('stg_metrics'),\n        ref('stg_sources')\n    ])}}\n\n),\n\nnaming_convention_prefixes as (\n    select * from {{ ref('stg_naming_convention_prefixes') }}\n), \n\nnaming_convention_folders as (\n    select * from {{ ref('stg_naming_convention_folders') }}\n), \n\nunioned_with_calc as (\n    select \n        *,\n        case \n            when resource_type = 'source' then  {{ dbt.concat(['source_name',\"'.'\",'name']) }}\n            else name \n        end as resource_name,\n        case\n            when resource_type = 'source' then null\n            else {{ dbt.split_part('name', \"'_'\", 1) }}||'_' \n        end as prefix,\n        {{ get_dbtreplace_directory_pattern() }} as directory_path,\n        regexp_replace(file_path,'.*{{ get_regexp_directory_pattern() }}','') as file_name\n    from unioned\n    where coalesce(is_enabled, True) = True and package_name != 'dbt_project_evaluator'\n), \n\njoined as (\n\n    select\n        unioned_with_calc.unique_id as resource_id, \n        unioned_with_calc.resource_name, \n        unioned_with_calc.prefix, \n        unioned_with_calc.resource_type, \n        unioned_with_calc.file_path, \n        unioned_with_calc.directory_path,\n        unioned_with_calc.is_generic_test,\n        unioned_with_calc.file_name,\n        case \n            when unioned_with_calc.resource_type in ('test', 'source', 'metric', 'exposure', 'seed') then null\n            else naming_convention_prefixes.model_type \n        end as model_type_prefix,\n        case \n            when unioned_with_calc.resource_type in ('test', 'source', 'metric', 'exposure', 'seed') then null\n            when {{ dbt.position(dbt.concat([quoted_directory_pattern, 'naming_convention_folders.folder_name_value', quoted_directory_pattern]),'unioned_with_calc.directory_path') }} = 0 then null\n            else naming_convention_folders.model_type \n        end as model_type_folder,\n        {{ dbt.position(dbt.concat([quoted_directory_pattern, 'naming_convention_folders.folder_name_value', quoted_directory_pattern]),'unioned_with_calc.directory_path') }} as position_folder,  \n        nullif(unioned_with_calc.column_name, '') as column_name,\n        {% for test in test_macro_list %}\n        unioned_with_calc.macro_dependencies like '%macro.{{ test }}%' and unioned_with_calc.resource_type = 'test' as is_{{ test.split('.')[1] }},  \n        {% endfor %}\n        unioned_with_calc.is_enabled, \n        unioned_with_calc.materialized, \n        unioned_with_calc.on_schema_change, \n        unioned_with_calc.database, \n        unioned_with_calc.schema, \n        unioned_with_calc.package_name, \n        unioned_with_calc.alias, \n        unioned_with_calc.is_described, \n        unioned_with_calc.exposure_type, \n        unioned_with_calc.maturity, \n        unioned_with_calc.url, \n        unioned_with_calc.owner_name,\n        unioned_with_calc.owner_email,\n        unioned_with_calc.meta,\n        unioned_with_calc.macro_dependencies,\n        unioned_with_calc.metric_type, \n        unioned_with_calc.model, \n        unioned_with_calc.label, \n        unioned_with_calc.sql, \n        unioned_with_calc.timestamp as timestamp,  \n        unioned_with_calc.source_name, -- NULL for non-source resources\n        unioned_with_calc.is_source_described, \n        unioned_with_calc.loaded_at_field, \n        unioned_with_calc.loader, \n        unioned_with_calc.identifier,\n        unioned_with_calc.hard_coded_references, -- NULL for non-model resources\n        unioned_with_calc.is_excluded -- NULL for metrics and exposures\n\n    from unioned_with_calc\n    left join naming_convention_prefixes\n        on unioned_with_calc.prefix = naming_convention_prefixes.prefix_value\n\n    cross join naming_convention_folders   \n\n), \n\ncalculate_model_type as (\n    select \n        *, \n        case \n            when resource_type in ('test', 'source', 'metric', 'exposure', 'seed') then null\n            -- by default we will define the model type based on its prefix in the case prefix and folder types are different\n            else coalesce(model_type_prefix, model_type_folder, 'other') \n        end as model_type,\n        row_number() over (partition by resource_id order by position_folder desc) as folder_name_rank\n    from joined\n),\n\nfinal as (\n    select\n        *\n    from calculate_model_type\n    where folder_name_rank = 1\n)\n\nselect \n    *\nfrom final", "language": "sql", "refs": [{"name": "stg_nodes", "package": null, "version": null}, {"name": "stg_exposures", "package": null, "version": null}, {"name": "stg_metrics", "package": null, "version": null}, {"name": "stg_sources", "package": null, "version": null}, {"name": "stg_naming_convention_prefixes", "package": null, "version": null}, {"name": "stg_naming_convention_folders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.get_directory_pattern", "macro.dbt_project_evaluator.wrap_string_with_quotes", "macro.dbt_utils.union_relations", "macro.dbt.concat", "macro.dbt.split_part", "macro.dbt_project_evaluator.get_dbtreplace_directory_pattern", "macro.dbt_project_evaluator.get_regexp_directory_pattern", "macro.dbt.position"], "nodes": ["model.dbt_project_evaluator.stg_nodes", "model.dbt_project_evaluator.stg_exposures", "model.dbt_project_evaluator.stg_metrics", "model.dbt_project_evaluator.stg_sources", "model.dbt_project_evaluator.stg_naming_convention_prefixes", "model.dbt_project_evaluator.stg_naming_convention_folders"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_multiple_sources_joined": {"database": "jaffle_shop", "schema": "main", "name": "fct_multiple_sources_joined", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_multiple_sources_joined.sql", "original_file_path": "models/marts/dag/fct_multiple_sources_joined.sql", "unique_id": "model.dbt_project_evaluator.fct_multiple_sources_joined", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_multiple_sources_joined"], "alias": "fct_multiple_sources_joined", "checksum": {"name": "sha256", "checksum": "3d107d4537e6bb323aabeb092a7ac82492fc99d300d89d8bdcd5dab12fa24a01"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each instance where a model references more than one source.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.577091, "relation_name": "\"jaffle_shop\".main.fct_multiple_sources_joined", "raw_code": "-- this model finds cases where a model references more than one source\nwith direct_source_relationships as (\n    select distinct\n        child,\n        parent\n    from {{ ref('int_all_dag_relationships') }}\n    where distance = 1\n    and parent_resource_type = 'source'\n    and not parent_is_excluded\n    and not child_is_excluded\n    -- we order the CTE so that listagg returns values correctly sorted for some warehouses\n    order by 1, 2\n),\n\nmultiple_sources_joined as (\n    select\n        child,\n        {{ dbt.listagg(\n            measure='parent', \n            delimiter_text=\"', '\", \n            order_by_clause='order by parent' if target.type in ['snowflake','redshift','duckdb']) \n        }} as source_parents\n    from direct_source_relationships\n    group by 1\n    having count(*) > 1\n)\n\nselect * from multiple_sources_joined\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.listagg", "macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_root_models": {"database": "jaffle_shop", "schema": "main", "name": "fct_root_models", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_root_models.sql", "original_file_path": "models/marts/dag/fct_root_models.sql", "unique_id": "model.dbt_project_evaluator.fct_root_models", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_root_models"], "alias": "fct_root_models", "checksum": {"name": "sha256", "checksum": "b3c40469f0d5972527091459a864828b3b35e5943a83ebe0b3089a8c55176e6b"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each model with 0 direct parents.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.577507, "relation_name": "\"jaffle_shop\".main.fct_root_models", "raw_code": "-- this model finds cases where a model has 0 direct parents, likely due to a lack of source or ref function\n\nwith model_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where child_resource_type = 'model'\n    -- only filter out excluded children nodes\n        -- filtering parents could result in incorrectly flagging nodes that depend on excluded nodes\n    and not child_is_excluded\n),\n\nfinal as (\n    select\n        child\n    from model_relationships\n    group by 1\n    having max(distance) = 0\n)\n\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_model_fanout": {"database": "jaffle_shop", "schema": "main", "name": "fct_model_fanout", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_model_fanout.sql", "original_file_path": "models/marts/dag/fct_model_fanout.sql", "unique_id": "model.dbt_project_evaluator.fct_model_fanout", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_model_fanout"], "alias": "fct_model_fanout", "checksum": {"name": "sha256", "checksum": "72e414f30966685dcb40da7f5b35fc942724ff774265d9cadb9ac216256c19df"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows all parents with more direct leaf children than the threshold for fanout (determined by variable models_fanout_threshold, default 3)", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.576878, "relation_name": "\"jaffle_shop\".main.fct_model_fanout", "raw_code": "with all_dag_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where not parent_is_excluded\n    and not child_is_excluded\n),\n\n-- find all models without children\nmodels_without_children as (\n    select\n        parent\n    from all_dag_relationships\n    where parent_resource_type = 'model'\n    group by 1\n    having max(distance) = 0\n),\n\n-- all parents with more direct children than the threshold for fanout (determined by variable models_fanout_threshold, default 3)\n    -- Note: only counts \"leaf children\" - direct chilren that are models AND are child-less (are at the right-most-point in the DAG)\nmodel_fanout as (\n    select \n        all_dag_relationships.parent,\n        all_dag_relationships.parent_model_type,\n        all_dag_relationships.child\n    from all_dag_relationships\n    inner join models_without_children\n        on all_dag_relationships.child = models_without_children.parent\n    where all_dag_relationships.distance = 1 and all_dag_relationships.child_resource_type = 'model'\n    group by 1, 2, 3\n    -- we order the CTE so that listagg returns values correctly sorted for some warehouses\n    order by 1, 2, 3\n),\n\nmodel_fanout_agg as (\n    select\n        parent,\n        parent_model_type,\n        {{ dbt.listagg(\n            measure = 'child', \n            delimiter_text = \"', '\", \n            order_by_clause = 'order by child' if target.type in ['snowflake','redshift','duckdb']) \n        }} as leaf_children\n    from model_fanout\n    group by 1, 2\n    having count(*) >= {{ var('models_fanout_threshold') }}\n)\n\nselect * from model_fanout_agg\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.listagg", "macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_unused_sources": {"database": "jaffle_shop", "schema": "main", "name": "fct_unused_sources", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_unused_sources.sql", "original_file_path": "models/marts/dag/fct_unused_sources.sql", "unique_id": "model.dbt_project_evaluator.fct_unused_sources", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_unused_sources"], "alias": "fct_unused_sources", "checksum": {"name": "sha256", "checksum": "718454cdf32f5b51c3e5bac01010c1529ed751f45b4ab6386b4bc19fa42bce33"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each source with 0 children.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.578332, "relation_name": "\"jaffle_shop\".main.fct_unused_sources", "raw_code": "-- this model finds cases where a source has no children\n\nwith source_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where parent_resource_type = 'source'\n    and not parent_is_excluded\n    and not child_is_excluded\n),\n\nfinal as (\n    select\n        parent\n    from source_relationships\n    group by 1\n    having max(distance) = 0\n)\n\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_duplicate_sources": {"database": "jaffle_shop", "schema": "main", "name": "fct_duplicate_sources", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_duplicate_sources.sql", "original_file_path": "models/marts/dag/fct_duplicate_sources.sql", "unique_id": "model.dbt_project_evaluator.fct_duplicate_sources", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_duplicate_sources"], "alias": "fct_duplicate_sources", "checksum": {"name": "sha256", "checksum": "fc25ae9653bbd0642a25dd0866b7f4cf3cb82d5a13959bceb16c3dbc96efcb28"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.576444, "relation_name": "\"jaffle_shop\".main.fct_duplicate_sources", "raw_code": "with sources as (\n    select\n        resource_name,\n        case \n            -- if you're using databricks but not the unity catalog, database will be null\n            when database is NULL then {{ dbt.concat([\"schema\", \"'.'\", \"identifier\"]) }} \n            else {{ dbt.concat([\"database\", \"'.'\", \"schema\", \"'.'\", \"identifier\"]) }} \n        end as source_db_location \n    from {{ ref('int_all_graph_resources') }}\n    where resource_type = 'source'\n    and not is_excluded\n    -- we order the CTE so that listagg returns values correctly sorted for some warehouses\n    order by 1, 2\n),\n\nsource_duplicates as (\n    select\n        source_db_location,\n        {{ dbt.listagg(\n            measure = 'resource_name', \n            delimiter_text = \"', '\", \n            order_by_clause = 'order by resource_name' if target.type in ['snowflake','redshift','duckdb']) \n        }} as source_names\n    from sources\n    group by source_db_location\n    having count(*) > 1\n)\n\nselect * from source_duplicates", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.concat", "macro.dbt.listagg"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_source_fanout": {"database": "jaffle_shop", "schema": "main", "name": "fct_source_fanout", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_source_fanout.sql", "original_file_path": "models/marts/dag/fct_source_fanout.sql", "unique_id": "model.dbt_project_evaluator.fct_source_fanout", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_source_fanout"], "alias": "fct_source_fanout", "checksum": {"name": "sha256", "checksum": "b2cbee6fb386474028f1618b68282322f302ef445364976f78ac390844c07150"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each instance where a source is the direct parent of multiple resources in the DAG.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.577714, "relation_name": "\"jaffle_shop\".main.fct_source_fanout", "raw_code": "-- this model finds cases where a source is used in multiple direct downstream models\nwith direct_source_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where distance = 1\n    and parent_resource_type = 'source'\n    and child_resource_type = 'model'\n    and not parent_is_excluded\n    and not child_is_excluded\n    -- we order the CTE so that listagg returns values correctly sorted for some warehouses\n    order by child\n),\n\nsource_fanout as (\n    select\n        parent,\n        {{ dbt.listagg(\n            measure='child', \n            delimiter_text=\"', '\", \n            order_by_clause='order by child' if target.type in ['snowflake','redshift','duckdb']) \n        }} as model_children\n    from direct_source_relationships\n    group by 1\n    having count(*) > 1\n)\n\nselect * from source_fanout\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.listagg", "macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_direct_join_to_source": {"database": "jaffle_shop", "schema": "main", "name": "fct_direct_join_to_source", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_direct_join_to_source.sql", "original_file_path": "models/marts/dag/fct_direct_join_to_source.sql", "unique_id": "model.dbt_project_evaluator.fct_direct_join_to_source", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_direct_join_to_source"], "alias": "fct_direct_join_to_source", "checksum": {"name": "sha256", "checksum": "9dcf5695c6084e5d372b3ea1319da5beba01e85194151581269aa77a6907322a"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each parent/child relationship where a model has a reference to both a model and a source.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.575934, "relation_name": "\"jaffle_shop\".main.fct_direct_join_to_source", "raw_code": "-- this model finds cases where a model has a reference to both a model and a source\n\nwith direct_model_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where child_resource_type = 'model'\n    and distance = 1\n    and not parent_is_excluded\n    and not child_is_excluded\n),\n\nmodel_and_source_joined as (\n    select\n        child,\n        case \n            when (\n                sum(case when parent_resource_type = 'model' then 1 else 0 end) > 0 \n                and sum(case when parent_resource_type = 'source' then 1 else 0 end) > 0\n            ) \n            then true\n            else false \n        end as keep_row \n    from direct_model_relationships\n    group by 1\n),\n\nfinal as (\n    select \n        direct_model_relationships.parent,\n        direct_model_relationships.parent_resource_type,\n        direct_model_relationships.child,\n        direct_model_relationships.child_resource_type,\n        direct_model_relationships.distance\n    from direct_model_relationships\n    inner join model_and_source_joined\n        on direct_model_relationships.child = model_and_source_joined.child\n    where model_and_source_joined.keep_row\n    order by direct_model_relationships.child\n)\n\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_staging_dependent_on_staging": {"database": "jaffle_shop", "schema": "main", "name": "fct_staging_dependent_on_staging", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_staging_dependent_on_staging.sql", "original_file_path": "models/marts/dag/fct_staging_dependent_on_staging.sql", "unique_id": "model.dbt_project_evaluator.fct_staging_dependent_on_staging", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_staging_dependent_on_staging"], "alias": "fct_staging_dependent_on_staging", "checksum": {"name": "sha256", "checksum": "df76f153078c32666672f1b4ecdc2e20ac47867eeab67064c7d680da72b729f1"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each parent/child relationship where models in the staging layer are dependent on each other.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.5781279, "relation_name": "\"jaffle_shop\".main.fct_staging_dependent_on_staging", "raw_code": "-- check for cases where models in the staging layer are dependent on each other\nwith direct_model_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where parent_resource_type in ('model', 'snapshot')\n    and child_resource_type in ('model', 'snapshot')\n    and not parent_is_excluded\n    and not child_is_excluded\n    and distance = 1\n),\n\nbending_connections as (\n    select\n        parent,\n        parent_model_type,\n        child,\n        child_model_type\n    from direct_model_relationships\n    where parent_model_type = 'staging'\n    and child_model_type = 'staging'\n)\n\nselect * from bending_connections\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate": {"database": "jaffle_shop", "schema": "main", "name": "fct_staging_dependent_on_marts_or_intermediate", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_staging_dependent_on_marts_or_intermediate.sql", "original_file_path": "models/marts/dag/fct_staging_dependent_on_marts_or_intermediate.sql", "unique_id": "model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_staging_dependent_on_marts_or_intermediate"], "alias": "fct_staging_dependent_on_marts_or_intermediate", "checksum": {"name": "sha256", "checksum": "74a6f38cfaee136d3ad4dc862e43b5dc3bee25b696078f0022678776679e7abf"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each parent/child relationship where models in the staging layer are dependent on models in the marts and/or intermediate layer.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.577923, "relation_name": "\"jaffle_shop\".main.fct_staging_dependent_on_marts_or_intermediate", "raw_code": "-- cases where a staging model depends on a marts/intermediate model\n-- data should flow from raw -> staging -> intermediate -> marts\nwith direct_model_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where distance = 1\n    and parent_resource_type = 'model'\n    and child_resource_type = 'model'\n    and not parent_is_excluded\n    and not child_is_excluded\n),\nfinal as (\n    select\n        parent,\n        parent_model_type,\n        child,\n        child_model_type\n    from direct_model_relationships\n    where child_model_type = 'staging'\n    and parent_model_type in ('marts', 'intermediate')\n)\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source": {"database": "jaffle_shop", "schema": "main", "name": "fct_marts_or_intermediate_dependent_on_source", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_marts_or_intermediate_dependent_on_source.sql", "original_file_path": "models/marts/dag/fct_marts_or_intermediate_dependent_on_source.sql", "unique_id": "model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_marts_or_intermediate_dependent_on_source"], "alias": "fct_marts_or_intermediate_dependent_on_source", "checksum": {"name": "sha256", "checksum": "7814b4a18752c0c20efe915cdcb4bab33cea8f26aef8b03adccb01d393aef20b"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each parent/child relationship where models in the marts and/or intermediate layer are dependent on source(s).", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.576664, "relation_name": "\"jaffle_shop\".main.fct_marts_or_intermediate_dependent_on_source", "raw_code": "-- cases where a marts/intermediate model directly references a raw source\nwith direct_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where distance = 1\n    and not parent_is_excluded\n    and not child_is_excluded\n),\nfinal as (\n    select\n        parent,\n        parent_resource_type,\n        child,\n        child_model_type\n    from direct_relationships\n    where parent_resource_type = 'source'\n    and child_model_type in ('marts', 'intermediate')\n)\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_hard_coded_references": {"database": "jaffle_shop", "schema": "main", "name": "fct_hard_coded_references", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_hard_coded_references.sql", "original_file_path": "models/marts/dag/fct_hard_coded_references.sql", "unique_id": "model.dbt_project_evaluator.fct_hard_coded_references", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_hard_coded_references"], "alias": "fct_hard_coded_references", "checksum": {"name": "sha256", "checksum": "a736e48450ee2f26b61575ee13573d80c2a827d2adb75134e9775d3f7d44be47"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each model that has hard coded references.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.578749, "relation_name": "\"jaffle_shop\".main.fct_hard_coded_references", "raw_code": "-- this model finds cases where a model has hard coded references\n\nwith models as (\n    select * from {{ ref('int_all_graph_resources') }}\n    where resource_type = 'model'\n    and not is_excluded\n),\n\nfinal as (\n    select\n        resource_name as model,\n        hard_coded_references\n    from models\n    where hard_coded_references is not null\n)\n\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts": {"database": "jaffle_shop", "schema": "main", "name": "fct_rejoining_of_upstream_concepts", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/dag/fct_rejoining_of_upstream_concepts.sql", "original_file_path": "models/marts/dag/fct_rejoining_of_upstream_concepts.sql", "unique_id": "model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts", "fqn": ["dbt_project_evaluator", "marts", "dag", "fct_rejoining_of_upstream_concepts"], "alias": "fct_rejoining_of_upstream_concepts", "checksum": {"name": "sha256", "checksum": "7aa657a4f8be924f7c1a9dcf5a365ef4942246f3ab67d9aa6ae13dace04a3302"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "\"All cases where one of the parent's direct children (child) is ALSO the direct child of ANOTHER one of the  parent's direct childen (parent_and_child). Only includes cases where the model \"in between\" the parent and child  has NO other downstream dependencies.\n", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.5773, "relation_name": "\"jaffle_shop\".main.fct_rejoining_of_upstream_concepts", "raw_code": "with all_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where parent_resource_type not in ('exposures', 'metrics')\n    and child_resource_type not in ('exposures', 'metrics')\n    and not parent_is_excluded\n    and not child_is_excluded\n),\n\n-- all parent/child relationships where the parent is BOTH the direct parent of the child and the second level parent of the child \nrejoined as (\n    select\n        parent,\n        child\n    from all_relationships\n    group by 1, 2\n    having (sum(case when distance = 1 then 1 else 0 end) >= 1 \n        and sum(case when distance = 2 then 1 else 0 end) >= 1)\n),\n\n-- resources with only one direct child\nsingle_use_resources as (\n    select\n        parent\n    from all_relationships\n    where distance = 1\n    group by 1\n    having count(*) = 1\n),\n\n-- all cases where one of the parent's direct children (child) is ALSO the direct child of ANOTHER one of the parent's direct childen (parent_and_child)\ntriad_relationships as (\n    select \n        rejoined.parent,\n        rejoined.child as child,\n        direct_child.parent as parent_and_child\n    from rejoined\n    left join all_relationships as direct_child\n        on rejoined.child = direct_child.child\n        and direct_child.distance = 1\n    left join all_relationships as direct_parent\n        on rejoined.parent = direct_parent.parent\n        and direct_parent.distance = 1\n    where direct_child.parent = direct_parent.child\n),\n\n-- additionally, only includes cases where the model \"in between\" the parent and parent_and_child has NO other downstream dependencies\n-- Note: when the \"in between\" model DOES have downstream dependencies, it's possible this DAG choice has been made to avoid duplicated code and as such is OKAY\nfinal as (\n    select\n        triad_relationships.*,\n        case \n            when single_use_resources.parent is not null then true \n            else false\n        end as is_loop_independent\n    from triad_relationships\n    left join single_use_resources \n        on triad_relationships.parent_and_child = single_use_resources.parent\n),\n\nfinal_filtered as (\n    select * from final\n    where is_loop_independent\n)\n\nselect * from final_filtered\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_missing_primary_key_tests": {"database": "jaffle_shop", "schema": "main", "name": "fct_missing_primary_key_tests", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/tests/fct_missing_primary_key_tests.sql", "original_file_path": "models/marts/tests/fct_missing_primary_key_tests.sql", "unique_id": "model.dbt_project_evaluator.fct_missing_primary_key_tests", "fqn": ["dbt_project_evaluator", "marts", "tests", "fct_missing_primary_key_tests"], "alias": "my_alias", "checksum": {"name": "sha256", "checksum": "945bfb2f0f815cf7637a442f576f33583a456e912af8cb41ace82298adc26b9a"}, "config": {"enabled": true, "alias": "my_alias", "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "this model has one record for every model without unique and not null tests configured on a single column", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/tests/testing.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "alias": "my_alias", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.605835, "relation_name": "\"jaffle_shop\".main.my_alias", "raw_code": "{{\n  config(\n    alias = 'my_alias',\n    )\n}}\n\nwith \n\ntests as (\n    select * from {{ ref('int_model_test_summary') }} \n),\n\nfinal as (\n\n    select \n        *\n    from tests\n    where not(is_primary_key_tested)\n\n)\n\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_model_test_summary", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_model_test_summary", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_test_coverage": {"database": "jaffle_shop", "schema": "main", "name": "fct_test_coverage", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/tests/fct_test_coverage.sql", "original_file_path": "models/marts/tests/fct_test_coverage.sql", "unique_id": "model.dbt_project_evaluator.fct_test_coverage", "fqn": ["dbt_project_evaluator", "marts", "tests", "fct_test_coverage"], "alias": "fct_test_coverage", "checksum": {"name": "sha256", "checksum": "b61a0387483f29bd8c7e333e2e2f880bfe6975fdb553f569d8331ca07209a30e"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "this model shows a few key metrics related to how well tested your dbt project is.", "columns": {"test_to_model_ratio": {"name": "test_to_model_ratio", "description": "the total number of tests in the project divided by the total number of models in the project", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "test_coverage_pct": {"name": "test_coverage_pct", "description": "the number of models in the project with at least one test configured divided by the total number of models in the project", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/tests/testing.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.605608, "relation_name": "\"jaffle_shop\".main.fct_test_coverage", "raw_code": "with\n\ntest_counts as (\n    select * from {{ ref('int_model_test_summary') }}\n),\n\nconversion as (\n    select\n        resource_name,\n        case when number_of_tests_on_model > 0 then 1 else 0 end as is_tested_model,\n        {% for model_type in var('model_types') %}\n            case when model_type = '{{ model_type }}' then 1.0 else NULL end as is_{{ model_type }}_model,\n            case when number_of_tests_on_model > 0 and model_type = '{{ model_type }}' then 1.0 else 0 end as is_tested_{{ model_type }}_model{% if not loop.last %},{% endif %}\n        {% endfor %}\n\n    from test_counts\n),\n\nfinal as (\n    select\n        current_timestamp as measured_at,\n        count(*) as total_models,\n        sum(number_of_tests_on_model) as total_tests,\n        sum(is_tested_model) as tested_models,\n        round(sum(is_tested_model) * 100.0 / count(*), 2) as test_coverage_pct,\n        {% for model_type in var('model_types') %}\n            round(\n                {{ dbt_utils.safe_divide(\n                    numerator = \"sum(is_tested_\" ~ model_type ~ \"_model) * 100.0\", \n                    denominator = \"count(is_\" ~ model_type ~ \"_model)\"\n                ) }}\n            , 2) as {{ model_type }}_test_coverage_pct,\n        {% endfor %}\n        round(sum(number_of_tests_on_model) * 1.0 / count(*), 4) as test_to_model_ratio\n\n    from test_counts\n    left join conversion\n    on test_counts.resource_name = conversion.resource_name\n)\n\nselect * from final", "language": "sql", "refs": [{"name": "int_model_test_summary", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.safe_divide"], "nodes": ["model.dbt_project_evaluator.int_model_test_summary"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.int_model_test_summary": {"database": "jaffle_shop", "schema": "main", "name": "int_model_test_summary", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/tests/intermediate/int_model_test_summary.sql", "original_file_path": "models/marts/tests/intermediate/int_model_test_summary.sql", "unique_id": "model.dbt_project_evaluator.int_model_test_summary", "fqn": ["dbt_project_evaluator", "marts", "tests", "intermediate", "int_model_test_summary"], "alias": "int_model_test_summary", "checksum": {"name": "sha256", "checksum": "80fed482fd6f4c43e3a1ed3f4f24446ecae7f8c74e6489bc72d8ad832eb8431a"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414206.760156, "relation_name": "\"jaffle_shop\".main.int_model_test_summary", "raw_code": "with \n\nall_graph_resources as (\n    select * from {{ ref('int_all_graph_resources') }}\n    where not is_excluded\n),\n\nrelationships as (\n    select * from {{ ref('int_direct_relationships') }}\n),\n\ncount_column_tests as (\n    \n    select \n        relationships.direct_parent_id, \n        all_graph_resources.column_name,\n        {%- for test_set in var('primary_key_test_macros') %}\n            {%- set outer_loop = loop -%}\n        count(distinct case when \n                {%- for test in test_set %} \n                all_graph_resources.is_{{ test.split('.')[1] }} {%- if not loop.last %} or {% endif %} \n                {%- endfor %}\n            then relationships.resource_id else null end\n        ) as primary_key_method_{{ outer_loop.index }}_count,\n        {%- endfor %}\n        count(distinct relationships.resource_id) as tests_count\n    from all_graph_resources\n    left join relationships\n        on all_graph_resources.resource_id = relationships.resource_id\n    where all_graph_resources.resource_type = 'test'\n    and relationships.is_primary_test_relationship\n    group by 1,2\n),\n\nagg_test_relationships as (\n\n    select \n        direct_parent_id, \n        sum(case \n                when (\n                    {%- for test_set in var('primary_key_test_macros') %}\n                        {%- set compare_value = test_set | length %}\n                    primary_key_method_{{ loop.index }}_count = {{ compare_value}}\n                        {%- if not loop.last %} or {% endif %}\n                    {%- endfor %} \n                ) then 1 \n                else 0 \n            end\n        ) >= 1 as is_primary_key_tested,\n        sum(tests_count) as number_of_tests_on_model\n    from count_column_tests\n    group by 1\n\n),\n\nfinal as (\n    select \n        all_graph_resources.resource_name, \n        all_graph_resources.model_type,\n        coalesce(agg_test_relationships.is_primary_key_tested, FALSE) as is_primary_key_tested,\n        coalesce(agg_test_relationships.number_of_tests_on_model, 0) as number_of_tests_on_model\n    from all_graph_resources\n    left join agg_test_relationships\n        on all_graph_resources.resource_id = agg_test_relationships.direct_parent_id\n    where all_graph_resources.resource_type = 'model'\n)\n\nselect * from final", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}, {"name": "int_direct_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.int_direct_relationships"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_exposure_parents_materializations": {"database": "jaffle_shop", "schema": "main", "name": "fct_exposure_parents_materializations", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/performance/fct_exposure_parents_materializations.sql", "original_file_path": "models/marts/performance/fct_exposure_parents_materializations.sql", "unique_id": "model.dbt_project_evaluator.fct_exposure_parents_materializations", "fqn": ["dbt_project_evaluator", "marts", "performance", "fct_exposure_parents_materializations"], "alias": "fct_exposure_parents_materializations", "checksum": {"name": "sha256", "checksum": "a8708915b414a90ce9208b530877858ed598b43daf8e8910e6eb85b4bf178dfd"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This table shows each direct parent of an exposure that is not materialized as a table or incremental.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/dag/dag.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.578541, "relation_name": "\"jaffle_shop\".main.fct_exposure_parents_materializations", "raw_code": "with \n\ndirect_exposure_relationships as (\n    select * from {{ ref('int_all_dag_relationships') }}\n    where \n        distance = 1\n        and child_resource_type = 'exposure'\n        and ((\n                parent_resource_type = 'model'\n                and parent_materialized in ('view', 'ephemeral')\n            )\n            or (\n                parent_resource_type = 'source'\n            )\n        )\n        -- no test on child_is_excluded because exposures are never excluded\n        and not parent_is_excluded\n),\n\nfinal as (\n\n    select \n        parent_resource_type,\n        parent as parent_resource_name,\n        child as exposure_name,\n        parent_materialized as parent_model_materialization\n\n    from direct_exposure_relationships\n\n)\n\nselect * from final\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_chained_views_dependencies": {"database": "jaffle_shop", "schema": "main", "name": "fct_chained_views_dependencies", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/performance/fct_chained_views_dependencies.sql", "original_file_path": "models/marts/performance/fct_chained_views_dependencies.sql", "unique_id": "model.dbt_project_evaluator.fct_chained_views_dependencies", "fqn": ["dbt_project_evaluator", "marts", "performance", "fct_chained_views_dependencies"], "alias": "fct_chained_views_dependencies", "checksum": {"name": "sha256", "checksum": "bb97d0c87be1425137f9928e65d3ec9eb4ce1bf9fa85bddb4a4fd9883ce824fd"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This returns models dependent on chains of \"non-physically-materialized\" models (views and ephemerals), highlighting potential cases for improving performance by switching the materialization of model(s) within  the chain to table or incremental. \n", "columns": {"distance": {"name": "distance", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/performance/performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.611116, "relation_name": "\"jaffle_shop\".main.fct_chained_views_dependencies", "raw_code": "with all_relationships as (\n    select  \n        *\n    from {{ ref('int_all_dag_relationships') }}\n    where distance <> 0\n    and not parent_is_excluded\n    and not child_is_excluded\n),\n\nfinal as (\n    select\n        parent,\n        child, -- the model with potentially long run time / compilation time, improve performance by breaking the upstream chain of views\n        distance,\n        path\n    from all_relationships\n    where is_dependent_on_chain_of_views\n    and child_resource_type = 'model'\n)\n\nselect * from final\n\n{{ filter_exceptions(model.name) }}\n\norder by distance desc", "language": "sql", "refs": [{"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_source_directories": {"database": "jaffle_shop", "schema": "main", "name": "fct_source_directories", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/structure/fct_source_directories.sql", "original_file_path": "models/marts/structure/fct_source_directories.sql", "unique_id": "model.dbt_project_evaluator.fct_source_directories", "fqn": ["dbt_project_evaluator", "marts", "structure", "fct_source_directories"], "alias": "fct_source_directories", "checksum": {"name": "sha256", "checksum": "76e25f756e528eb9e310345bb9c15c30483353bb882597913a2cf0e34bdb934e"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This finds all cases where a source definition is NOT in the appropriate subdirectory.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/structure/structure.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.614348, "relation_name": "\"jaffle_shop\".main.fct_source_directories", "raw_code": "-- Because we often work with multiple data sources, in our staging directory, we create one directory per source.\n\n-- This model finds all cases where a source definition is NOT in the appropriate subdirectory.\n\n{% set directory_pattern = get_directory_pattern() %}\n\nwith all_graph_resources as (\n    select * from {{ ref('int_all_graph_resources') }}\n    where not is_excluded\n),\n\n-- find all sources that are definied in a .yml file NOT in their subdirectory\ninappropriate_subdirectories_sources as (\n    select \n        resource_name,\n        resource_type,\n        file_path as current_file_path,\n        'models{{ directory_pattern  }}' || '{{ var(\"staging_folder_name\") }}' || '{{ directory_pattern }}' || source_name || '{{ directory_pattern }}' || file_name as change_file_path_to\n    from all_graph_resources\n    where resource_type = 'source'\n    and directory_path not like '%' || source_name || '%'\n)\n\nselect * from inappropriate_subdirectories_sources\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.get_directory_pattern", "macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_test_directories": {"database": "jaffle_shop", "schema": "main", "name": "fct_test_directories", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/structure/fct_test_directories.sql", "original_file_path": "models/marts/structure/fct_test_directories.sql", "unique_id": "model.dbt_project_evaluator.fct_test_directories", "fqn": ["dbt_project_evaluator", "marts", "structure", "fct_test_directories"], "alias": "fct_test_directories", "checksum": {"name": "sha256", "checksum": "00ed0c285cebb8f2fefb37110371a398f0abaeab70216c28fd381df7c024fa05"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This finds all cases where the yml file for model tests is NOT in the same subdirectory as the corresponding model.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/structure/structure.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.6145651, "relation_name": "\"jaffle_shop\".main.fct_test_directories", "raw_code": "with\n\nresources as (\n\n    select * from {{ ref('int_all_graph_resources') }}\n    where not is_excluded\n\n),\n\nrelationships as (\n\n    select * from {{ ref('int_direct_relationships') }}\n\n),\n\nmodels_per_test as (\n\n    select\n        resource_name as test_name,\n        resource_id as test_id,\n        direct_parent_id as parent_model_id\n    from relationships\n    where resource_type = 'test'\n    and is_primary_test_relationship\n\n),\n\nmodel_file_paths as (\n\n    select\n        resources.resource_id as model_id,\n        resources.resource_name as model_name,\n        resources.directory_path as model_directory_path,\n        models_per_test.test_id,\n        models_per_test.parent_model_id\n    from resources\n    inner join models_per_test\n    on models_per_test.parent_model_id = resources.resource_id\n    where resource_type = 'model'\n\n),\n\ntest_file_paths as (\n\n    select\n        resource_id as test_id,\n        resource_name as test_name,\n        file_name as test_yml_name,\n        directory_path as test_yml_directory_path\n    from resources\n    where \n        resource_type = 'test'\n        and is_generic_test\n\n),\n\nall_file_paths as (\n\n    select\n        test_file_paths.test_id,\n        test_file_paths.test_name,\n        test_file_paths.test_yml_directory_path,\n        test_file_paths.test_yml_name,\n        model_file_paths.model_id,\n        model_file_paths.model_name,\n        model_file_paths.model_directory_path\n    from model_file_paths\n    inner join test_file_paths\n    on model_file_paths.test_id = test_file_paths.test_id\n\n),\n\ndifferent_directories as (\n\n    select\n        test_name,\n        model_name,\n        test_yml_directory_path as current_test_directory,\n        model_directory_path as change_test_directory_to\n    from all_file_paths\n    where model_directory_path != test_yml_directory_path\n\n)\n\nselect * from different_directories\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}, {"name": "int_direct_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.int_direct_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_model_naming_conventions": {"database": "jaffle_shop", "schema": "main", "name": "fct_model_naming_conventions", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/structure/fct_model_naming_conventions.sql", "original_file_path": "models/marts/structure/fct_model_naming_conventions.sql", "unique_id": "model.dbt_project_evaluator.fct_model_naming_conventions", "fqn": ["dbt_project_evaluator", "marts", "structure", "fct_model_naming_conventions"], "alias": "fct_model_naming_conventions", "checksum": {"name": "sha256", "checksum": "3527de84a0b1ae36f62a21bdf36a165a01621a42e24cf5171bb79227a4d514eb"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This finds all cases where a model does NOT have the appropriate prefix.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/structure/structure.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.614125, "relation_name": "\"jaffle_shop\".main.fct_model_naming_conventions", "raw_code": "-- all models with inappropriate (or lack of) pre-fix\n-- ensure dbt project has consistent naming conventions\n\nwith all_graph_resources as (\n    select * from {{ ref('int_all_graph_resources') }}\n    where not is_excluded\n),\n\nnaming_convention_prefixes as (\n    select * from {{ ref('stg_naming_convention_prefixes') }}\n    -- we order the CTE so that listagg returns values correctly sorted for some warehouses\n    order by prefix_value\n), \n\nappropriate_prefixes as (\n    select \n        model_type, \n        {{ dbt.listagg(\n            measure='prefix_value', \n            delimiter_text=\"', '\", \n            order_by_clause='order by prefix_value' if target.type in ['snowflake','redshift','duckdb']) \n        }} as appropriate_prefixes\n    from naming_convention_prefixes\n    group by model_type\n), \n\nmodels as (\n    select\n        all_graph_resources.resource_name,\n        all_graph_resources.prefix,\n        all_graph_resources.model_type,\n        naming_convention_prefixes.prefix_value\n    from all_graph_resources \n    left join naming_convention_prefixes\n        on all_graph_resources.model_type = naming_convention_prefixes.model_type\n        and all_graph_resources.prefix = naming_convention_prefixes.prefix_value\n    where resource_type = 'model'\n),\n\ninappropriate_model_names as (\n    select \n        models.resource_name,\n        models.prefix,\n        models.model_type,\n        appropriate_prefixes.appropriate_prefixes\n    from models\n    left join appropriate_prefixes\n        on models.model_type = appropriate_prefixes.model_type\n    where models.prefix_value is null\n\n)\n\nselect * from inappropriate_model_names\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}, {"name": "stg_naming_convention_prefixes", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.listagg", "macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.stg_naming_convention_prefixes", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.dbt_project_evaluator.fct_model_directories": {"database": "jaffle_shop", "schema": "main", "name": "fct_model_directories", "resource_type": "model", "package_name": "dbt_project_evaluator", "path": "marts/structure/fct_model_directories.sql", "original_file_path": "models/marts/structure/fct_model_directories.sql", "unique_id": "model.dbt_project_evaluator.fct_model_directories", "fqn": ["dbt_project_evaluator", "marts", "structure", "fct_model_directories"], "alias": "fct_model_directories", "checksum": {"name": "sha256", "checksum": "8a228d8b87850ff0892eb2910efc114f51b61f12b7381c71676c1f4191df3c9b"}, "config": {"enabled": true, "alias": null, "schema": "mart_dbt_project_evaluator", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected"}, "tags": [], "description": "This finds all cases where a model is NOT in the appropriate subdirectory.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/marts/structure/structure.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "{{ 'table' if target.type in ['duckdb'] else 'view' }}", "schema": "mart_dbt_project_evaluator"}, "created_at": 1699414207.613895, "relation_name": "\"jaffle_shop\".main.fct_model_directories", "raw_code": "-- This model finds all cases where a model is NOT in the appropriate subdirectory:\n    -- For staging models: The files should be in nested in the staging folder in a subfolder that matches their source parent's name.\n    -- For non-staging models: The files should be nested closest to their appropriate folder.  \n{% set directory_pattern = get_directory_pattern() %}\n \nwith all_graph_resources as (\n    select * from {{ ref('int_all_graph_resources') }}\n),\n\nfolders as (\n    select * from {{ ref('stg_naming_convention_folders') }}\n), \n\nall_dag_relationships as (\n    select * from {{ ref('int_all_dag_relationships') }}\n),\n\nstaging_models as (\n    select  \n        child,\n        child_resource_type,\n        child_model_type,\n        child_file_path,\n        child_directory_path,\n        child_file_name,\n        parent_source_name\n    from all_dag_relationships\n    where parent_resource_type = 'source'\n    and child_resource_type = 'model'\n    and child_model_type = 'staging'\n),\n\n-- find all staging models that are NOT in their source parent's subdirectory\ninappropriate_subdirectories_staging as (\n    select distinct -- must do distinct to avoid duplicates when staging model has multiple paths to a given source\n        child as resource_name,\n        child_resource_type as resource_type,\n        child_model_type as model_type,\n        child_file_path as current_file_path,\n        'models{{ directory_pattern }}' || '{{ var(\"staging_folder_name\") }}' || '{{ directory_pattern }}' || parent_source_name || '{{ directory_pattern }}' || child_file_name as change_file_path_to\n    from staging_models\n    where child_directory_path not like '%' || parent_source_name || '%'\n),\n\n-- find all non-staging models that are NOT nested closest to their appropriate folder\ninnappropriate_subdirectories_non_staging_models as (\n    select \n        all_graph_resources.resource_name,\n        all_graph_resources.resource_type,\n        all_graph_resources.model_type,\n        all_graph_resources.file_path as current_file_path,\n        'models' || '{{ directory_pattern }}...{{ directory_pattern }}' || folders.folder_name_value || '{{ directory_pattern }}...{{ directory_pattern }}' || all_graph_resources.file_name as change_file_path_to\n    from all_graph_resources\n    left join folders \n        on folders.model_type = all_graph_resources.model_type \n    -- either appropriate folder_name is not in the current_directory_path or a inappropriate folder name is closer to the file_name\n    where all_graph_resources.model_type <> all_graph_resources.model_type_folder \n    and not is_excluded\n),\n\nunioned as (\n    select * from inappropriate_subdirectories_staging\n    union all\n    select * from innappropriate_subdirectories_non_staging_models\n)\n\nselect * from unioned\n\n{{ filter_exceptions(model.name) }}", "language": "sql", "refs": [{"name": "int_all_graph_resources", "package": null, "version": null}, {"name": "stg_naming_convention_folders", "package": null, "version": null}, {"name": "int_all_dag_relationships", "package": null, "version": null}, {"name": "dbt_project_evaluator_exceptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.get_directory_pattern", "macro.dbt_project_evaluator.filter_exceptions"], "nodes": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.stg_naming_convention_folders", "model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "test.mattermost_analytics.not_null_stg_cws__trial_requests_trial_request_id.5d6e67e7fd": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "trial_request_id", "model": "{{ get_where_subquery(ref('stg_cws__trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_cws__trial_requests_trial_request_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_cws__trial_requests_trial_request_id.sql", "original_file_path": "models/staging/cws/_cws__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_cws__trial_requests_trial_request_id.5d6e67e7fd", "fqn": ["mattermost_analytics", "staging", "cws", "not_null_stg_cws__trial_requests_trial_request_id"], "alias": "not_null_stg_cws__trial_requests_trial_request_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414206.9433029, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_cws__trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_cws__trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "trial_request_id", "file_key_name": "models.stg_cws__trial_requests", "attached_node": "model.mattermost_analytics.stg_cws__trial_requests"}, "test.mattermost_analytics.not_null_stg_cws__marketing_marketing_id.4abb89cabf": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "marketing_id", "model": "{{ get_where_subquery(ref('stg_cws__marketing')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_cws__marketing_marketing_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_cws__marketing_marketing_id.sql", "original_file_path": "models/staging/cws/_cws__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_cws__marketing_marketing_id.4abb89cabf", "fqn": ["mattermost_analytics", "staging", "cws", "not_null_stg_cws__marketing_marketing_id"], "alias": "not_null_stg_cws__marketing_marketing_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414206.944405, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_cws__marketing", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_cws__marketing"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "marketing_id", "file_key_name": "models.stg_cws__marketing", "attached_node": "model.mattermost_analytics.stg_cws__marketing"}, "test.mattermost_analytics.not_null_stg_cws__marketing_email.76559b841e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('stg_cws__marketing')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_cws__marketing_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_cws__marketing_email.sql", "original_file_path": "models/staging/cws/_cws__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_cws__marketing_email.76559b841e", "fqn": ["mattermost_analytics", "staging", "cws", "not_null_stg_cws__marketing_email"], "alias": "not_null_stg_cws__marketing_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414206.945351, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_cws__marketing", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_cws__marketing"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "email", "file_key_name": "models.stg_cws__marketing", "attached_node": "model.mattermost_analytics.stg_cws__marketing"}, "test.mattermost_analytics.dbt_utils_not_empty_string_stg_cws__marketing_email.464934acf5": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('stg_cws__marketing')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_stg_cws__marketing_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_stg_cws__marketing_email.sql", "original_file_path": "models/staging/cws/_cws__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_stg_cws__marketing_email.464934acf5", "fqn": ["mattermost_analytics", "staging", "cws", "dbt_utils_not_empty_string_stg_cws__marketing_email"], "alias": "dbt_utils_not_empty_string_stg_cws__marketing_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414206.946413, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_cws__marketing", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.stg_cws__marketing"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "email", "file_key_name": "models.stg_cws__marketing", "attached_node": "model.mattermost_analytics.stg_cws__marketing"}, "test.mattermost_analytics.accepted_values_stg_cws__marketing_subscribed_content__security_newsletter.e571d81e88": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["security_newsletter"], "column_name": "subscribed_content", "model": "{{ get_where_subquery(ref('stg_cws__marketing')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "accepted_values_stg_cws__marketing_subscribed_content__security_newsletter", "resource_type": "test", "package_name": "mattermost_analytics", "path": "accepted_values_stg_cws__marke_2f337a12ac0177cd7d182cad416e992d.sql", "original_file_path": "models/staging/cws/_cws__models.yml", "unique_id": "test.mattermost_analytics.accepted_values_stg_cws__marketing_subscribed_content__security_newsletter.e571d81e88", "fqn": ["mattermost_analytics", "staging", "cws", "accepted_values_stg_cws__marketing_subscribed_content__security_newsletter"], "alias": "accepted_values_stg_cws__marke_2f337a12ac0177cd7d182cad416e992d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_cws__marke_2f337a12ac0177cd7d182cad416e992d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_stg_cws__marke_2f337a12ac0177cd7d182cad416e992d"}, "created_at": 1699414206.952387, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_cws__marke_2f337a12ac0177cd7d182cad416e992d\") }}", "language": "sql", "refs": [{"name": "stg_cws__marketing", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.stg_cws__marketing"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subscribed_content", "file_key_name": "models.stg_cws__marketing", "attached_node": "model.mattermost_analytics.stg_cws__marketing"}, "test.mattermost_analytics.not_null_stg_cws__marketing_server_id.61773750b5": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "server_id", "model": "{{ get_where_subquery(ref('stg_cws__marketing')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_cws__marketing_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_cws__marketing_server_id.sql", "original_file_path": "models/staging/cws/_cws__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_cws__marketing_server_id.61773750b5", "fqn": ["mattermost_analytics", "staging", "cws", "not_null_stg_cws__marketing_server_id"], "alias": "not_null_stg_cws__marketing_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414206.956565, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_cws__marketing", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_cws__marketing"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "server_id", "file_key_name": "models.stg_cws__marketing", "attached_node": "model.mattermost_analytics.stg_cws__marketing"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_id.8d17661889": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issue_id", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__issues')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__issues_issue_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__issues_issue_id.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_id.8d17661889", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__issues_issue_id"], "alias": "not_null_stg_mattermost_jira__issues_issue_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.024148, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_id", "file_key_name": "models.stg_mattermost_jira__issues", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__issues"}, "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_id.c498ac5624": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "issue_id", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__issues')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_mattermost_jira__issues_issue_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_mattermost_jira__issues_issue_id.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_id.c498ac5624", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "unique_stg_mattermost_jira__issues_issue_id"], "alias": "unique_stg_mattermost_jira__issues_issue_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.025101, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_id", "file_key_name": "models.stg_mattermost_jira__issues", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__issues"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_key.ff8ceb5cc7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issue_key", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__issues')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__issues_issue_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__issues_issue_key.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_key.ff8ceb5cc7", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__issues_issue_key"], "alias": "not_null_stg_mattermost_jira__issues_issue_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.025998, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_key", "file_key_name": "models.stg_mattermost_jira__issues", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__issues"}, "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_key.5eb5705b5c": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "issue_key", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__issues')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_mattermost_jira__issues_issue_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_mattermost_jira__issues_issue_key.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_key.5eb5705b5c", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "unique_stg_mattermost_jira__issues_issue_key"], "alias": "unique_stg_mattermost_jira__issues_issue_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.026882, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_key", "file_key_name": "models.stg_mattermost_jira__issues", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__issues"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_id.16f6ab11a8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "project_id", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__issues')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__issues_project_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__issues_project_id.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_id.16f6ab11a8", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__issues_project_id"], "alias": "not_null_stg_mattermost_jira__issues_project_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.028053, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_id", "file_key_name": "models.stg_mattermost_jira__issues", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__issues"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_key.5c2aaa3f7e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "project_key", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__issues')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__issues_project_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__issues_project_key.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_key.5c2aaa3f7e", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__issues_project_key"], "alias": "not_null_stg_mattermost_jira__issues_project_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.028925, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_key", "file_key_name": "models.stg_mattermost_jira__issues", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__issues"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_summary.86fc2de000": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "summary", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__issues')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__issues_summary", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__issues_summary.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_summary.86fc2de000", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__issues_summary"], "alias": "not_null_stg_mattermost_jira__issues_summary", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.0297909, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "summary", "file_key_name": "models.stg_mattermost_jira__issues", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__issues"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_type_id.e9925150aa": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issue_type_id", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__issues')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__issues_issue_type_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__issues_issue_type_id.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_type_id.e9925150aa", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__issues_issue_type_id"], "alias": "not_null_stg_mattermost_jira__issues_issue_type_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.030654, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__issues", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__issues"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_type_id", "file_key_name": "models.stg_mattermost_jira__issues", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__issues"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_id.99bc122810": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "project_id", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__projects_project_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__projects_project_id.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_id.99bc122810", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__projects_project_id"], "alias": "not_null_stg_mattermost_jira__projects_project_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.031522, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_id", "file_key_name": "models.stg_mattermost_jira__projects", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__projects"}, "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_id.8e7ff4bb80": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "project_id", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_mattermost_jira__projects_project_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_mattermost_jira__projects_project_id.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_id.8e7ff4bb80", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "unique_stg_mattermost_jira__projects_project_id"], "alias": "unique_stg_mattermost_jira__projects_project_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.032541, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_id", "file_key_name": "models.stg_mattermost_jira__projects", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__projects"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_key.88afa71403": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "project_key", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__projects_project_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__projects_project_key.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_key.88afa71403", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__projects_project_key"], "alias": "not_null_stg_mattermost_jira__projects_project_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.0334, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_key", "file_key_name": "models.stg_mattermost_jira__projects", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__projects"}, "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_key.d99155dfde": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "project_key", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_mattermost_jira__projects_project_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_mattermost_jira__projects_project_key.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_key.d99155dfde", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "unique_stg_mattermost_jira__projects_project_key"], "alias": "unique_stg_mattermost_jira__projects_project_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.034257, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_key", "file_key_name": "models.stg_mattermost_jira__projects", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__projects"}, "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_name.6759e236e3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "name", "model": "{{ get_where_subquery(ref('stg_mattermost_jira__projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost_jira__projects_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost_jira__projects_name.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_name.6759e236e3", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "not_null_stg_mattermost_jira__projects_name"], "alias": "not_null_stg_mattermost_jira__projects_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.035121, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost_jira__projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost_jira__projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "name", "file_key_name": "models.stg_mattermost_jira__projects", "attached_node": "model.mattermost_analytics.stg_mattermost_jira__projects"}, "test.mattermost_analytics.not_null_stg_salesforce__campaign_campaign_id.8a70e791fc": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "campaign_id", "model": "{{ get_where_subquery(ref('stg_salesforce__campaign')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_salesforce__campaign_campaign_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_salesforce__campaign_campaign_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_salesforce__campaign_campaign_id.8a70e791fc", "fqn": ["mattermost_analytics", "staging", "salesforce", "not_null_stg_salesforce__campaign_campaign_id"], "alias": "not_null_stg_salesforce__campaign_campaign_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.1223822, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__campaign", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_salesforce__campaign"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "campaign_id", "file_key_name": "models.stg_salesforce__campaign", "attached_node": "model.mattermost_analytics.stg_salesforce__campaign"}, "test.mattermost_analytics.unique_stg_salesforce__campaign_campaign_id.bb510c55b8": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "campaign_id", "model": "{{ get_where_subquery(ref('stg_salesforce__campaign')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_salesforce__campaign_campaign_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_salesforce__campaign_campaign_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_salesforce__campaign_campaign_id.bb510c55b8", "fqn": ["mattermost_analytics", "staging", "salesforce", "unique_stg_salesforce__campaign_campaign_id"], "alias": "unique_stg_salesforce__campaign_campaign_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.1234062, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__campaign", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_salesforce__campaign"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "campaign_id", "file_key_name": "models.stg_salesforce__campaign", "attached_node": "model.mattermost_analytics.stg_salesforce__campaign"}, "test.mattermost_analytics.not_null_stg_salesforce__campaign_member_campaign_member_id.d1d111912d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "campaign_member_id", "model": "{{ get_where_subquery(ref('stg_salesforce__campaign_member')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_salesforce__campaign_member_campaign_member_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_salesforce__campaign_member_campaign_member_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_salesforce__campaign_member_campaign_member_id.d1d111912d", "fqn": ["mattermost_analytics", "staging", "salesforce", "not_null_stg_salesforce__campaign_member_campaign_member_id"], "alias": "not_null_stg_salesforce__campaign_member_campaign_member_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.1243782, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__campaign_member", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_salesforce__campaign_member"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "campaign_member_id", "file_key_name": "models.stg_salesforce__campaign_member", "attached_node": "model.mattermost_analytics.stg_salesforce__campaign_member"}, "test.mattermost_analytics.unique_stg_salesforce__campaign_member_campaign_member_id.c16f72906a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "campaign_member_id", "model": "{{ get_where_subquery(ref('stg_salesforce__campaign_member')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_salesforce__campaign_member_campaign_member_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_salesforce__campaign_member_campaign_member_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_salesforce__campaign_member_campaign_member_id.c16f72906a", "fqn": ["mattermost_analytics", "staging", "salesforce", "unique_stg_salesforce__campaign_member_campaign_member_id"], "alias": "unique_stg_salesforce__campaign_member_campaign_member_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.1254022, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__campaign_member", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_salesforce__campaign_member"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "campaign_member_id", "file_key_name": "models.stg_salesforce__campaign_member", "attached_node": "model.mattermost_analytics.stg_salesforce__campaign_member"}, "test.mattermost_analytics.not_null_stg_salesforce__contact_contact_id.d7c02bef78": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('stg_salesforce__contact')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_salesforce__contact_contact_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_salesforce__contact_contact_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_salesforce__contact_contact_id.d7c02bef78", "fqn": ["mattermost_analytics", "staging", "salesforce", "not_null_stg_salesforce__contact_contact_id"], "alias": "not_null_stg_salesforce__contact_contact_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.1263459, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__contact", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_salesforce__contact"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "contact_id", "file_key_name": "models.stg_salesforce__contact", "attached_node": "model.mattermost_analytics.stg_salesforce__contact"}, "test.mattermost_analytics.unique_stg_salesforce__contact_contact_id.0cc2c0609e": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('stg_salesforce__contact')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_salesforce__contact_contact_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_salesforce__contact_contact_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_salesforce__contact_contact_id.0cc2c0609e", "fqn": ["mattermost_analytics", "staging", "salesforce", "unique_stg_salesforce__contact_contact_id"], "alias": "unique_stg_salesforce__contact_contact_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.127268, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__contact", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_salesforce__contact"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "contact_id", "file_key_name": "models.stg_salesforce__contact", "attached_node": "model.mattermost_analytics.stg_salesforce__contact"}, "test.mattermost_analytics.not_null_stg_salesforce__lead_lead_id.e2ba6b2026": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "lead_id", "model": "{{ get_where_subquery(ref('stg_salesforce__lead')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_salesforce__lead_lead_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_salesforce__lead_lead_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_salesforce__lead_lead_id.e2ba6b2026", "fqn": ["mattermost_analytics", "staging", "salesforce", "not_null_stg_salesforce__lead_lead_id"], "alias": "not_null_stg_salesforce__lead_lead_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.128184, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__lead", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_salesforce__lead"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "lead_id", "file_key_name": "models.stg_salesforce__lead", "attached_node": "model.mattermost_analytics.stg_salesforce__lead"}, "test.mattermost_analytics.unique_stg_salesforce__lead_lead_id.ba8b21e282": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "lead_id", "model": "{{ get_where_subquery(ref('stg_salesforce__lead')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_salesforce__lead_lead_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_salesforce__lead_lead_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_salesforce__lead_lead_id.ba8b21e282", "fqn": ["mattermost_analytics", "staging", "salesforce", "unique_stg_salesforce__lead_lead_id"], "alias": "unique_stg_salesforce__lead_lead_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.129264, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__lead", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_salesforce__lead"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "lead_id", "file_key_name": "models.stg_salesforce__lead", "attached_node": "model.mattermost_analytics.stg_salesforce__lead"}, "test.mattermost_analytics.not_null_stg_salesforce__opportunity_opportunity_id.234c5e60bd": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "opportunity_id", "model": "{{ get_where_subquery(ref('stg_salesforce__opportunity')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_salesforce__opportunity_opportunity_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_salesforce__opportunity_opportunity_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_salesforce__opportunity_opportunity_id.234c5e60bd", "fqn": ["mattermost_analytics", "staging", "salesforce", "not_null_stg_salesforce__opportunity_opportunity_id"], "alias": "not_null_stg_salesforce__opportunity_opportunity_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.130188, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__opportunity", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_salesforce__opportunity"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "opportunity_id", "file_key_name": "models.stg_salesforce__opportunity", "attached_node": "model.mattermost_analytics.stg_salesforce__opportunity"}, "test.mattermost_analytics.unique_stg_salesforce__opportunity_opportunity_id.367b0f577a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "opportunity_id", "model": "{{ get_where_subquery(ref('stg_salesforce__opportunity')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_salesforce__opportunity_opportunity_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_salesforce__opportunity_opportunity_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_salesforce__opportunity_opportunity_id.367b0f577a", "fqn": ["mattermost_analytics", "staging", "salesforce", "unique_stg_salesforce__opportunity_opportunity_id"], "alias": "unique_stg_salesforce__opportunity_opportunity_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.131095, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__opportunity", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_salesforce__opportunity"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "opportunity_id", "file_key_name": "models.stg_salesforce__opportunity", "attached_node": "model.mattermost_analytics.stg_salesforce__opportunity"}, "test.mattermost_analytics.not_null_stg_salesforce__opportunity_line_item_opportunity_line_item.2c8bc71989": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "opportunity_line_item", "model": "{{ get_where_subquery(ref('stg_salesforce__opportunity_line_item')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_salesforce__opportunity_line_item_opportunity_line_item", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_salesforce__oppor_c4673e6026a2e46c39cfcb59088b540f.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_salesforce__opportunity_line_item_opportunity_line_item.2c8bc71989", "fqn": ["mattermost_analytics", "staging", "salesforce", "not_null_stg_salesforce__opportunity_line_item_opportunity_line_item"], "alias": "not_null_stg_salesforce__oppor_c4673e6026a2e46c39cfcb59088b540f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_stg_salesforce__oppor_c4673e6026a2e46c39cfcb59088b540f", "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"], "alias": "not_null_stg_salesforce__oppor_c4673e6026a2e46c39cfcb59088b540f"}, "created_at": 1699414207.132021, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_salesforce__oppor_c4673e6026a2e46c39cfcb59088b540f\") }}", "language": "sql", "refs": [{"name": "stg_salesforce__opportunity_line_item", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_salesforce__opportunity_line_item"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "opportunity_line_item", "file_key_name": "models.stg_salesforce__opportunity_line_item", "attached_node": "model.mattermost_analytics.stg_salesforce__opportunity_line_item"}, "test.mattermost_analytics.unique_stg_salesforce__opportunity_line_item_opportunity_line_item.9ec65a7607": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "opportunity_line_item", "model": "{{ get_where_subquery(ref('stg_salesforce__opportunity_line_item')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_salesforce__opportunity_line_item_opportunity_line_item", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_salesforce__opportu_99b7b9db50528bfb7ea8320950156291.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_salesforce__opportunity_line_item_opportunity_line_item.9ec65a7607", "fqn": ["mattermost_analytics", "staging", "salesforce", "unique_stg_salesforce__opportunity_line_item_opportunity_line_item"], "alias": "unique_stg_salesforce__opportu_99b7b9db50528bfb7ea8320950156291", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "unique_stg_salesforce__opportu_99b7b9db50528bfb7ea8320950156291", "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"], "alias": "unique_stg_salesforce__opportu_99b7b9db50528bfb7ea8320950156291"}, "created_at": 1699414207.1329448, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"unique_stg_salesforce__opportu_99b7b9db50528bfb7ea8320950156291\") }}", "language": "sql", "refs": [{"name": "stg_salesforce__opportunity_line_item", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_salesforce__opportunity_line_item"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "opportunity_line_item", "file_key_name": "models.stg_salesforce__opportunity_line_item", "attached_node": "model.mattermost_analytics.stg_salesforce__opportunity_line_item"}, "test.mattermost_analytics.not_null_stg_salesforce__user_user_id.ac0ab26d65": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_salesforce__user')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_salesforce__user_user_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_salesforce__user_user_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_salesforce__user_user_id.ac0ab26d65", "fqn": ["mattermost_analytics", "staging", "salesforce", "not_null_stg_salesforce__user_user_id"], "alias": "not_null_stg_salesforce__user_user_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.1340191, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__user", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_salesforce__user"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "user_id", "file_key_name": "models.stg_salesforce__user", "attached_node": "model.mattermost_analytics.stg_salesforce__user"}, "test.mattermost_analytics.unique_stg_salesforce__user_user_id.9a29b41152": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_salesforce__user')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_salesforce__user_user_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_salesforce__user_user_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_salesforce__user_user_id.9a29b41152", "fqn": ["mattermost_analytics", "staging", "salesforce", "unique_stg_salesforce__user_user_id"], "alias": "unique_stg_salesforce__user_user_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.1349251, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__user", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_salesforce__user"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "user_id", "file_key_name": "models.stg_salesforce__user", "attached_node": "model.mattermost_analytics.stg_salesforce__user"}, "test.mattermost_analytics.not_null_stg_salesforce__account_account_id.1e0ff361d4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "account_id", "model": "{{ get_where_subquery(ref('stg_salesforce__account')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_salesforce__account_account_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_salesforce__account_account_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_salesforce__account_account_id.1e0ff361d4", "fqn": ["mattermost_analytics", "staging", "salesforce", "not_null_stg_salesforce__account_account_id"], "alias": "not_null_stg_salesforce__account_account_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.135835, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__account", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_salesforce__account"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "account_id", "file_key_name": "models.stg_salesforce__account", "attached_node": "model.mattermost_analytics.stg_salesforce__account"}, "test.mattermost_analytics.unique_stg_salesforce__account_account_id.6d58a39ba7": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "account_id", "model": "{{ get_where_subquery(ref('stg_salesforce__account')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_salesforce__account_account_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_salesforce__account_account_id.sql", "original_file_path": "models/staging/salesforce/_salesforce__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_salesforce__account_account_id.6d58a39ba7", "fqn": ["mattermost_analytics", "staging", "salesforce", "unique_stg_salesforce__account_account_id"], "alias": "unique_stg_salesforce__account_account_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": ["nightly"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["nightly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["nightly"]}, "created_at": 1699414207.13675, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_salesforce__account", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_salesforce__account"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "account_id", "file_key_name": "models.stg_salesforce__account", "attached_node": "model.mattermost_analytics.stg_salesforce__account"}, "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_version.c3d9deaded": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "version", "model": "{{ get_where_subquery(ref('stg_mattermost__version_release_dates')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost__version_release_dates_version", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost__version_release_dates_version.sql", "original_file_path": "models/staging/mattermost/_mattermost__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_version.c3d9deaded", "fqn": ["mattermost_analytics", "staging", "mattermost", "not_null_stg_mattermost__version_release_dates_version"], "alias": "not_null_stg_mattermost__version_release_dates_version", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.231552, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost__version_release_dates", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost__version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version", "file_key_name": "models.stg_mattermost__version_release_dates", "attached_node": "model.mattermost_analytics.stg_mattermost__version_release_dates"}, "test.mattermost_analytics.unique_stg_mattermost__version_release_dates_version.092dc272d6": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "version", "model": "{{ get_where_subquery(ref('stg_mattermost__version_release_dates')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_mattermost__version_release_dates_version", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_mattermost__version_release_dates_version.sql", "original_file_path": "models/staging/mattermost/_mattermost__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_mattermost__version_release_dates_version.092dc272d6", "fqn": ["mattermost_analytics", "staging", "mattermost", "unique_stg_mattermost__version_release_dates_version"], "alias": "unique_stg_mattermost__version_release_dates_version", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.2325351, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost__version_release_dates", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_mattermost__version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version", "file_key_name": "models.stg_mattermost__version_release_dates", "attached_node": "model.mattermost_analytics.stg_mattermost__version_release_dates"}, "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_short_version.675b40f6ae": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "short_version", "model": "{{ get_where_subquery(ref('stg_mattermost__version_release_dates')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost__version_release_dates_short_version", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost__version_release_dates_short_version.sql", "original_file_path": "models/staging/mattermost/_mattermost__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_short_version.675b40f6ae", "fqn": ["mattermost_analytics", "staging", "mattermost", "not_null_stg_mattermost__version_release_dates_short_version"], "alias": "not_null_stg_mattermost__version_release_dates_short_version", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.233441, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost__version_release_dates", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost__version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "short_version", "file_key_name": "models.stg_mattermost__version_release_dates", "attached_node": "model.mattermost_analytics.stg_mattermost__version_release_dates"}, "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_planned_release_date.7b8b12b068": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "planned_release_date", "model": "{{ get_where_subquery(ref('stg_mattermost__version_release_dates')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost__version_release_dates_planned_release_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost__versi_59bad4a32d35e1988672ae49dfb85d45.sql", "original_file_path": "models/staging/mattermost/_mattermost__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_planned_release_date.7b8b12b068", "fqn": ["mattermost_analytics", "staging", "mattermost", "not_null_stg_mattermost__version_release_dates_planned_release_date"], "alias": "not_null_stg_mattermost__versi_59bad4a32d35e1988672ae49dfb85d45", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_stg_mattermost__versi_59bad4a32d35e1988672ae49dfb85d45", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_stg_mattermost__versi_59bad4a32d35e1988672ae49dfb85d45"}, "created_at": 1699414207.2344582, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_mattermost__versi_59bad4a32d35e1988672ae49dfb85d45\") }}", "language": "sql", "refs": [{"name": "stg_mattermost__version_release_dates", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost__version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "planned_release_date", "file_key_name": "models.stg_mattermost__version_release_dates", "attached_node": "model.mattermost_analytics.stg_mattermost__version_release_dates"}, "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_is_supported.111545de05": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "is_supported", "model": "{{ get_where_subquery(ref('stg_mattermost__version_release_dates')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost__version_release_dates_is_supported", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost__version_release_dates_is_supported.sql", "original_file_path": "models/staging/mattermost/_mattermost__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_is_supported.111545de05", "fqn": ["mattermost_analytics", "staging", "mattermost", "not_null_stg_mattermost__version_release_dates_is_supported"], "alias": "not_null_stg_mattermost__version_release_dates_is_supported", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.235329, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost__version_release_dates", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost__version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "is_supported", "file_key_name": "models.stg_mattermost__version_release_dates", "attached_node": "model.mattermost_analytics.stg_mattermost__version_release_dates"}, "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_release_number.2463bd8110": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "release_number", "model": "{{ get_where_subquery(ref('stg_mattermost__version_release_dates')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_mattermost__version_release_dates_release_number", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_mattermost__version_release_dates_release_number.sql", "original_file_path": "models/staging/mattermost/_mattermost__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_release_number.2463bd8110", "fqn": ["mattermost_analytics", "staging", "mattermost", "not_null_stg_mattermost__version_release_dates_release_number"], "alias": "not_null_stg_mattermost__version_release_dates_release_number", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.236193, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_mattermost__version_release_dates", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_mattermost__version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "release_number", "file_key_name": "models.stg_mattermost__version_release_dates", "attached_node": "model.mattermost_analytics.stg_mattermost__version_release_dates"}, "test.mattermost_analytics.not_null_stg_stripe__customers_created_at.481ec0f98a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_stripe__customers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__customers_created_at", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__customers_created_at.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__customers_created_at.481ec0f98a", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__customers_created_at"], "alias": "not_null_stg_stripe__customers_created_at", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.275872, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__customers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "created_at", "file_key_name": "models.stg_stripe__customers", "attached_node": "model.mattermost_analytics.stg_stripe__customers"}, "test.mattermost_analytics.not_null_stg_stripe__customers_email.fe9fbbc440": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('stg_stripe__customers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__customers_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__customers_email.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__customers_email.fe9fbbc440", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__customers_email"], "alias": "not_null_stg_stripe__customers_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.276903, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__customers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "email", "file_key_name": "models.stg_stripe__customers", "attached_node": "model.mattermost_analytics.stg_stripe__customers"}, "test.mattermost_analytics.not_null_stg_stripe__customers_customer_id.70a70c42a7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_stripe__customers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__customers_customer_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__customers_customer_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__customers_customer_id.70a70c42a7", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__customers_customer_id"], "alias": "not_null_stg_stripe__customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.277786, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__customers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "customer_id", "file_key_name": "models.stg_stripe__customers", "attached_node": "model.mattermost_analytics.stg_stripe__customers"}, "test.mattermost_analytics.unique_stg_stripe__customers_customer_id.d48ec44cbd": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_stripe__customers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_stripe__customers_customer_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_stripe__customers_customer_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_stripe__customers_customer_id.d48ec44cbd", "fqn": ["mattermost_analytics", "staging", "stripe", "unique_stg_stripe__customers_customer_id"], "alias": "unique_stg_stripe__customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.278665, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_stripe__customers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "customer_id", "file_key_name": "models.stg_stripe__customers", "attached_node": "model.mattermost_analytics.stg_stripe__customers"}, "test.mattermost_analytics.not_null_stg_stripe__customers_updated_at.98c4d1cd4e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "updated_at", "model": "{{ get_where_subquery(ref('stg_stripe__customers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__customers_updated_at", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__customers_updated_at.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__customers_updated_at.98c4d1cd4e", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__customers_updated_at"], "alias": "not_null_stg_stripe__customers_updated_at", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.2795331, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__customers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "updated_at", "file_key_name": "models.stg_stripe__customers", "attached_node": "model.mattermost_analytics.stg_stripe__customers"}, "test.mattermost_analytics.not_null_stg_stripe__subscriptions_created_at.27a9cd7f6e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_stripe__subscriptions')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__subscriptions_created_at", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__subscriptions_created_at.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__subscriptions_created_at.27a9cd7f6e", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__subscriptions_created_at"], "alias": "not_null_stg_stripe__subscriptions_created_at", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.280396, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__subscriptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__subscriptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "created_at", "file_key_name": "models.stg_stripe__subscriptions", "attached_node": "model.mattermost_analytics.stg_stripe__subscriptions"}, "test.mattermost_analytics.not_null_stg_stripe__subscriptions_subscription_id.7af221a3cd": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "subscription_id", "model": "{{ get_where_subquery(ref('stg_stripe__subscriptions')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__subscriptions_subscription_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__subscriptions_subscription_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__subscriptions_subscription_id.7af221a3cd", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__subscriptions_subscription_id"], "alias": "not_null_stg_stripe__subscriptions_subscription_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.281425, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__subscriptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__subscriptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subscription_id", "file_key_name": "models.stg_stripe__subscriptions", "attached_node": "model.mattermost_analytics.stg_stripe__subscriptions"}, "test.mattermost_analytics.unique_stg_stripe__subscriptions_subscription_id.2ea0e2eec3": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "subscription_id", "model": "{{ get_where_subquery(ref('stg_stripe__subscriptions')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_stripe__subscriptions_subscription_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_stripe__subscriptions_subscription_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_stripe__subscriptions_subscription_id.2ea0e2eec3", "fqn": ["mattermost_analytics", "staging", "stripe", "unique_stg_stripe__subscriptions_subscription_id"], "alias": "unique_stg_stripe__subscriptions_subscription_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.282288, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__subscriptions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_stripe__subscriptions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subscription_id", "file_key_name": "models.stg_stripe__subscriptions", "attached_node": "model.mattermost_analytics.stg_stripe__subscriptions"}, "test.mattermost_analytics.not_null_stg_stripe__products_product_id.4e54b80187": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_stripe__products')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__products_product_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__products_product_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__products_product_id.4e54b80187", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__products_product_id"], "alias": "not_null_stg_stripe__products_product_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.283175, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__products"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "product_id", "file_key_name": "models.stg_stripe__products", "attached_node": "model.mattermost_analytics.stg_stripe__products"}, "test.mattermost_analytics.unique_stg_stripe__products_product_id.556856542a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_stripe__products')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_stripe__products_product_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_stripe__products_product_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_stripe__products_product_id.556856542a", "fqn": ["mattermost_analytics", "staging", "stripe", "unique_stg_stripe__products_product_id"], "alias": "unique_stg_stripe__products_product_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.28404, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_stripe__products"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "product_id", "file_key_name": "models.stg_stripe__products", "attached_node": "model.mattermost_analytics.stg_stripe__products"}, "test.mattermost_analytics.not_null_stg_stripe__invoices_created_at.2e36890942": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_stripe__invoices')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__invoices_created_at", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__invoices_created_at.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__invoices_created_at.2e36890942", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__invoices_created_at"], "alias": "not_null_stg_stripe__invoices_created_at", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.284899, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__invoices"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "created_at", "file_key_name": "models.stg_stripe__invoices", "attached_node": "model.mattermost_analytics.stg_stripe__invoices"}, "test.mattermost_analytics.not_null_stg_stripe__invoices_invoice_id.dfbda32b9c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "invoice_id", "model": "{{ get_where_subquery(ref('stg_stripe__invoices')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__invoices_invoice_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__invoices_invoice_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__invoices_invoice_id.dfbda32b9c", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__invoices_invoice_id"], "alias": "not_null_stg_stripe__invoices_invoice_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.285915, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__invoices"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "invoice_id", "file_key_name": "models.stg_stripe__invoices", "attached_node": "model.mattermost_analytics.stg_stripe__invoices"}, "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_line_item_id.9300d76698": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "invoice_line_item_id", "model": "{{ get_where_subquery(ref('stg_stripe__invoice_line_items')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__invoice_line_items_invoice_line_item_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__invoice_line_items_invoice_line_item_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_line_item_id.9300d76698", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__invoice_line_items_invoice_line_item_id"], "alias": "not_null_stg_stripe__invoice_line_items_invoice_line_item_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.286775, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__invoice_line_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__invoice_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "invoice_line_item_id", "file_key_name": "models.stg_stripe__invoice_line_items", "attached_node": "model.mattermost_analytics.stg_stripe__invoice_line_items"}, "test.mattermost_analytics.unique_stg_stripe__invoice_line_items_invoice_line_item_id.1253e56144": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "invoice_line_item_id", "model": "{{ get_where_subquery(ref('stg_stripe__invoice_line_items')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_stripe__invoice_line_items_invoice_line_item_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_stripe__invoice_line_items_invoice_line_item_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_stripe__invoice_line_items_invoice_line_item_id.1253e56144", "fqn": ["mattermost_analytics", "staging", "stripe", "unique_stg_stripe__invoice_line_items_invoice_line_item_id"], "alias": "unique_stg_stripe__invoice_line_items_invoice_line_item_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.28763, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__invoice_line_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_stripe__invoice_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "invoice_line_item_id", "file_key_name": "models.stg_stripe__invoice_line_items", "attached_node": "model.mattermost_analytics.stg_stripe__invoice_line_items"}, "test.mattermost_analytics.relationships_stg_stripe__invoice_line_items_invoice_id__invoice_id__ref_stg_stripe__invoices_.bbac06f918": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_stripe__invoices')", "field": "invoice_id", "column_name": "invoice_id", "model": "{{ get_where_subquery(ref('stg_stripe__invoice_line_items')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "relationships_stg_stripe__invoice_line_items_invoice_id__invoice_id__ref_stg_stripe__invoices_", "resource_type": "test", "package_name": "mattermost_analytics", "path": "relationships_stg_stripe__invo_694d5de2822467d109974f302cea6880.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.relationships_stg_stripe__invoice_line_items_invoice_id__invoice_id__ref_stg_stripe__invoices_.bbac06f918", "fqn": ["mattermost_analytics", "staging", "stripe", "relationships_stg_stripe__invoice_line_items_invoice_id__invoice_id__ref_stg_stripe__invoices_"], "alias": "relationships_stg_stripe__invo_694d5de2822467d109974f302cea6880", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "relationships_stg_stripe__invo_694d5de2822467d109974f302cea6880", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_stripe__invo_694d5de2822467d109974f302cea6880"}, "created_at": 1699414207.288496, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_stripe__invo_694d5de2822467d109974f302cea6880\") }}", "language": "sql", "refs": [{"name": "stg_stripe__invoices", "package": null, "version": null}, {"name": "stg_stripe__invoice_line_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.stg_stripe__invoices", "model.mattermost_analytics.stg_stripe__invoice_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "invoice_id", "file_key_name": "models.stg_stripe__invoice_line_items", "attached_node": "model.mattermost_analytics.stg_stripe__invoice_line_items"}, "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_id.617c95b7d7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "invoice_id", "model": "{{ get_where_subquery(ref('stg_stripe__invoice_line_items')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__invoice_line_items_invoice_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__invoice_line_items_invoice_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_id.617c95b7d7", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__invoice_line_items_invoice_id"], "alias": "not_null_stg_stripe__invoice_line_items_invoice_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.292505, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__invoice_line_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__invoice_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "invoice_id", "file_key_name": "models.stg_stripe__invoice_line_items", "attached_node": "model.mattermost_analytics.stg_stripe__invoice_line_items"}, "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_item_id.2d04b0beaa": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "subscription_item_id", "model": "{{ get_where_subquery(ref('stg_stripe__subscription_items')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__subscription_items_subscription_item_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__subscription_items_subscription_item_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_item_id.2d04b0beaa", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__subscription_items_subscription_item_id"], "alias": "not_null_stg_stripe__subscription_items_subscription_item_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.293401, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__subscription_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__subscription_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subscription_item_id", "file_key_name": "models.stg_stripe__subscription_items", "attached_node": "model.mattermost_analytics.stg_stripe__subscription_items"}, "test.mattermost_analytics.unique_stg_stripe__subscription_items_subscription_item_id.479719b8c9": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "subscription_item_id", "model": "{{ get_where_subquery(ref('stg_stripe__subscription_items')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_stg_stripe__subscription_items_subscription_item_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_stg_stripe__subscription_items_subscription_item_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.unique_stg_stripe__subscription_items_subscription_item_id.479719b8c9", "fqn": ["mattermost_analytics", "staging", "stripe", "unique_stg_stripe__subscription_items_subscription_item_id"], "alias": "unique_stg_stripe__subscription_items_subscription_item_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.29441, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__subscription_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.stg_stripe__subscription_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subscription_item_id", "file_key_name": "models.stg_stripe__subscription_items", "attached_node": "model.mattermost_analytics.stg_stripe__subscription_items"}, "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_id.481bcb9a25": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "subscription_id", "model": "{{ get_where_subquery(ref('stg_stripe__subscription_items')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__subscription_items_subscription_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__subscription_items_subscription_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_id.481bcb9a25", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__subscription_items_subscription_id"], "alias": "not_null_stg_stripe__subscription_items_subscription_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.295285, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__subscription_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__subscription_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subscription_id", "file_key_name": "models.stg_stripe__subscription_items", "attached_node": "model.mattermost_analytics.stg_stripe__subscription_items"}, "test.mattermost_analytics.not_null_stg_stripe__subscription_items_product_id.9ee3ebe445": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_stripe__subscription_items')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_stg_stripe__subscription_items_product_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_stg_stripe__subscription_items_product_id.sql", "original_file_path": "models/staging/stripe/_stripe__models.yml", "unique_id": "test.mattermost_analytics.not_null_stg_stripe__subscription_items_product_id.9ee3ebe445", "fqn": ["mattermost_analytics", "staging", "stripe", "not_null_stg_stripe__subscription_items_product_id"], "alias": "not_null_stg_stripe__subscription_items_product_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.296152, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_stripe__subscription_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.stg_stripe__subscription_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "product_id", "file_key_name": "models.stg_stripe__subscription_items", "attached_node": "model.mattermost_analytics.stg_stripe__subscription_items"}, "test.mattermost_analytics.accepted_values_grp_performance_events__source_relation__int_mm_telemetry_rc_performance_events__int_mm_telemetry_prod_performance_events.8cb1f3b98b": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["int_mm_telemetry_rc_performance_events", "int_mm_telemetry_prod_performance_events"], "column_name": "_source_relation", "model": "{{ get_where_subquery(ref('grp_performance_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "accepted_values_grp_performance_events__source_relation__int_mm_telemetry_rc_performance_events__int_mm_telemetry_prod_performance_events", "resource_type": "test", "package_name": "mattermost_analytics", "path": "accepted_values_grp_performanc_2b9387932716972a64000e4080ef1cf2.sql", "original_file_path": "models/marts/web_app/platform/_platform__models.yml", "unique_id": "test.mattermost_analytics.accepted_values_grp_performance_events__source_relation__int_mm_telemetry_rc_performance_events__int_mm_telemetry_prod_performance_events.8cb1f3b98b", "fqn": ["mattermost_analytics", "marts", "web_app", "platform", "accepted_values_grp_performance_events__source_relation__int_mm_telemetry_rc_performance_events__int_mm_telemetry_prod_performance_events"], "alias": "accepted_values_grp_performanc_2b9387932716972a64000e4080ef1cf2", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_grp_performanc_2b9387932716972a64000e4080ef1cf2", "schema": "dbt_test__audit", "database": null, "tags": ["slow"], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["slow"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"tags": ["slow"], "alias": "accepted_values_grp_performanc_2b9387932716972a64000e4080ef1cf2"}, "created_at": 1699414207.314506, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(tags=['slow'],alias=\"accepted_values_grp_performanc_2b9387932716972a64000e4080ef1cf2\") }}", "language": "sql", "refs": [{"name": "grp_performance_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.grp_performance_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "_source_relation", "file_key_name": "models.grp_performance_events", "attached_node": "model.mattermost_analytics.grp_performance_events"}, "test.mattermost_analytics.not_null_grp_performance_events_id.330b7ae2e0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('grp_performance_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_grp_performance_events_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_grp_performance_events_id.sql", "original_file_path": "models/marts/web_app/platform/_platform__models.yml", "unique_id": "test.mattermost_analytics.not_null_grp_performance_events_id.330b7ae2e0", "fqn": ["mattermost_analytics", "marts", "web_app", "platform", "not_null_grp_performance_events_id"], "alias": "not_null_grp_performance_events_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.317077, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "grp_performance_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.grp_performance_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.grp_performance_events", "attached_node": "model.mattermost_analytics.grp_performance_events"}, "test.mattermost_analytics.unique_grp_performance_events_id.ad7d5b30e5": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('grp_performance_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_grp_performance_events_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_grp_performance_events_id.sql", "original_file_path": "models/marts/web_app/platform/_platform__models.yml", "unique_id": "test.mattermost_analytics.unique_grp_performance_events_id.ad7d5b30e5", "fqn": ["mattermost_analytics", "marts", "web_app", "platform", "unique_grp_performance_events_id"], "alias": "unique_grp_performance_events_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["slow"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.317961, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(tags=['slow']) }}", "language": "sql", "refs": [{"name": "grp_performance_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.grp_performance_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.grp_performance_events", "attached_node": "model.mattermost_analytics.grp_performance_events"}, "test.mattermost_analytics.not_null_grp_performance_events_event_date.2543751ae9": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_date", "model": "{{ get_where_subquery(ref('grp_performance_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_grp_performance_events_event_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_grp_performance_events_event_date.sql", "original_file_path": "models/marts/web_app/platform/_platform__models.yml", "unique_id": "test.mattermost_analytics.not_null_grp_performance_events_event_date.2543751ae9", "fqn": ["mattermost_analytics", "marts", "web_app", "platform", "not_null_grp_performance_events_event_date"], "alias": "not_null_grp_performance_events_event_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.318971, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "grp_performance_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.grp_performance_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_date", "file_key_name": "models.grp_performance_events", "attached_node": "model.mattermost_analytics.grp_performance_events"}, "test.mattermost_analytics.unique_grp_community_tracks_event_id.bfe9557712": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('grp_community_tracks')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_grp_community_tracks_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_grp_community_tracks_event_id.sql", "original_file_path": "models/marts/web_app/community/_community__models.yml", "unique_id": "test.mattermost_analytics.unique_grp_community_tracks_event_id.bfe9557712", "fqn": ["mattermost_analytics", "marts", "web_app", "community", "unique_grp_community_tracks_event_id"], "alias": "unique_grp_community_tracks_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.3203452, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "grp_community_tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.grp_community_tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.grp_community_tracks", "attached_node": "model.mattermost_analytics.grp_community_tracks"}, "test.mattermost_analytics.not_null_grp_community_tracks_event_id.04a0298775": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('grp_community_tracks')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_grp_community_tracks_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_grp_community_tracks_event_id.sql", "original_file_path": "models/marts/web_app/community/_community__models.yml", "unique_id": "test.mattermost_analytics.not_null_grp_community_tracks_event_id.04a0298775", "fqn": ["mattermost_analytics", "marts", "web_app", "community", "not_null_grp_community_tracks_event_id"], "alias": "not_null_grp_community_tracks_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.321224, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "grp_community_tracks", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.grp_community_tracks"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.grp_community_tracks", "attached_node": "model.mattermost_analytics.grp_community_tracks"}, "test.mattermost_analytics.unique_fct_events_daily_snapshot_id.d02056f7f2": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('fct_events_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_fct_events_daily_snapshot_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_fct_events_daily_snapshot_id.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_fct_events_daily_snapshot_id.d02056f7f2", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "unique_fct_events_daily_snapshot_id"], "alias": "unique_fct_events_daily_snapshot_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.333309, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.fct_events_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.fct_events_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_events_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_events_daily_snapshot_id.e8def66f81": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('fct_events_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_events_daily_snapshot_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_events_daily_snapshot_id.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_events_daily_snapshot_id.e8def66f81", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "not_null_fct_events_daily_snapshot_id"], "alias": "not_null_fct_events_daily_snapshot_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.334234, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_events_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.fct_events_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_events_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_date.69686182c8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_date", "model": "{{ get_where_subquery(ref('fct_events_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_events_daily_snapshot_event_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_events_daily_snapshot_event_date.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_date.69686182c8", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "not_null_fct_events_daily_snapshot_event_date"], "alias": "not_null_fct_events_daily_snapshot_event_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.335103, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_events_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_date", "file_key_name": "models.fct_events_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_events_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_id.a4b669af51": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('fct_events_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_events_daily_snapshot_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_events_daily_snapshot_event_id.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_id.a4b669af51", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "not_null_fct_events_daily_snapshot_event_id"], "alias": "not_null_fct_events_daily_snapshot_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.335968, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_events_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.fct_events_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_events_daily_snapshot"}, "test.mattermost_analytics.relationships_fct_events_daily_snapshot_event_id__event_id__ref_dim_events_.2a96944b3e": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('dim_events')", "field": "event_id", "column_name": "event_id", "model": "{{ get_where_subquery(ref('fct_events_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "relationships_fct_events_daily_snapshot_event_id__event_id__ref_dim_events_", "resource_type": "test", "package_name": "mattermost_analytics", "path": "relationships_fct_events_daily_715ed161e296999663bcab811d69a2e4.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.relationships_fct_events_daily_snapshot_event_id__event_id__ref_dim_events_.2a96944b3e", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "relationships_fct_events_daily_snapshot_event_id__event_id__ref_dim_events_"], "alias": "relationships_fct_events_daily_715ed161e296999663bcab811d69a2e4", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "relationships_fct_events_daily_715ed161e296999663bcab811d69a2e4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_fct_events_daily_715ed161e296999663bcab811d69a2e4"}, "created_at": 1699414207.337295, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_fct_events_daily_715ed161e296999663bcab811d69a2e4\") }}", "language": "sql", "refs": [{"name": "dim_events", "package": null, "version": null}, {"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_events", "model.mattermost_analytics.fct_events_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.fct_events_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_events_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_count.f67160cd88": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_count", "model": "{{ get_where_subquery(ref('fct_events_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_events_daily_snapshot_event_count", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_events_daily_snapshot_event_count.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_count.f67160cd88", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "not_null_fct_events_daily_snapshot_event_count"], "alias": "not_null_fct_events_daily_snapshot_event_count", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.339731, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_events_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_count", "file_key_name": "models.fct_events_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_events_daily_snapshot"}, "test.mattermost_analytics.dbt_utils_expression_is_true_fct_events_daily_snapshot_event_count_0.7d4e14f128": {"test_metadata": {"name": "expression_is_true", "kwargs": {"expression": "event_count > 0", "model": "{{ get_where_subquery(ref('fct_events_daily_snapshot')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_expression_is_true_fct_events_daily_snapshot_event_count_0", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_expression_is_true_f_bf904a6e91d6d60177b6548f2af4010e.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_expression_is_true_fct_events_daily_snapshot_event_count_0.7d4e14f128", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "dbt_utils_expression_is_true_fct_events_daily_snapshot_event_count_0"], "alias": "dbt_utils_expression_is_true_f_bf904a6e91d6d60177b6548f2af4010e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_expression_is_true_f_bf904a6e91d6d60177b6548f2af4010e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_expression_is_true_f_bf904a6e91d6d60177b6548f2af4010e"}, "created_at": 1699414207.3407412, "relation_name": null, "raw_code": "{{ dbt_utils.test_expression_is_true(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_expression_is_true_f_bf904a6e91d6d60177b6548f2af4010e\") }}", "language": "sql", "refs": [{"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_expression_is_true", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_events_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_events_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_events_daily_snapshot"}, "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_events_daily_snapshot_event_date__event_id.87db18a8e5": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["event_date", "event_id"], "model": "{{ get_where_subquery(ref('fct_events_daily_snapshot')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_unique_combination_of_columns_fct_events_daily_snapshot_event_date__event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_unique_combination_o_74bb651f8b5d23c571c836f00517fc14.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_events_daily_snapshot_event_date__event_id.87db18a8e5", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "dbt_utils_unique_combination_of_columns_fct_events_daily_snapshot_event_date__event_id"], "alias": "dbt_utils_unique_combination_o_74bb651f8b5d23c571c836f00517fc14", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_74bb651f8b5d23c571c836f00517fc14", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_74bb651f8b5d23c571c836f00517fc14"}, "created_at": 1699414207.345765, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_74bb651f8b5d23c571c836f00517fc14\") }}", "language": "sql", "refs": [{"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_events_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_events_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_events_daily_snapshot"}, "test.mattermost_analytics.unique_dim_events_event_id.9e7565176a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('dim_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_dim_events_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_dim_events_event_id.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_dim_events_event_id.9e7565176a", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "unique_dim_events_event_id"], "alias": "unique_dim_events_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.350407, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.dim_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.dim_events", "attached_node": "model.mattermost_analytics.dim_events"}, "test.mattermost_analytics.not_null_dim_events_event_id.480394b51b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('dim_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_events_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_events_event_id.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_events_event_id.480394b51b", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "not_null_dim_events_event_id"], "alias": "not_null_dim_events_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.351276, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.dim_events", "attached_node": "model.mattermost_analytics.dim_events"}, "test.mattermost_analytics.not_null_dim_events_event_name.594f072a39": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_name", "model": "{{ get_where_subquery(ref('dim_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_events_event_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_events_event_name.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_events_event_name.594f072a39", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "not_null_dim_events_event_name"], "alias": "not_null_dim_events_event_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.352125, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_name", "file_key_name": "models.dim_events", "attached_node": "model.mattermost_analytics.dim_events"}, "test.mattermost_analytics.not_null_dim_events_event_table.69db754b70": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_table", "model": "{{ get_where_subquery(ref('dim_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_events_event_table", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_events_event_table.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_events_event_table.69db754b70", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "not_null_dim_events_event_table"], "alias": "not_null_dim_events_event_table", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.352967, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_table", "file_key_name": "models.dim_events", "attached_node": "model.mattermost_analytics.dim_events"}, "test.mattermost_analytics.not_null_dim_events_source.1c4b4aeebe": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "source", "model": "{{ get_where_subquery(ref('dim_events')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_events_source", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_events_source.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_events_source.1c4b4aeebe", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "not_null_dim_events_source"], "alias": "not_null_dim_events_source", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.354005, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "source", "file_key_name": "models.dim_events", "attached_node": "model.mattermost_analytics.dim_events"}, "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_dim_events_event_name__event_table__category__event_type__source.f34005d0d1": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["event_name", "event_table", "category", "event_type", "source"], "model": "{{ get_where_subquery(ref('dim_events')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_unique_combination_of_columns_dim_events_event_name__event_table__category__event_type__source", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_unique_combination_o_5b2fc61207e3049b1601657a0011e766.sql", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_dim_events_event_name__event_table__category__event_type__source.f34005d0d1", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "dbt_utils_unique_combination_of_columns_dim_events_event_name__event_table__category__event_type__source"], "alias": "dbt_utils_unique_combination_o_5b2fc61207e3049b1601657a0011e766", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_5b2fc61207e3049b1601657a0011e766", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_5b2fc61207e3049b1601657a0011e766"}, "created_at": 1699414207.354858, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_5b2fc61207e3049b1601657a0011e766\") }}", "language": "sql", "refs": [{"name": "dim_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_events"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.dim_events", "attached_node": "model.mattermost_analytics.dim_events"}, "test.mattermost_analytics.not_null_fct_in_product_trial_requests_trial_request_id.f659583bd8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "trial_request_id", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_in_product_trial_requests_trial_request_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_in_product_trial_requests_trial_request_id.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_in_product_trial_requests_trial_request_id.f659583bd8", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "not_null_fct_in_product_trial_requests_trial_request_id"], "alias": "not_null_fct_in_product_trial_requests_trial_request_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.359157, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "trial_request_id", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.unique_fct_in_product_trial_requests_trial_request_id.9fbd72e76d": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "trial_request_id", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_fct_in_product_trial_requests_trial_request_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_fct_in_product_trial_requests_trial_request_id.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.unique_fct_in_product_trial_requests_trial_request_id.9fbd72e76d", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "unique_fct_in_product_trial_requests_trial_request_id"], "alias": "unique_fct_in_product_trial_requests_trial_request_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.3600798, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "trial_request_id", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.not_null_fct_in_product_trial_requests_name.a6e3998b54": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "name", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_in_product_trial_requests_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_in_product_trial_requests_name.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_in_product_trial_requests_name.a6e3998b54", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "not_null_fct_in_product_trial_requests_name"], "alias": "not_null_fct_in_product_trial_requests_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.3610508, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "name", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_name.f7ba7391b4": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "name", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_fct_in_product_trial_requests_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_fct_in_product_trial_requests_name.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_name.f7ba7391b4", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "dbt_utils_not_empty_string_fct_in_product_trial_requests_name"], "alias": "dbt_utils_not_empty_string_fct_in_product_trial_requests_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.361923, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "name", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_first_name.61d081e4d1": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "first_name", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_fct_in_product_trial_requests_first_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_fct_e8f981d3332606e381a8e961a0192aee.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_first_name.61d081e4d1", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "dbt_utils_not_empty_string_fct_in_product_trial_requests_first_name"], "alias": "dbt_utils_not_empty_string_fct_e8f981d3332606e381a8e961a0192aee", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_not_empty_string_fct_e8f981d3332606e381a8e961a0192aee", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_not_empty_string_fct_e8f981d3332606e381a8e961a0192aee"}, "created_at": 1699414207.363926, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_not_empty_string_fct_e8f981d3332606e381a8e961a0192aee\") }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "first_name", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_last_name.4df8b9bbfa": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "last_name", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_fct_in_product_trial_requests_last_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_fct_f706a1ee52d88f8bc4aa42293eee105a.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_last_name.4df8b9bbfa", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "dbt_utils_not_empty_string_fct_in_product_trial_requests_last_name"], "alias": "dbt_utils_not_empty_string_fct_f706a1ee52d88f8bc4aa42293eee105a", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_not_empty_string_fct_f706a1ee52d88f8bc4aa42293eee105a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_not_empty_string_fct_f706a1ee52d88f8bc4aa42293eee105a"}, "created_at": 1699414207.366133, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_not_empty_string_fct_f706a1ee52d88f8bc4aa42293eee105a\") }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "last_name", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_company_name.c0a530fc53": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "company_name", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_fct_in_product_trial_requests_company_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_fct_467dd9697fa99e22a314da52351ab540.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_company_name.c0a530fc53", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "dbt_utils_not_empty_string_fct_in_product_trial_requests_company_name"], "alias": "dbt_utils_not_empty_string_fct_467dd9697fa99e22a314da52351ab540", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_not_empty_string_fct_467dd9697fa99e22a314da52351ab540", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_not_empty_string_fct_467dd9697fa99e22a314da52351ab540"}, "created_at": 1699414207.368317, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_not_empty_string_fct_467dd9697fa99e22a314da52351ab540\") }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "company_name", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.not_null_fct_in_product_trial_requests_normalized_email.eb16f6c556": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "normalized_email", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_in_product_trial_requests_normalized_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_in_product_trial_requests_normalized_email.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_in_product_trial_requests_normalized_email.eb16f6c556", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "not_null_fct_in_product_trial_requests_normalized_email"], "alias": "not_null_fct_in_product_trial_requests_normalized_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.37039, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "normalized_email", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_normalized_email.ac0f1595df": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "normalized_email", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_fct_in_product_trial_requests_normalized_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_fct_da6eab0a6ed6b484a56959a01a8e68f4.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_normalized_email.ac0f1595df", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "dbt_utils_not_empty_string_fct_in_product_trial_requests_normalized_email"], "alias": "dbt_utils_not_empty_string_fct_da6eab0a6ed6b484a56959a01a8e68f4", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_not_empty_string_fct_da6eab0a6ed6b484a56959a01a8e68f4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_not_empty_string_fct_da6eab0a6ed6b484a56959a01a8e68f4"}, "created_at": 1699414207.371399, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_not_empty_string_fct_da6eab0a6ed6b484a56959a01a8e68f4\") }}", "language": "sql", "refs": [{"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "normalized_email", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.valid_country_name.6fbe9ede7d": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('country_codes')", "field": "name", "column_name": "country_name", "model": "{{ get_where_subquery(ref('fct_in_product_trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "valid_country_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "valid_country_name.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.valid_country_name.6fbe9ede7d", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "valid_country_name"], "alias": "valid_country_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "country_name not in ('', 'Viet Nam', 'Iran, Islamic Republic of', 'United Kingdom of Great Britain and Northern Ireland')", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "country_name not in ('', 'Viet Nam', 'Iran, Islamic Republic of', 'United Kingdom of Great Britain and Northern Ireland')"}, "created_at": 1699414207.373656, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(where=\"country_name not in ('', 'Viet Nam', 'Iran, Islamic Republic of', 'United Kingdom of Great Britain and Northern Ireland')\") }}", "language": "sql", "refs": [{"name": "country_codes", "package": null, "version": null}, {"name": "fct_in_product_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["seed.mattermost_analytics.country_codes", "model.mattermost_analytics.fct_in_product_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "country_name", "file_key_name": "models.fct_in_product_trial_requests", "attached_node": "model.mattermost_analytics.fct_in_product_trial_requests"}, "test.mattermost_analytics.not_null_fct_cloud_trial_requests_email.04959c1093": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('fct_cloud_trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_cloud_trial_requests_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_cloud_trial_requests_email.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_cloud_trial_requests_email.04959c1093", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "not_null_fct_cloud_trial_requests_email"], "alias": "not_null_fct_cloud_trial_requests_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.376129, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_cloud_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_cloud_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "email", "file_key_name": "models.fct_cloud_trial_requests", "attached_node": "model.mattermost_analytics.fct_cloud_trial_requests"}, "test.mattermost_analytics.dbt_utils_not_empty_string_fct_cloud_trial_requests_email.2a1f09e63e": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('fct_cloud_trial_requests')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_fct_cloud_trial_requests_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_fct_cloud_trial_requests_email.sql", "original_file_path": "models/marts/sales/hightouch/_hightouch__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_fct_cloud_trial_requests_email.2a1f09e63e", "fqn": ["mattermost_analytics", "marts", "sales", "hightouch", "dbt_utils_not_empty_string_fct_cloud_trial_requests_email"], "alias": "dbt_utils_not_empty_string_fct_cloud_trial_requests_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.376989, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_cloud_trial_requests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_cloud_trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "email", "file_key_name": "models.fct_cloud_trial_requests", "attached_node": "model.mattermost_analytics.fct_cloud_trial_requests"}, "test.mattermost_analytics.not_null_dim_labels_issue_id.0d48c79306": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issue_id", "model": "{{ get_where_subquery(ref('dim_labels')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_labels_issue_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_labels_issue_id.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_labels_issue_id.0d48c79306", "fqn": ["mattermost_analytics", "marts", "release", "not_null_dim_labels_issue_id"], "alias": "not_null_dim_labels_issue_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.382398, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_labels", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_labels"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_id", "file_key_name": "models.dim_labels", "attached_node": "model.mattermost_analytics.dim_labels"}, "test.mattermost_analytics.relationships_dim_labels_issue_id__issue_id__ref_fct_issues_daily_snapshot_.57348ef1cd": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('fct_issues_daily_snapshot')", "field": "issue_id", "column_name": "issue_id", "model": "{{ get_where_subquery(ref('dim_labels')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "relationships_dim_labels_issue_id__issue_id__ref_fct_issues_daily_snapshot_", "resource_type": "test", "package_name": "mattermost_analytics", "path": "relationships_dim_labels_c3be55463a6f09b48ac54ca1a8f1e63e.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.relationships_dim_labels_issue_id__issue_id__ref_fct_issues_daily_snapshot_.57348ef1cd", "fqn": ["mattermost_analytics", "marts", "release", "relationships_dim_labels_issue_id__issue_id__ref_fct_issues_daily_snapshot_"], "alias": "relationships_dim_labels_c3be55463a6f09b48ac54ca1a8f1e63e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "relationships_dim_labels_c3be55463a6f09b48ac54ca1a8f1e63e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_dim_labels_c3be55463a6f09b48ac54ca1a8f1e63e"}, "created_at": 1699414207.38332, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_dim_labels_c3be55463a6f09b48ac54ca1a8f1e63e\") }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}, {"name": "dim_labels", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot", "model.mattermost_analytics.dim_labels"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_id", "file_key_name": "models.dim_labels", "attached_node": "model.mattermost_analytics.dim_labels"}, "test.mattermost_analytics.not_null_dim_labels_label.d6aeaf0feb": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "label", "model": "{{ get_where_subquery(ref('dim_labels')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_labels_label", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_labels_label.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_labels_label.d6aeaf0feb", "fqn": ["mattermost_analytics", "marts", "release", "not_null_dim_labels_label"], "alias": "not_null_dim_labels_label", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.38577, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_labels", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_labels"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label", "file_key_name": "models.dim_labels", "attached_node": "model.mattermost_analytics.dim_labels"}, "test.mattermost_analytics.not_null_dim_projects_project_id.89ad1da4cd": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "project_id", "model": "{{ get_where_subquery(ref('dim_projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_projects_project_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_projects_project_id.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_projects_project_id.89ad1da4cd", "fqn": ["mattermost_analytics", "marts", "release", "not_null_dim_projects_project_id"], "alias": "not_null_dim_projects_project_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.3866382, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_id", "file_key_name": "models.dim_projects", "attached_node": "model.mattermost_analytics.dim_projects"}, "test.mattermost_analytics.unique_dim_projects_project_id.e50e806691": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "project_id", "model": "{{ get_where_subquery(ref('dim_projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_dim_projects_project_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_dim_projects_project_id.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.unique_dim_projects_project_id.e50e806691", "fqn": ["mattermost_analytics", "marts", "release", "unique_dim_projects_project_id"], "alias": "unique_dim_projects_project_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.387486, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.dim_projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_id", "file_key_name": "models.dim_projects", "attached_node": "model.mattermost_analytics.dim_projects"}, "test.mattermost_analytics.not_null_dim_projects_project_key.f57855f13a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "project_key", "model": "{{ get_where_subquery(ref('dim_projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_projects_project_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_projects_project_key.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_projects_project_key.f57855f13a", "fqn": ["mattermost_analytics", "marts", "release", "not_null_dim_projects_project_key"], "alias": "not_null_dim_projects_project_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.38833, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_key", "file_key_name": "models.dim_projects", "attached_node": "model.mattermost_analytics.dim_projects"}, "test.mattermost_analytics.unique_dim_projects_project_key.da23dabd87": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "project_key", "model": "{{ get_where_subquery(ref('dim_projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_dim_projects_project_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_dim_projects_project_key.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.unique_dim_projects_project_key.da23dabd87", "fqn": ["mattermost_analytics", "marts", "release", "unique_dim_projects_project_key"], "alias": "unique_dim_projects_project_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.389378, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.dim_projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_key", "file_key_name": "models.dim_projects", "attached_node": "model.mattermost_analytics.dim_projects"}, "test.mattermost_analytics.not_null_dim_projects_name.4d3148dfcd": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "name", "model": "{{ get_where_subquery(ref('dim_projects')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_projects_name", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_projects_name.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_projects_name.4d3148dfcd", "fqn": ["mattermost_analytics", "marts", "release", "not_null_dim_projects_name"], "alias": "not_null_dim_projects_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.39022, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_projects", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_projects"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "name", "file_key_name": "models.dim_projects", "attached_node": "model.mattermost_analytics.dim_projects"}, "test.mattermost_analytics.not_null_dim_fix_versions_issue_id.04e09cd6ab": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issue_id", "model": "{{ get_where_subquery(ref('dim_fix_versions')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_fix_versions_issue_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_fix_versions_issue_id.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_fix_versions_issue_id.04e09cd6ab", "fqn": ["mattermost_analytics", "marts", "release", "not_null_dim_fix_versions_issue_id"], "alias": "not_null_dim_fix_versions_issue_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.391057, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_fix_versions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_fix_versions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_id", "file_key_name": "models.dim_fix_versions", "attached_node": "model.mattermost_analytics.dim_fix_versions"}, "test.mattermost_analytics.relationships_dim_fix_versions_issue_id__issue_id__ref_fct_issues_daily_snapshot_.d3720e0e48": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('fct_issues_daily_snapshot')", "field": "issue_id", "column_name": "issue_id", "model": "{{ get_where_subquery(ref('dim_fix_versions')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "relationships_dim_fix_versions_issue_id__issue_id__ref_fct_issues_daily_snapshot_", "resource_type": "test", "package_name": "mattermost_analytics", "path": "relationships_dim_fix_versions_8bc86a682e05fe2f7ba0a47001ea6d63.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.relationships_dim_fix_versions_issue_id__issue_id__ref_fct_issues_daily_snapshot_.d3720e0e48", "fqn": ["mattermost_analytics", "marts", "release", "relationships_dim_fix_versions_issue_id__issue_id__ref_fct_issues_daily_snapshot_"], "alias": "relationships_dim_fix_versions_8bc86a682e05fe2f7ba0a47001ea6d63", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "relationships_dim_fix_versions_8bc86a682e05fe2f7ba0a47001ea6d63", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_dim_fix_versions_8bc86a682e05fe2f7ba0a47001ea6d63"}, "created_at": 1699414207.391936, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_dim_fix_versions_8bc86a682e05fe2f7ba0a47001ea6d63\") }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}, {"name": "dim_fix_versions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot", "model.mattermost_analytics.dim_fix_versions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_id", "file_key_name": "models.dim_fix_versions", "attached_node": "model.mattermost_analytics.dim_fix_versions"}, "test.mattermost_analytics.not_null_dim_fix_versions_fix_version.e2728d4a95": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "fix_version", "model": "{{ get_where_subquery(ref('dim_fix_versions')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_fix_versions_fix_version", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_fix_versions_fix_version.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_fix_versions_fix_version.e2728d4a95", "fqn": ["mattermost_analytics", "marts", "release", "not_null_dim_fix_versions_fix_version"], "alias": "not_null_dim_fix_versions_fix_version", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.394449, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_fix_versions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_fix_versions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "fix_version", "file_key_name": "models.dim_fix_versions", "attached_node": "model.mattermost_analytics.dim_fix_versions"}, "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_fix_version.319e7c6c54": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "fix_version", "model": "{{ get_where_subquery(ref('dim_fix_versions')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_dim_fix_versions_fix_version", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_dim_fix_versions_fix_version.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_fix_version.319e7c6c54", "fqn": ["mattermost_analytics", "marts", "release", "dbt_utils_not_empty_string_dim_fix_versions_fix_version"], "alias": "dbt_utils_not_empty_string_dim_fix_versions_fix_version", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.3953128, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_fix_versions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_fix_versions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "fix_version", "file_key_name": "models.dim_fix_versions", "attached_node": "model.mattermost_analytics.dim_fix_versions"}, "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_semver.27b2d25b2f": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "semver", "model": "{{ get_where_subquery(ref('dim_fix_versions')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_dim_fix_versions_semver", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_dim_fix_versions_semver.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_semver.27b2d25b2f", "fqn": ["mattermost_analytics", "marts", "release", "dbt_utils_not_empty_string_dim_fix_versions_semver"], "alias": "dbt_utils_not_empty_string_dim_fix_versions_semver", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.397384, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_fix_versions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_fix_versions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "semver", "file_key_name": "models.dim_fix_versions", "attached_node": "model.mattermost_analytics.dim_fix_versions"}, "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_major__True__0.58d0dba64d": {"test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "inclusive": true, "column_name": "version_major", "model": "{{ get_where_subquery(ref('dim_fix_versions')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_accepted_range_dim_fix_versions_version_major__True__0", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_accepted_range_dim_f_1393b9b332ff41f724b5a7fbd1dcf9e4.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_major__True__0.58d0dba64d", "fqn": ["mattermost_analytics", "marts", "release", "dbt_utils_accepted_range_dim_fix_versions_version_major__True__0"], "alias": "dbt_utils_accepted_range_dim_f_1393b9b332ff41f724b5a7fbd1dcf9e4", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_accepted_range_dim_f_1393b9b332ff41f724b5a7fbd1dcf9e4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_accepted_range_dim_f_1393b9b332ff41f724b5a7fbd1dcf9e4"}, "created_at": 1699414207.399529, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_accepted_range_dim_f_1393b9b332ff41f724b5a7fbd1dcf9e4\") }}", "language": "sql", "refs": [{"name": "dim_fix_versions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_fix_versions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_major", "file_key_name": "models.dim_fix_versions", "attached_node": "model.mattermost_analytics.dim_fix_versions"}, "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_minor__True__0.3cf17aed97": {"test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "inclusive": true, "column_name": "version_minor", "model": "{{ get_where_subquery(ref('dim_fix_versions')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_accepted_range_dim_fix_versions_version_minor__True__0", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_accepted_range_dim_f_b392ffd4f7268d950273387341c0fe6d.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_minor__True__0.3cf17aed97", "fqn": ["mattermost_analytics", "marts", "release", "dbt_utils_accepted_range_dim_fix_versions_version_minor__True__0"], "alias": "dbt_utils_accepted_range_dim_f_b392ffd4f7268d950273387341c0fe6d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_accepted_range_dim_f_b392ffd4f7268d950273387341c0fe6d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_accepted_range_dim_f_b392ffd4f7268d950273387341c0fe6d"}, "created_at": 1699414207.403702, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_accepted_range_dim_f_b392ffd4f7268d950273387341c0fe6d\") }}", "language": "sql", "refs": [{"name": "dim_fix_versions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_fix_versions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_minor", "file_key_name": "models.dim_fix_versions", "attached_node": "model.mattermost_analytics.dim_fix_versions"}, "test.mattermost_analytics.accepted_values_dim_fix_versions_component__Mobile__Desktop__Playbooks__IR__Cloud__Apps__None.57b1839642": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["Mobile", "Desktop", "Playbooks", "IR", "Cloud", "Apps", null], "column_name": "component", "model": "{{ get_where_subquery(ref('dim_fix_versions')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "accepted_values_dim_fix_versions_component__Mobile__Desktop__Playbooks__IR__Cloud__Apps__None", "resource_type": "test", "package_name": "mattermost_analytics", "path": "accepted_values_dim_fix_versio_46417682fa36ec6a49c7a290d4c7d79c.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.accepted_values_dim_fix_versions_component__Mobile__Desktop__Playbooks__IR__Cloud__Apps__None.57b1839642", "fqn": ["mattermost_analytics", "marts", "release", "accepted_values_dim_fix_versions_component__Mobile__Desktop__Playbooks__IR__Cloud__Apps__None"], "alias": "accepted_values_dim_fix_versio_46417682fa36ec6a49c7a290d4c7d79c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_dim_fix_versio_46417682fa36ec6a49c7a290d4c7d79c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_dim_fix_versio_46417682fa36ec6a49c7a290d4c7d79c"}, "created_at": 1699414207.4059641, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_dim_fix_versio_46417682fa36ec6a49c7a290d4c7d79c\") }}", "language": "sql", "refs": [{"name": "dim_fix_versions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_fix_versions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "component", "file_key_name": "models.dim_fix_versions", "attached_node": "model.mattermost_analytics.dim_fix_versions"}, "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_id.6614befb12": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issue_id", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_issues_daily_snapshot_issue_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_issues_daily_snapshot_issue_id.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_id.6614befb12", "fqn": ["mattermost_analytics", "marts", "release", "not_null_fct_issues_daily_snapshot_issue_id"], "alias": "not_null_fct_issues_daily_snapshot_issue_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.409075, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_id", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_id.e4e796ee3c": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "issue_id", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_fct_issues_daily_snapshot_issue_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_fct_issues_daily_snapshot_issue_id.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_id.e4e796ee3c", "fqn": ["mattermost_analytics", "marts", "release", "unique_fct_issues_daily_snapshot_issue_id"], "alias": "unique_fct_issues_daily_snapshot_issue_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.409945, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_id", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_key.550a3a2782": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issue_key", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_issues_daily_snapshot_issue_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_issues_daily_snapshot_issue_key.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_key.550a3a2782", "fqn": ["mattermost_analytics", "marts", "release", "not_null_fct_issues_daily_snapshot_issue_key"], "alias": "not_null_fct_issues_daily_snapshot_issue_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.410959, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_key", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_key.82c0358848": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "issue_key", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_fct_issues_daily_snapshot_issue_key", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_fct_issues_daily_snapshot_issue_key.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_key.82c0358848", "fqn": ["mattermost_analytics", "marts", "release", "unique_fct_issues_daily_snapshot_issue_key"], "alias": "unique_fct_issues_daily_snapshot_issue_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.411816, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_key", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_project_id.21fd764871": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "project_id", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_issues_daily_snapshot_project_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_issues_daily_snapshot_project_id.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_project_id.21fd764871", "fqn": ["mattermost_analytics", "marts", "release", "not_null_fct_issues_daily_snapshot_project_id"], "alias": "not_null_fct_issues_daily_snapshot_project_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.412669, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_id", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.relationships_fct_issues_daily_snapshot_project_id__project_id__ref_dim_projects_.1253039083": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('dim_projects')", "field": "project_id", "column_name": "project_id", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "relationships_fct_issues_daily_snapshot_project_id__project_id__ref_dim_projects_", "resource_type": "test", "package_name": "mattermost_analytics", "path": "relationships_fct_issues_daily_7fda3343e3af083cff71953a3e1731ae.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.relationships_fct_issues_daily_snapshot_project_id__project_id__ref_dim_projects_.1253039083", "fqn": ["mattermost_analytics", "marts", "release", "relationships_fct_issues_daily_snapshot_project_id__project_id__ref_dim_projects_"], "alias": "relationships_fct_issues_daily_7fda3343e3af083cff71953a3e1731ae", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "relationships_fct_issues_daily_7fda3343e3af083cff71953a3e1731ae", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_fct_issues_daily_7fda3343e3af083cff71953a3e1731ae"}, "created_at": 1699414207.41353, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_fct_issues_daily_7fda3343e3af083cff71953a3e1731ae\") }}", "language": "sql", "refs": [{"name": "dim_projects", "package": null, "version": null}, {"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_projects", "model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "project_id", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_type.207161b3fb": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issue_type", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_issues_daily_snapshot_issue_type", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_issues_daily_snapshot_issue_type.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_type.207161b3fb", "fqn": ["mattermost_analytics", "marts", "release", "not_null_fct_issues_daily_snapshot_issue_type"], "alias": "not_null_fct_issues_daily_snapshot_issue_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4160168, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issue_type", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_created_at.b9baeb692e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_issues_daily_snapshot_created_at", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_issues_daily_snapshot_created_at.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_created_at.b9baeb692e", "fqn": ["mattermost_analytics", "marts", "release", "not_null_fct_issues_daily_snapshot_created_at"], "alias": "not_null_fct_issues_daily_snapshot_created_at", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.416909, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "created_at", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_status.48103ead12": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "status", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_issues_daily_snapshot_status", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_issues_daily_snapshot_status.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_status.48103ead12", "fqn": ["mattermost_analytics", "marts", "release", "not_null_fct_issues_daily_snapshot_status"], "alias": "not_null_fct_issues_daily_snapshot_status", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.41776, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "status", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.dbt_utils_accepted_range_fct_issues_daily_snapshot_lead_time_in_days__True__0.459aedc908": {"test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "inclusive": true, "column_name": "lead_time_in_days", "model": "{{ get_where_subquery(ref('fct_issues_daily_snapshot')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_accepted_range_fct_issues_daily_snapshot_lead_time_in_days__True__0", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_accepted_range_fct_i_088347dea62d0b2073cef1a2206fe0cd.sql", "original_file_path": "models/marts/release/_release__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_accepted_range_fct_issues_daily_snapshot_lead_time_in_days__True__0.459aedc908", "fqn": ["mattermost_analytics", "marts", "release", "dbt_utils_accepted_range_fct_issues_daily_snapshot_lead_time_in_days__True__0"], "alias": "dbt_utils_accepted_range_fct_i_088347dea62d0b2073cef1a2206fe0cd", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_accepted_range_fct_i_088347dea62d0b2073cef1a2206fe0cd", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_accepted_range_fct_i_088347dea62d0b2073cef1a2206fe0cd"}, "created_at": 1699414207.418784, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_accepted_range_fct_i_088347dea62d0b2073cef1a2206fe0cd\") }}", "language": "sql", "refs": [{"name": "fct_issues_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_issues_daily_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "lead_time_in_days", "file_key_name": "models.fct_issues_daily_snapshot", "attached_node": "model.mattermost_analytics.fct_issues_daily_snapshot"}, "test.mattermost_analytics.unique_fct_active_users_daily_server_id.519c8852e2": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_server_id", "model": "{{ get_where_subquery(ref('fct_active_users')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_fct_active_users_daily_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_fct_active_users_daily_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.unique_fct_active_users_daily_server_id.519c8852e2", "fqn": ["mattermost_analytics", "marts", "product", "unique_fct_active_users_daily_server_id"], "alias": "unique_fct_active_users_daily_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4281101, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.fct_active_users"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_server_id", "file_key_name": "models.fct_active_users", "attached_node": "model.mattermost_analytics.fct_active_users"}, "test.mattermost_analytics.not_null_fct_active_users_daily_server_id.465868bd11": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_server_id", "model": "{{ get_where_subquery(ref('fct_active_users')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_active_users_daily_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_active_users_daily_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_active_users_daily_server_id.465868bd11", "fqn": ["mattermost_analytics", "marts", "product", "not_null_fct_active_users_daily_server_id"], "alias": "not_null_fct_active_users_daily_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4290292, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_active_users"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_server_id", "file_key_name": "models.fct_active_users", "attached_node": "model.mattermost_analytics.fct_active_users"}, "test.mattermost_analytics.not_null_fct_active_users_activity_date.c37d7d834f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "activity_date", "model": "{{ get_where_subquery(ref('fct_active_users')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_active_users_activity_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_active_users_activity_date.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_active_users_activity_date.c37d7d834f", "fqn": ["mattermost_analytics", "marts", "product", "not_null_fct_active_users_activity_date"], "alias": "not_null_fct_active_users_activity_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.429895, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_active_users"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "activity_date", "file_key_name": "models.fct_active_users", "attached_node": "model.mattermost_analytics.fct_active_users"}, "test.mattermost_analytics.not_null_fct_active_users_server_id.c0ce7cd4df": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "server_id", "model": "{{ get_where_subquery(ref('fct_active_users')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_active_users_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_active_users_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_active_users_server_id.c0ce7cd4df", "fqn": ["mattermost_analytics", "marts", "product", "not_null_fct_active_users_server_id"], "alias": "not_null_fct_active_users_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.430758, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_active_users"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "server_id", "file_key_name": "models.fct_active_users", "attached_node": "model.mattermost_analytics.fct_active_users"}, "test.mattermost_analytics.not_null_fct_active_users_version_id.d60142a407": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "version_id", "model": "{{ get_where_subquery(ref('fct_active_users')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_active_users_version_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_active_users_version_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_active_users_version_id.d60142a407", "fqn": ["mattermost_analytics", "marts", "product", "not_null_fct_active_users_version_id"], "alias": "not_null_fct_active_users_version_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.431744, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_active_users"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_id", "file_key_name": "models.fct_active_users", "attached_node": "model.mattermost_analytics.fct_active_users"}, "test.mattermost_analytics.relationships_fct_active_users_version_id__version_id__ref_dim_version_.cd09a944f0": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('dim_version')", "field": "version_id", "column_name": "version_id", "model": "{{ get_where_subquery(ref('fct_active_users')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "relationships_fct_active_users_version_id__version_id__ref_dim_version_", "resource_type": "test", "package_name": "mattermost_analytics", "path": "relationships_fct_active_users_e551ec6f6c83cd50cb98e65fdaa8e76d.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.relationships_fct_active_users_version_id__version_id__ref_dim_version_.cd09a944f0", "fqn": ["mattermost_analytics", "marts", "product", "relationships_fct_active_users_version_id__version_id__ref_dim_version_"], "alias": "relationships_fct_active_users_e551ec6f6c83cd50cb98e65fdaa8e76d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "relationships_fct_active_users_e551ec6f6c83cd50cb98e65fdaa8e76d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_fct_active_users_e551ec6f6c83cd50cb98e65fdaa8e76d"}, "created_at": 1699414207.4326122, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_fct_active_users_e551ec6f6c83cd50cb98e65fdaa8e76d\") }}", "language": "sql", "refs": [{"name": "dim_version", "package": null, "version": null}, {"name": "fct_active_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_version", "model.mattermost_analytics.fct_active_users"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_id", "file_key_name": "models.fct_active_users", "attached_node": "model.mattermost_analytics.fct_active_users"}, "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_active_users_activity_date__server_id.11070c5f62": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["activity_date", "server_id"], "model": "{{ get_where_subquery(ref('fct_active_users')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_unique_combination_of_columns_fct_active_users_activity_date__server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_unique_combination_o_f630962be7b5f15f1fa92439a1021c44.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_active_users_activity_date__server_id.11070c5f62", "fqn": ["mattermost_analytics", "marts", "product", "dbt_utils_unique_combination_of_columns_fct_active_users_activity_date__server_id"], "alias": "dbt_utils_unique_combination_o_f630962be7b5f15f1fa92439a1021c44", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_f630962be7b5f15f1fa92439a1021c44", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_f630962be7b5f15f1fa92439a1021c44"}, "created_at": 1699414207.435127, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_f630962be7b5f15f1fa92439a1021c44\") }}", "language": "sql", "refs": [{"name": "fct_active_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_active_users"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_active_users", "attached_node": "model.mattermost_analytics.fct_active_users"}, "test.mattermost_analytics.unique_dim_daily_server_info_daily_server_id.53872931a3": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_server_id", "model": "{{ get_where_subquery(ref('dim_daily_server_info')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_dim_daily_server_info_daily_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_dim_daily_server_info_daily_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.unique_dim_daily_server_info_daily_server_id.53872931a3", "fqn": ["mattermost_analytics", "marts", "product", "unique_dim_daily_server_info_daily_server_id"], "alias": "unique_dim_daily_server_info_daily_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.437269, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_daily_server_info", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.dim_daily_server_info"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_server_id", "file_key_name": "models.dim_daily_server_info", "attached_node": "model.mattermost_analytics.dim_daily_server_info"}, "test.mattermost_analytics.not_null_dim_daily_server_info_daily_server_id.7c0492529e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_server_id", "model": "{{ get_where_subquery(ref('dim_daily_server_info')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_daily_server_info_daily_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_daily_server_info_daily_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_daily_server_info_daily_server_id.7c0492529e", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_daily_server_info_daily_server_id"], "alias": "not_null_dim_daily_server_info_daily_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.438308, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_daily_server_info", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_daily_server_info"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_server_id", "file_key_name": "models.dim_daily_server_info", "attached_node": "model.mattermost_analytics.dim_daily_server_info"}, "test.mattermost_analytics.not_null_dim_daily_server_info_server_id.5382822fe1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "server_id", "model": "{{ get_where_subquery(ref('dim_daily_server_info')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_daily_server_info_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_daily_server_info_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_daily_server_info_server_id.5382822fe1", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_daily_server_info_server_id"], "alias": "not_null_dim_daily_server_info_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.439185, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_daily_server_info", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_daily_server_info"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "server_id", "file_key_name": "models.dim_daily_server_info", "attached_node": "model.mattermost_analytics.dim_daily_server_info"}, "test.mattermost_analytics.not_null_dim_daily_server_info_activity_date.866fd9a9bc": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "activity_date", "model": "{{ get_where_subquery(ref('dim_daily_server_info')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_daily_server_info_activity_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_daily_server_info_activity_date.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_daily_server_info_activity_date.866fd9a9bc", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_daily_server_info_activity_date"], "alias": "not_null_dim_daily_server_info_activity_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.440047, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_daily_server_info", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_daily_server_info"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "activity_date", "file_key_name": "models.dim_daily_server_info", "attached_node": "model.mattermost_analytics.dim_daily_server_info"}, "test.mattermost_analytics.not_null_dim_daily_server_info_is_enterprise_ready.621908b517": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "is_enterprise_ready", "model": "{{ get_where_subquery(ref('dim_daily_server_info')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_daily_server_info_is_enterprise_ready", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_daily_server_info_is_enterprise_ready.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_daily_server_info_is_enterprise_ready.621908b517", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_daily_server_info_is_enterprise_ready"], "alias": "not_null_dim_daily_server_info_is_enterprise_ready", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "has_telemetry_data = true", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "has_telemetry_data = true"}, "created_at": 1699414207.4410932, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"has_telemetry_data = true\") }}", "language": "sql", "refs": [{"name": "dim_daily_server_info", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_daily_server_info"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "is_enterprise_ready", "file_key_name": "models.dim_daily_server_info", "attached_node": "model.mattermost_analytics.dim_daily_server_info"}, "test.mattermost_analytics.dbt_utils_accepted_range_dim_daily_server_info_count_reported_versions__True__1.7c958d37ce": {"test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 1, "inclusive": true, "column_name": "count_reported_versions", "model": "{{ get_where_subquery(ref('dim_daily_server_info')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_accepted_range_dim_daily_server_info_count_reported_versions__True__1", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_accepted_range_dim_d_78437f5b2085930a42b800b768389d46.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_accepted_range_dim_daily_server_info_count_reported_versions__True__1.7c958d37ce", "fqn": ["mattermost_analytics", "marts", "product", "dbt_utils_accepted_range_dim_daily_server_info_count_reported_versions__True__1"], "alias": "dbt_utils_accepted_range_dim_d_78437f5b2085930a42b800b768389d46", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_accepted_range_dim_d_78437f5b2085930a42b800b768389d46", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "has_telemetry_data or has_legacy_telemetry_data or has_diagnostics_data", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "has_telemetry_data or has_legacy_telemetry_data or has_diagnostics_data", "alias": "dbt_utils_accepted_range_dim_d_78437f5b2085930a42b800b768389d46"}, "created_at": 1699414207.442306, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(where=\"has_telemetry_data or has_legacy_telemetry_data or has_diagnostics_data\",alias=\"dbt_utils_accepted_range_dim_d_78437f5b2085930a42b800b768389d46\") }}", "language": "sql", "refs": [{"name": "dim_daily_server_info", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_daily_server_info"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "count_reported_versions", "file_key_name": "models.dim_daily_server_info", "attached_node": "model.mattermost_analytics.dim_daily_server_info"}, "test.mattermost_analytics.unique_dim_excludable_servers_server_id.b85f47447a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "server_id", "model": "{{ get_where_subquery(ref('dim_excludable_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_dim_excludable_servers_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_dim_excludable_servers_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.unique_dim_excludable_servers_server_id.b85f47447a", "fqn": ["mattermost_analytics", "marts", "product", "unique_dim_excludable_servers_server_id"], "alias": "unique_dim_excludable_servers_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.444459, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_excludable_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.dim_excludable_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "server_id", "file_key_name": "models.dim_excludable_servers", "attached_node": "model.mattermost_analytics.dim_excludable_servers"}, "test.mattermost_analytics.not_null_dim_excludable_servers_server_id.aef616d31b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "server_id", "model": "{{ get_where_subquery(ref('dim_excludable_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_excludable_servers_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_excludable_servers_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_excludable_servers_server_id.aef616d31b", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_excludable_servers_server_id"], "alias": "not_null_dim_excludable_servers_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.445318, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_excludable_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_excludable_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "server_id", "file_key_name": "models.dim_excludable_servers", "attached_node": "model.mattermost_analytics.dim_excludable_servers"}, "test.mattermost_analytics.not_null_dim_excludable_servers_reasons.999f332674": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "reasons", "model": "{{ get_where_subquery(ref('dim_excludable_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_excludable_servers_reasons", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_excludable_servers_reasons.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_excludable_servers_reasons.999f332674", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_excludable_servers_reasons"], "alias": "not_null_dim_excludable_servers_reasons", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.446316, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_excludable_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_excludable_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "reasons", "file_key_name": "models.dim_excludable_servers", "attached_node": "model.mattermost_analytics.dim_excludable_servers"}, "test.mattermost_analytics.unique_dim_version_version_id.9f2fd8dc74": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "version_id", "model": "{{ get_where_subquery(ref('dim_version')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_dim_version_version_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_dim_version_version_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.unique_dim_version_version_id.9f2fd8dc74", "fqn": ["mattermost_analytics", "marts", "product", "unique_dim_version_version_id"], "alias": "unique_dim_version_version_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4471822, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_version", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.dim_version"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_id", "file_key_name": "models.dim_version", "attached_node": "model.mattermost_analytics.dim_version"}, "test.mattermost_analytics.not_null_dim_version_version_id.9f0db9b187": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "version_id", "model": "{{ get_where_subquery(ref('dim_version')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_version_version_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_version_version_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_version_version_id.9f0db9b187", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_version_version_id"], "alias": "not_null_dim_version_version_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.44803, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_version", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_version"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_id", "file_key_name": "models.dim_version", "attached_node": "model.mattermost_analytics.dim_version"}, "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_major__True__1.5a7485617b": {"test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 1, "inclusive": true, "column_name": "version_major", "model": "{{ get_where_subquery(ref('dim_version')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_accepted_range_dim_version_version_major__True__1", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_accepted_range_dim_version_version_major__True__1.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_major__True__1.5a7485617b", "fqn": ["mattermost_analytics", "marts", "product", "dbt_utils_accepted_range_dim_version_version_major__True__1"], "alias": "dbt_utils_accepted_range_dim_version_version_major__True__1", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4488802, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_version", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_version"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_major", "file_key_name": "models.dim_version", "attached_node": "model.mattermost_analytics.dim_version"}, "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_minor__True__0.7db1746143": {"test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "inclusive": true, "column_name": "version_minor", "model": "{{ get_where_subquery(ref('dim_version')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_accepted_range_dim_version_version_minor__True__0", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_accepted_range_dim_version_version_minor__True__0.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_minor__True__0.7db1746143", "fqn": ["mattermost_analytics", "marts", "product", "dbt_utils_accepted_range_dim_version_version_minor__True__0"], "alias": "dbt_utils_accepted_range_dim_version_version_minor__True__0", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.451029, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_version", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_version"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_minor", "file_key_name": "models.dim_version", "attached_node": "model.mattermost_analytics.dim_version"}, "test.mattermost_analytics.unique_fct_active_servers_daily_server_id.f0fc363852": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_server_id", "model": "{{ get_where_subquery(ref('fct_active_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_fct_active_servers_daily_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_fct_active_servers_daily_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.unique_fct_active_servers_daily_server_id.f0fc363852", "fqn": ["mattermost_analytics", "marts", "product", "unique_fct_active_servers_daily_server_id"], "alias": "unique_fct_active_servers_daily_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4531012, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.fct_active_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_server_id", "file_key_name": "models.fct_active_servers", "attached_node": "model.mattermost_analytics.fct_active_servers"}, "test.mattermost_analytics.not_null_fct_active_servers_daily_server_id.07b3c89b0a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_server_id", "model": "{{ get_where_subquery(ref('fct_active_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_active_servers_daily_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_active_servers_daily_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_active_servers_daily_server_id.07b3c89b0a", "fqn": ["mattermost_analytics", "marts", "product", "not_null_fct_active_servers_daily_server_id"], "alias": "not_null_fct_active_servers_daily_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.45396, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_active_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_server_id", "file_key_name": "models.fct_active_servers", "attached_node": "model.mattermost_analytics.fct_active_servers"}, "test.mattermost_analytics.not_null_fct_active_servers_activity_date.15608febf0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "activity_date", "model": "{{ get_where_subquery(ref('fct_active_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_active_servers_activity_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_active_servers_activity_date.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_active_servers_activity_date.15608febf0", "fqn": ["mattermost_analytics", "marts", "product", "not_null_fct_active_servers_activity_date"], "alias": "not_null_fct_active_servers_activity_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4548092, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_active_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "activity_date", "file_key_name": "models.fct_active_servers", "attached_node": "model.mattermost_analytics.fct_active_servers"}, "test.mattermost_analytics.not_null_fct_active_servers_server_id.c2f396ab92": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "server_id", "model": "{{ get_where_subquery(ref('fct_active_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_active_servers_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_active_servers_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_active_servers_server_id.c2f396ab92", "fqn": ["mattermost_analytics", "marts", "product", "not_null_fct_active_servers_server_id"], "alias": "not_null_fct_active_servers_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.455671, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_active_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "server_id", "file_key_name": "models.fct_active_servers", "attached_node": "model.mattermost_analytics.fct_active_servers"}, "test.mattermost_analytics.not_null_fct_active_servers_version_id.966736cb49": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "version_id", "model": "{{ get_where_subquery(ref('fct_active_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_active_servers_version_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_active_servers_version_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_active_servers_version_id.966736cb49", "fqn": ["mattermost_analytics", "marts", "product", "not_null_fct_active_servers_version_id"], "alias": "not_null_fct_active_servers_version_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4565241, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_active_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_active_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_id", "file_key_name": "models.fct_active_servers", "attached_node": "model.mattermost_analytics.fct_active_servers"}, "test.mattermost_analytics.relationships_fct_active_servers_version_id__version_id__ref_dim_version_.ea048c1938": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('dim_version')", "field": "version_id", "column_name": "version_id", "model": "{{ get_where_subquery(ref('fct_active_servers')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "relationships_fct_active_servers_version_id__version_id__ref_dim_version_", "resource_type": "test", "package_name": "mattermost_analytics", "path": "relationships_fct_active_serve_958e9d6d4009b5aaa32507fd60dba0dd.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.relationships_fct_active_servers_version_id__version_id__ref_dim_version_.ea048c1938", "fqn": ["mattermost_analytics", "marts", "product", "relationships_fct_active_servers_version_id__version_id__ref_dim_version_"], "alias": "relationships_fct_active_serve_958e9d6d4009b5aaa32507fd60dba0dd", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "relationships_fct_active_serve_958e9d6d4009b5aaa32507fd60dba0dd", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_fct_active_serve_958e9d6d4009b5aaa32507fd60dba0dd"}, "created_at": 1699414207.4575858, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_fct_active_serve_958e9d6d4009b5aaa32507fd60dba0dd\") }}", "language": "sql", "refs": [{"name": "dim_version", "package": null, "version": null}, {"name": "fct_active_servers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.dim_version", "model.mattermost_analytics.fct_active_servers"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version_id", "file_key_name": "models.fct_active_servers", "attached_node": "model.mattermost_analytics.fct_active_servers"}, "test.mattermost_analytics.not_null_dim_server_info_server_id.0ed37f71b1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "server_id", "model": "{{ get_where_subquery(ref('dim_server_info')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_server_info_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_server_info_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_server_info_server_id.0ed37f71b1", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_server_info_server_id"], "alias": "not_null_dim_server_info_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.459913, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_server_info", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_server_info"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "server_id", "file_key_name": "models.dim_server_info", "attached_node": "model.mattermost_analytics.dim_server_info"}, "test.mattermost_analytics.unique_dim_daily_server_config_daily_server_id.bfbcc51ef7": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_server_id", "model": "{{ get_where_subquery(ref('dim_daily_server_config')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_dim_daily_server_config_daily_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_dim_daily_server_config_daily_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.unique_dim_daily_server_config_daily_server_id.bfbcc51ef7", "fqn": ["mattermost_analytics", "marts", "product", "unique_dim_daily_server_config_daily_server_id"], "alias": "unique_dim_daily_server_config_daily_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.46092, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_daily_server_config", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.dim_daily_server_config"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_server_id", "file_key_name": "models.dim_daily_server_config", "attached_node": "model.mattermost_analytics.dim_daily_server_config"}, "test.mattermost_analytics.not_null_dim_daily_server_config_daily_server_id.cff3a76c02": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_server_id", "model": "{{ get_where_subquery(ref('dim_daily_server_config')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_dim_daily_server_config_daily_server_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_dim_daily_server_config_daily_server_id.sql", "original_file_path": "models/marts/product/_product__models.yml", "unique_id": "test.mattermost_analytics.not_null_dim_daily_server_config_daily_server_id.cff3a76c02", "fqn": ["mattermost_analytics", "marts", "product", "not_null_dim_daily_server_config_daily_server_id"], "alias": "not_null_dim_daily_server_config_daily_server_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.461775, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_daily_server_config", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.dim_daily_server_config"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_server_id", "file_key_name": "models.dim_daily_server_config", "attached_node": "model.mattermost_analytics.dim_daily_server_config"}, "test.mattermost_analytics.not_null_fct_security_newsletter_email.8fc3783d85": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('fct_security_newsletter')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_fct_security_newsletter_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_fct_security_newsletter_email.sql", "original_file_path": "models/marts/marketing/_marketing__models.yml", "unique_id": "test.mattermost_analytics.not_null_fct_security_newsletter_email.8fc3783d85", "fqn": ["mattermost_analytics", "marts", "marketing", "not_null_fct_security_newsletter_email"], "alias": "not_null_fct_security_newsletter_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4632168, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_security_newsletter", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.fct_security_newsletter"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "email", "file_key_name": "models.fct_security_newsletter", "attached_node": "model.mattermost_analytics.fct_security_newsletter"}, "test.mattermost_analytics.dbt_utils_not_empty_string_fct_security_newsletter_email.77559cb2a1": {"test_metadata": {"name": "not_empty_string", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('fct_security_newsletter')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "dbt_utils_not_empty_string_fct_security_newsletter_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "dbt_utils_not_empty_string_fct_security_newsletter_email.sql", "original_file_path": "models/marts/marketing/_marketing__models.yml", "unique_id": "test.mattermost_analytics.dbt_utils_not_empty_string_fct_security_newsletter_email.77559cb2a1", "fqn": ["mattermost_analytics", "marts", "marketing", "dbt_utils_not_empty_string_fct_security_newsletter_email"], "alias": "dbt_utils_not_empty_string_fct_security_newsletter_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["pii"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.464088, "relation_name": null, "raw_code": "{{ dbt_utils.test_not_empty_string(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_security_newsletter", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_not_empty_string", "macro.dbt.get_where_subquery"], "nodes": ["model.mattermost_analytics.fct_security_newsletter"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "email", "file_key_name": "models.fct_security_newsletter", "attached_node": "model.mattermost_analytics.fct_security_newsletter"}, "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_event_id.728087993f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_hacktoberboard_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_hacktoberboard_prod_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_hacktoberboard_prod_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_event_id.728087993f", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_hacktoberboard_prod_aggregated_to_date_event_id"], "alias": "not_null_int_hacktoberboard_prod_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.47164, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_hacktoberboard_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_hacktoberboard_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.383c8ce206": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_hacktoberboard_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_hacktoberboard_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_hacktoberboard_pr_a54b134e8656d8db8f0f1313aaccdc27.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.383c8ce206", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_hacktoberboard_prod_aggregated_to_date_daily_event_id"], "alias": "not_null_int_hacktoberboard_pr_a54b134e8656d8db8f0f1313aaccdc27", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_int_hacktoberboard_pr_a54b134e8656d8db8f0f1313aaccdc27", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_hacktoberboard_pr_a54b134e8656d8db8f0f1313aaccdc27"}, "created_at": 1699414207.472565, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_hacktoberboard_pr_a54b134e8656d8db8f0f1313aaccdc27\") }}", "language": "sql", "refs": [{"name": "int_hacktoberboard_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_hacktoberboard_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"}, "test.mattermost_analytics.unique_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.ef5efaff8a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_hacktoberboard_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_hacktoberboard_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_hacktoberboard_prod_a27c98ebda348e05ce118641080b0f54.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.ef5efaff8a", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_hacktoberboard_prod_aggregated_to_date_daily_event_id"], "alias": "unique_int_hacktoberboard_prod_a27c98ebda348e05ce118641080b0f54", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "unique_int_hacktoberboard_prod_a27c98ebda348e05ce118641080b0f54", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "unique_int_hacktoberboard_prod_a27c98ebda348e05ce118641080b0f54"}, "created_at": 1699414207.473472, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"unique_int_hacktoberboard_prod_a27c98ebda348e05ce118641080b0f54\") }}", "language": "sql", "refs": [{"name": "int_hacktoberboard_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_hacktoberboard_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_received_at_date.939163e77d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_hacktoberboard_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_hacktoberboard_prod_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_hacktoberboard_pr_6eb671a80af48b78c04044d2a4f615e1.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_received_at_date.939163e77d", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_hacktoberboard_prod_aggregated_to_date_received_at_date"], "alias": "not_null_int_hacktoberboard_pr_6eb671a80af48b78c04044d2a4f615e1", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_int_hacktoberboard_pr_6eb671a80af48b78c04044d2a4f615e1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_hacktoberboard_pr_6eb671a80af48b78c04044d2a4f615e1"}, "created_at": 1699414207.474338, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_hacktoberboard_pr_6eb671a80af48b78c04044d2a4f615e1\") }}", "language": "sql", "refs": [{"name": "int_hacktoberboard_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_hacktoberboard_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_event_id.8e7dd8d68d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_incident_response_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_incident_response_prod_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_incident_response_prod_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_event_id.8e7dd8d68d", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_incident_response_prod_aggregated_to_date_event_id"], "alias": "not_null_int_incident_response_prod_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.475329, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_incident_response_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_incident_response_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_daily_event_id.1f6a46712c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_incident_response_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_incident_response_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_incident_response_78478c8bd29de7bfc074bfb19407a3f6.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_daily_event_id.1f6a46712c", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_incident_response_prod_aggregated_to_date_daily_event_id"], "alias": "not_null_int_incident_response_78478c8bd29de7bfc074bfb19407a3f6", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_int_incident_response_78478c8bd29de7bfc074bfb19407a3f6", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_incident_response_78478c8bd29de7bfc074bfb19407a3f6"}, "created_at": 1699414207.476185, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_incident_response_78478c8bd29de7bfc074bfb19407a3f6\") }}", "language": "sql", "refs": [{"name": "int_incident_response_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_incident_response_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"}, "test.mattermost_analytics.unique_int_incident_response_prod_aggregated_to_date_daily_event_id.28f30025a9": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_incident_response_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_incident_response_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_incident_response_p_9fb8d246736d914bf89387d090fab572.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_incident_response_prod_aggregated_to_date_daily_event_id.28f30025a9", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_incident_response_prod_aggregated_to_date_daily_event_id"], "alias": "unique_int_incident_response_p_9fb8d246736d914bf89387d090fab572", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "unique_int_incident_response_p_9fb8d246736d914bf89387d090fab572", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "unique_int_incident_response_p_9fb8d246736d914bf89387d090fab572"}, "created_at": 1699414207.4770272, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"unique_int_incident_response_p_9fb8d246736d914bf89387d090fab572\") }}", "language": "sql", "refs": [{"name": "int_incident_response_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_incident_response_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_received_at_date.07770c56d4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_incident_response_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_incident_response_prod_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_incident_response_564c2699b8787c1c4a683d59f0d82501.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_received_at_date.07770c56d4", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_incident_response_prod_aggregated_to_date_received_at_date"], "alias": "not_null_int_incident_response_564c2699b8787c1c4a683d59f0d82501", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_int_incident_response_564c2699b8787c1c4a683d59f0d82501", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_incident_response_564c2699b8787c1c4a683d59f0d82501"}, "created_at": 1699414207.477875, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_incident_response_564c2699b8787c1c4a683d59f0d82501\") }}", "language": "sql", "refs": [{"name": "int_incident_response_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_incident_response_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_event_id.d4359db268": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_mattermost_docs_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mattermost_docs_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mattermost_docs_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_event_id.d4359db268", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mattermost_docs_aggregated_to_date_event_id"], "alias": "not_null_int_mattermost_docs_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4788811, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mattermost_docs_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_mattermost_docs_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_daily_event_id.faca04c893": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mattermost_docs_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mattermost_docs_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mattermost_docs_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_daily_event_id.faca04c893", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mattermost_docs_aggregated_to_date_daily_event_id"], "alias": "not_null_int_mattermost_docs_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.479727, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mattermost_docs_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mattermost_docs_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"}, "test.mattermost_analytics.unique_int_mattermost_docs_aggregated_to_date_daily_event_id.7bb995acab": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mattermost_docs_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_mattermost_docs_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_mattermost_docs_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_mattermost_docs_aggregated_to_date_daily_event_id.7bb995acab", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_mattermost_docs_aggregated_to_date_daily_event_id"], "alias": "unique_int_mattermost_docs_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.480566, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mattermost_docs_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mattermost_docs_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_received_at_date.99ff2ff98f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_mattermost_docs_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mattermost_docs_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mattermost_docs_a_6825bf22fa62c897c3e8730855bdc5e4.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_received_at_date.99ff2ff98f", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mattermost_docs_aggregated_to_date_received_at_date"], "alias": "not_null_int_mattermost_docs_a_6825bf22fa62c897c3e8730855bdc5e4", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_int_mattermost_docs_a_6825bf22fa62c897c3e8730855bdc5e4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_mattermost_docs_a_6825bf22fa62c897c3e8730855bdc5e4"}, "created_at": 1699414207.481406, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_mattermost_docs_a_6825bf22fa62c897c3e8730855bdc5e4\") }}", "language": "sql", "refs": [{"name": "int_mattermost_docs_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_mattermost_docs_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_event_id.75b97ed0f2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_mattermostcom_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mattermostcom_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mattermostcom_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_event_id.75b97ed0f2", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mattermostcom_aggregated_to_date_event_id"], "alias": "not_null_int_mattermostcom_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4822469, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mattermostcom_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_mattermostcom_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mattermostcom_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_daily_event_id.3768d17980": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mattermostcom_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mattermostcom_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mattermostcom_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_daily_event_id.3768d17980", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mattermostcom_aggregated_to_date_daily_event_id"], "alias": "not_null_int_mattermostcom_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.483257, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mattermostcom_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mattermostcom_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mattermostcom_aggregated_to_date"}, "test.mattermost_analytics.unique_int_mattermostcom_aggregated_to_date_daily_event_id.b5d3fa7a27": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mattermostcom_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_mattermostcom_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_mattermostcom_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_mattermostcom_aggregated_to_date_daily_event_id.b5d3fa7a27", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_mattermostcom_aggregated_to_date_daily_event_id"], "alias": "unique_int_mattermostcom_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.484106, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mattermostcom_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mattermostcom_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mattermostcom_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_received_at_date.888b5fd3b1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_mattermostcom_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mattermostcom_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mattermostcom_aggregated_to_date_received_at_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_received_at_date.888b5fd3b1", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mattermostcom_aggregated_to_date_received_at_date"], "alias": "not_null_int_mattermostcom_aggregated_to_date_received_at_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.484946, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mattermostcom_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_mattermostcom_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mattermostcom_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_event_id.b76d49be23": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_mm_mobile_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_mobile_prod_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_mobile_prod_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_event_id.b76d49be23", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_mobile_prod_aggregated_to_date_event_id"], "alias": "not_null_int_mm_mobile_prod_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.485793, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_mobile_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_mm_mobile_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id.74394ae81c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mm_mobile_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id.74394ae81c", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id"], "alias": "not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4866261, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_mobile_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mm_mobile_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"}, "test.mattermost_analytics.unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id.e692839aa6": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mm_mobile_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id.e692839aa6", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id"], "alias": "unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.487621, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_mobile_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mm_mobile_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date.87047c7370": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_mm_mobile_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date.87047c7370", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date"], "alias": "not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4884639, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_mobile_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_mm_mobile_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_event_id.81b50c7fa9": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_mm_plugin_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_plugin_prod_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_plugin_prod_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_event_id.81b50c7fa9", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_plugin_prod_aggregated_to_date_event_id"], "alias": "not_null_int_mm_plugin_prod_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.489343, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_plugin_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_mm_plugin_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2453761a7c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mm_plugin_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2453761a7c", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id"], "alias": "not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.490195, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_plugin_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mm_plugin_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"}, "test.mattermost_analytics.unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2c157d82d6": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mm_plugin_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2c157d82d6", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id"], "alias": "unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4912052, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_plugin_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mm_plugin_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date.a483479092": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_mm_plugin_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date.a483479092", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date"], "alias": "not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.492043, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_plugin_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_mm_plugin_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_event_id.492c81fbba": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_mm_telemetry_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_telemetry_prod_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_telemetry_prod_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_event_id.492c81fbba", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_telemetry_prod_aggregated_to_date_event_id"], "alias": "not_null_int_mm_telemetry_prod_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4928901, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_telemetry_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_mm_telemetry_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.4939ff52af": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mm_telemetry_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_telemetry_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_telemetry_prod_9697bb7ee3e192425b890b54557b3a17.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.4939ff52af", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_telemetry_prod_aggregated_to_date_daily_event_id"], "alias": "not_null_int_mm_telemetry_prod_9697bb7ee3e192425b890b54557b3a17", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_int_mm_telemetry_prod_9697bb7ee3e192425b890b54557b3a17", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_mm_telemetry_prod_9697bb7ee3e192425b890b54557b3a17"}, "created_at": 1699414207.493734, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_mm_telemetry_prod_9697bb7ee3e192425b890b54557b3a17\") }}", "language": "sql", "refs": [{"name": "int_mm_telemetry_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mm_telemetry_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"}, "test.mattermost_analytics.unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.8b436a04f2": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mm_telemetry_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.8b436a04f2", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id"], "alias": "unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4945762, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_telemetry_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mm_telemetry_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_received_at_date.eecc5be7b1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_mm_telemetry_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_telemetry_prod_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_telemetry_prod_6ae993a44eea3b6180f5c20ff94860bc.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_received_at_date.eecc5be7b1", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_telemetry_prod_aggregated_to_date_received_at_date"], "alias": "not_null_int_mm_telemetry_prod_6ae993a44eea3b6180f5c20ff94860bc", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_int_mm_telemetry_prod_6ae993a44eea3b6180f5c20ff94860bc", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_mm_telemetry_prod_6ae993a44eea3b6180f5c20ff94860bc"}, "created_at": 1699414207.495574, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_mm_telemetry_prod_6ae993a44eea3b6180f5c20ff94860bc\") }}", "language": "sql", "refs": [{"name": "int_mm_telemetry_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_mm_telemetry_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_event_id.5b8e58d398": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_mm_telemetry_rc_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_telemetry_rc_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_telemetry_rc_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_event_id.5b8e58d398", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_telemetry_rc_aggregated_to_date_event_id"], "alias": "not_null_int_mm_telemetry_rc_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4964118, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_telemetry_rc_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_mm_telemetry_rc_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.c3069760ea": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mm_telemetry_rc_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.c3069760ea", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id"], "alias": "not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4972532, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_telemetry_rc_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mm_telemetry_rc_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"}, "test.mattermost_analytics.unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.485e5fb487": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_mm_telemetry_rc_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.485e5fb487", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id"], "alias": "unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.498089, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_mm_telemetry_rc_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_mm_telemetry_rc_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_received_at_date.e7abc97692": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_mm_telemetry_rc_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_mm_telemetry_rc_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_mm_telemetry_rc_a_02ec88990152a6f723572e15ccb50257.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_received_at_date.e7abc97692", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_mm_telemetry_rc_aggregated_to_date_received_at_date"], "alias": "not_null_int_mm_telemetry_rc_a_02ec88990152a6f723572e15ccb50257", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_int_mm_telemetry_rc_a_02ec88990152a6f723572e15ccb50257", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_mm_telemetry_rc_a_02ec88990152a6f723572e15ccb50257"}, "created_at": 1699414207.49892, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_mm_telemetry_rc_a_02ec88990152a6f723572e15ccb50257\") }}", "language": "sql", "refs": [{"name": "int_mm_telemetry_rc_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_mm_telemetry_rc_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_event_id.781d0d9b24": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_portal_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_portal_prod_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_portal_prod_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_event_id.781d0d9b24", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_portal_prod_aggregated_to_date_event_id"], "alias": "not_null_int_portal_prod_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.4999151, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_portal_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_portal_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_portal_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_daily_event_id.39de11fb92": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_portal_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_portal_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_portal_prod_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_daily_event_id.39de11fb92", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_portal_prod_aggregated_to_date_daily_event_id"], "alias": "not_null_int_portal_prod_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.500758, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_portal_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_portal_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_portal_prod_aggregated_to_date"}, "test.mattermost_analytics.unique_int_portal_prod_aggregated_to_date_daily_event_id.5b89262e22": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_portal_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_portal_prod_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_portal_prod_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_portal_prod_aggregated_to_date_daily_event_id.5b89262e22", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_portal_prod_aggregated_to_date_daily_event_id"], "alias": "unique_int_portal_prod_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.501604, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_portal_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_portal_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_portal_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_received_at_date.7ca390f308": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_portal_prod_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_portal_prod_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_portal_prod_aggregated_to_date_received_at_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_received_at_date.7ca390f308", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_portal_prod_aggregated_to_date_received_at_date"], "alias": "not_null_int_portal_prod_aggregated_to_date_received_at_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.502434, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_portal_prod_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_portal_prod_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_portal_prod_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_events_aggregated_to_date_event_id.58cd167ac0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_events_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_events_aggregated_to_date_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_events_aggregated_to_date_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_events_aggregated_to_date_event_id.58cd167ac0", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_events_aggregated_to_date_event_id"], "alias": "not_null_int_events_aggregated_to_date_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.5034711, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_events_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_events_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_events_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_events_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_events_aggregated_to_date_daily_event_id.c207ec5bb5": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_events_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_events_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_events_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_events_aggregated_to_date_daily_event_id.c207ec5bb5", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_events_aggregated_to_date_daily_event_id"], "alias": "not_null_int_events_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.504312, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_events_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_events_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_events_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_events_aggregated_to_date"}, "test.mattermost_analytics.unique_int_events_aggregated_to_date_daily_event_id.7785ba8b15": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "daily_event_id", "model": "{{ get_where_subquery(ref('int_events_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "unique_int_events_aggregated_to_date_daily_event_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "unique_int_events_aggregated_to_date_daily_event_id.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.unique_int_events_aggregated_to_date_daily_event_id.7785ba8b15", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "unique_int_events_aggregated_to_date_daily_event_id"], "alias": "unique_int_events_aggregated_to_date_daily_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.505151, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_events_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.mattermost_analytics.int_events_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "daily_event_id", "file_key_name": "models.int_events_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_events_aggregated_to_date"}, "test.mattermost_analytics.not_null_int_events_aggregated_to_date_received_at_date.e3a17f0a9d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_at_date", "model": "{{ get_where_subquery(ref('int_events_aggregated_to_date')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "not_null_int_events_aggregated_to_date_received_at_date", "resource_type": "test", "package_name": "mattermost_analytics", "path": "not_null_int_events_aggregated_to_date_received_at_date.sql", "original_file_path": "models/intermediate/data_eng/event_registry/_int_event_registry__models.yml", "unique_id": "test.mattermost_analytics.not_null_int_events_aggregated_to_date_received_at_date.e3a17f0a9d", "fqn": ["mattermost_analytics", "intermediate", "data_eng", "event_registry", "not_null_int_events_aggregated_to_date_received_at_date"], "alias": "not_null_int_events_aggregated_to_date_received_at_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.5060182, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_events_aggregated_to_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.mattermost_analytics.int_events_aggregated_to_date"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "received_at_date", "file_key_name": "models.int_events_aggregated_to_date", "attached_node": "model.mattermost_analytics.int_events_aggregated_to_date"}, "test.dbt_project_evaluator.valid_documentation_coverage.67ef7314a7": {"test_metadata": {"name": "accepted_range", "kwargs": {"min_value": "{{ var('documentation_coverage_target') }}", "column_name": "documentation_coverage_pct", "model": "{{ get_where_subquery(ref('fct_documentation_coverage')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "valid_documentation_coverage", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "valid_documentation_coverage.sql", "original_file_path": "models/marts/documentation/documentation.yml", "unique_id": "test.dbt_project_evaluator.valid_documentation_coverage.67ef7314a7", "fqn": ["dbt_project_evaluator", "marts", "documentation", "valid_documentation_coverage"], "alias": "valid_documentation_coverage", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}"}, "created_at": 1699414207.5709288, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\") }}", "language": "sql", "refs": [{"name": "fct_documentation_coverage", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_documentation_coverage"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "documentation_coverage_pct", "file_key_name": "models.fct_documentation_coverage", "attached_node": "model.dbt_project_evaluator.fct_documentation_coverage"}, "test.dbt_project_evaluator.is_empty_fct_undocumented_models_.7c2f43109c": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_undocumented_models')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_undocumented_models_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_undocumented_models_.sql", "original_file_path": "models/marts/documentation/documentation.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_undocumented_models_.7c2f43109c", "fqn": ["dbt_project_evaluator", "marts", "documentation", "is_empty_fct_undocumented_models_"], "alias": "is_empty_fct_undocumented_models_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.573544, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_undocumented_models", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_undocumented_models"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_undocumented_models", "attached_node": "model.dbt_project_evaluator.fct_undocumented_models"}, "test.dbt_project_evaluator.is_empty_fct_direct_join_to_source_.2ec67ec028": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_direct_join_to_source')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_direct_join_to_source_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_direct_join_to_source_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_direct_join_to_source_.2ec67ec028", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_direct_join_to_source_"], "alias": "is_empty_fct_direct_join_to_source_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.5791948, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_direct_join_to_source", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_direct_join_to_source"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_direct_join_to_source", "attached_node": "model.dbt_project_evaluator.fct_direct_join_to_source"}, "test.dbt_project_evaluator.is_empty_fct_duplicate_sources_.642214de31": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_duplicate_sources')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_duplicate_sources_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_duplicate_sources_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_duplicate_sources_.642214de31", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_duplicate_sources_"], "alias": "is_empty_fct_duplicate_sources_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.581217, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_duplicate_sources", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_duplicate_sources"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_duplicate_sources", "attached_node": "model.dbt_project_evaluator.fct_duplicate_sources"}, "test.dbt_project_evaluator.is_empty_fct_marts_or_intermediate_dependent_on_source_.c0abd5f00f": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_marts_or_intermediate_dependent_on_source')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_marts_or_intermediate_dependent_on_source_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_marts_or_intermediate_dependent_on_source_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_marts_or_intermediate_dependent_on_source_.c0abd5f00f", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_marts_or_intermediate_dependent_on_source_"], "alias": "is_empty_fct_marts_or_intermediate_dependent_on_source_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.5832691, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_marts_or_intermediate_dependent_on_source", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_marts_or_intermediate_dependent_on_source", "attached_node": "model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source"}, "test.dbt_project_evaluator.is_empty_fct_model_fanout_.a3ef403a95": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_model_fanout')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_model_fanout_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_model_fanout_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_model_fanout_.a3ef403a95", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_model_fanout_"], "alias": "is_empty_fct_model_fanout_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.585204, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_model_fanout", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_model_fanout"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_model_fanout", "attached_node": "model.dbt_project_evaluator.fct_model_fanout"}, "test.dbt_project_evaluator.is_empty_fct_multiple_sources_joined_.494f431817": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_multiple_sources_joined')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_multiple_sources_joined_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_multiple_sources_joined_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_multiple_sources_joined_.494f431817", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_multiple_sources_joined_"], "alias": "is_empty_fct_multiple_sources_joined_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.587274, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_multiple_sources_joined", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_multiple_sources_joined"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_multiple_sources_joined", "attached_node": "model.dbt_project_evaluator.fct_multiple_sources_joined"}, "test.dbt_project_evaluator.is_empty_fct_rejoining_of_upstream_concepts_.c6b3625c7d": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_rejoining_of_upstream_concepts')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_rejoining_of_upstream_concepts_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_rejoining_of_upstream_concepts_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_rejoining_of_upstream_concepts_.c6b3625c7d", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_rejoining_of_upstream_concepts_"], "alias": "is_empty_fct_rejoining_of_upstream_concepts_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.589298, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_rejoining_of_upstream_concepts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_rejoining_of_upstream_concepts", "attached_node": "model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts"}, "test.dbt_project_evaluator.is_empty_fct_root_models_.ccb5a490f1": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_root_models')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_root_models_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_root_models_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_root_models_.ccb5a490f1", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_root_models_"], "alias": "is_empty_fct_root_models_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.591228, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_root_models", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_root_models"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_root_models", "attached_node": "model.dbt_project_evaluator.fct_root_models"}, "test.dbt_project_evaluator.is_empty_fct_source_fanout_.45762bb722": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_source_fanout')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_source_fanout_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_source_fanout_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_source_fanout_.45762bb722", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_source_fanout_"], "alias": "is_empty_fct_source_fanout_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.59329, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_source_fanout", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_source_fanout"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_source_fanout", "attached_node": "model.dbt_project_evaluator.fct_source_fanout"}, "test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_marts_or_intermediate_.3aa45af51f": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_staging_dependent_on_marts_or_intermediate')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_staging_dependent_on_marts_or_intermediate_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_staging_dependent_on_marts_or_intermediate_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_marts_or_intermediate_.3aa45af51f", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_staging_dependent_on_marts_or_intermediate_"], "alias": "is_empty_fct_staging_dependent_on_marts_or_intermediate_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.595314, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_staging_dependent_on_marts_or_intermediate", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_staging_dependent_on_marts_or_intermediate", "attached_node": "model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate"}, "test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_staging_.bea47be3ca": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_staging_dependent_on_staging')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_staging_dependent_on_staging_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_staging_dependent_on_staging_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_staging_.bea47be3ca", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_staging_dependent_on_staging_"], "alias": "is_empty_fct_staging_dependent_on_staging_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.59725, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_staging_dependent_on_staging", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_staging_dependent_on_staging"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_staging_dependent_on_staging", "attached_node": "model.dbt_project_evaluator.fct_staging_dependent_on_staging"}, "test.dbt_project_evaluator.is_empty_fct_unused_sources_.41456b9da8": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_unused_sources')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_unused_sources_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_unused_sources_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_unused_sources_.41456b9da8", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_unused_sources_"], "alias": "is_empty_fct_unused_sources_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.5993102, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_unused_sources", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_unused_sources"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_unused_sources", "attached_node": "model.dbt_project_evaluator.fct_unused_sources"}, "test.dbt_project_evaluator.is_empty_fct_exposure_parents_materializations_.5a21592422": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_exposure_parents_materializations')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_exposure_parents_materializations_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_exposure_parents_materializations_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_exposure_parents_materializations_.5a21592422", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_exposure_parents_materializations_"], "alias": "is_empty_fct_exposure_parents_materializations_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.601322, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_exposure_parents_materializations", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_exposure_parents_materializations"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_exposure_parents_materializations", "attached_node": "model.dbt_project_evaluator.fct_exposure_parents_materializations"}, "test.dbt_project_evaluator.is_empty_fct_hard_coded_references_.9f62f70113": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_hard_coded_references')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_hard_coded_references_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_hard_coded_references_.sql", "original_file_path": "models/marts/dag/dag.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_hard_coded_references_.9f62f70113", "fqn": ["dbt_project_evaluator", "marts", "dag", "is_empty_fct_hard_coded_references_"], "alias": "is_empty_fct_hard_coded_references_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.603359, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_hard_coded_references", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_hard_coded_references"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_hard_coded_references", "attached_node": "model.dbt_project_evaluator.fct_hard_coded_references"}, "test.dbt_project_evaluator.valid_test_coverage.df03f31e09": {"test_metadata": {"name": "accepted_range", "kwargs": {"min_value": "{{ var('test_coverage_target') }}", "column_name": "test_coverage_pct", "model": "{{ get_where_subquery(ref('fct_test_coverage')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "valid_test_coverage", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "valid_test_coverage.sql", "original_file_path": "models/marts/tests/testing.yml", "unique_id": "test.dbt_project_evaluator.valid_test_coverage.df03f31e09", "fqn": ["dbt_project_evaluator", "marts", "tests", "valid_test_coverage"], "alias": "valid_test_coverage", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}"}, "created_at": 1699414207.6062799, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\") }}", "language": "sql", "refs": [{"name": "fct_test_coverage", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_test_coverage"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "test_coverage_pct", "file_key_name": "models.fct_test_coverage", "attached_node": "model.dbt_project_evaluator.fct_test_coverage"}, "test.dbt_project_evaluator.is_empty_fct_missing_primary_key_tests_.4d10d48da0": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_missing_primary_key_tests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_missing_primary_key_tests_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_missing_primary_key_tests_.sql", "original_file_path": "models/marts/tests/testing.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_missing_primary_key_tests_.4d10d48da0", "fqn": ["dbt_project_evaluator", "marts", "tests", "is_empty_fct_missing_primary_key_tests_"], "alias": "is_empty_fct_missing_primary_key_tests_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.60905, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_missing_primary_key_tests", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_missing_primary_key_tests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_missing_primary_key_tests", "attached_node": "model.dbt_project_evaluator.fct_missing_primary_key_tests"}, "test.dbt_project_evaluator.valid_chained_views_dependencies.123bb34533": {"test_metadata": {"name": "accepted_range", "kwargs": {"max_value": "{{ var('chained_views_threshold') }}", "inclusive": false, "column_name": "distance", "model": "{{ get_where_subquery(ref('fct_chained_views_dependencies')) }}"}, "namespace": "dbt_utils"}, "database": "jaffle_shop", "schema": "main", "name": "valid_chained_views_dependencies", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "valid_chained_views_dependencies.sql", "original_file_path": "models/marts/performance/performance.yml", "unique_id": "test.dbt_project_evaluator.valid_chained_views_dependencies.123bb34533", "fqn": ["dbt_project_evaluator", "marts", "performance", "valid_chained_views_dependencies"], "alias": "valid_chained_views_dependencies", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}"}, "created_at": 1699414207.611556, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\") }}", "language": "sql", "refs": [{"name": "fct_chained_views_dependencies", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_chained_views_dependencies"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "distance", "file_key_name": "models.fct_chained_views_dependencies", "attached_node": "model.dbt_project_evaluator.fct_chained_views_dependencies"}, "test.dbt_project_evaluator.is_empty_fct_model_directories_.50098500db": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_model_directories')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_model_directories_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_model_directories_.sql", "original_file_path": "models/marts/structure/structure.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_model_directories_.50098500db", "fqn": ["dbt_project_evaluator", "marts", "structure", "is_empty_fct_model_directories_"], "alias": "is_empty_fct_model_directories_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.61501, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_model_directories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_model_directories"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_model_directories", "attached_node": "model.dbt_project_evaluator.fct_model_directories"}, "test.dbt_project_evaluator.is_empty_fct_model_naming_conventions_.a79bc0fbe2": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_model_naming_conventions')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_model_naming_conventions_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_model_naming_conventions_.sql", "original_file_path": "models/marts/structure/structure.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_model_naming_conventions_.a79bc0fbe2", "fqn": ["dbt_project_evaluator", "marts", "structure", "is_empty_fct_model_naming_conventions_"], "alias": "is_empty_fct_model_naming_conventions_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.6169379, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_model_naming_conventions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_model_naming_conventions"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_model_naming_conventions", "attached_node": "model.dbt_project_evaluator.fct_model_naming_conventions"}, "test.dbt_project_evaluator.is_empty_fct_source_directories_.3ec42bc19c": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_source_directories')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_source_directories_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_source_directories_.sql", "original_file_path": "models/marts/structure/structure.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_source_directories_.3ec42bc19c", "fqn": ["dbt_project_evaluator", "marts", "structure", "is_empty_fct_source_directories_"], "alias": "is_empty_fct_source_directories_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.618984, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_source_directories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_source_directories"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_source_directories", "attached_node": "model.dbt_project_evaluator.fct_source_directories"}, "test.dbt_project_evaluator.is_empty_fct_test_directories_.1c1db93433": {"test_metadata": {"name": "is_empty", "kwargs": {"model": "{{ get_where_subquery(ref('fct_test_directories')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "is_empty_fct_test_directories_", "resource_type": "test", "package_name": "dbt_project_evaluator", "path": "is_empty_fct_test_directories_.sql", "original_file_path": "models/marts/structure/structure.yml", "unique_id": "test.dbt_project_evaluator.is_empty_fct_test_directories_.1c1db93433", "fqn": ["dbt_project_evaluator", "marts", "structure", "is_empty_fct_test_directories_"], "alias": "is_empty_fct_test_directories_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "n_records", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}", "fail_calc": "n_records"}, "created_at": 1699414207.621008, "relation_name": null, "raw_code": "{{ test_is_empty(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_test_directories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_project_evaluator.test_is_empty", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_project_evaluator.fct_test_directories"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.fct_test_directories", "attached_node": "model.dbt_project_evaluator.fct_test_directories"}, "test.mattermost_analytics.source_not_null_cws_trial_requests_id.0a38db58ed": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(source('cws', 'trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "source_not_null_cws_trial_requests_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "source_not_null_cws_trial_requests_id.sql", "original_file_path": "models/staging/cws/_cws__sources.yml", "unique_id": "test.mattermost_analytics.source_not_null_cws_trial_requests_id.0a38db58ed", "fqn": ["mattermost_analytics", "staging", "cws", "source_not_null_cws_trial_requests_id"], "alias": "source_not_null_cws_trial_requests_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["stitch"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.6437492, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["cws", "trial_requests"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["source.mattermost_analytics.cws.trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "sources.cws", "attached_node": null}, "test.mattermost_analytics.valid_bucket_names.93d440316e": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["", "ONE_TO_50", "FIFTY_TO_100", "ONE_HUNDRED_TO_500", "FIVE_HUNDRED_TO_1000", "ONE_THOUSAND_TO_2500", "TWO_THOUSAND_FIVE_HUNDRED_AND_UP"], "column_name": "companysize", "model": "{{ get_where_subquery(source('cws', 'trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "valid_bucket_names", "resource_type": "test", "package_name": "mattermost_analytics", "path": "valid_bucket_names.sql", "original_file_path": "models/staging/cws/_cws__sources.yml", "unique_id": "test.mattermost_analytics.valid_bucket_names.93d440316e", "fqn": ["mattermost_analytics", "staging", "cws", "valid_bucket_names"], "alias": "valid_bucket_names", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["stitch"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.644711, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["cws", "trial_requests"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["source.mattermost_analytics.cws.trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "companysize", "file_key_name": "sources.cws", "attached_node": null}, "test.mattermost_analytics.source_not_null_cws_trial_requests_email.45a2e4f948": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(source('cws', 'trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "source_not_null_cws_trial_requests_email", "resource_type": "test", "package_name": "mattermost_analytics", "path": "source_not_null_cws_trial_requests_email.sql", "original_file_path": "models/staging/cws/_cws__sources.yml", "unique_id": "test.mattermost_analytics.source_not_null_cws_trial_requests_email.45a2e4f948", "fqn": ["mattermost_analytics", "staging", "cws", "source_not_null_cws_trial_requests_email"], "alias": "source_not_null_cws_trial_requests_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["stitch"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.647976, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["cws", "trial_requests"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["source.mattermost_analytics.cws.trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "email", "file_key_name": "sources.cws", "attached_node": null}, "test.mattermost_analytics.source_not_null_cws_trial_requests_serverid.2e0a97f5b3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "serverid", "model": "{{ get_where_subquery(source('cws', 'trial_requests')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "source_not_null_cws_trial_requests_serverid", "resource_type": "test", "package_name": "mattermost_analytics", "path": "source_not_null_cws_trial_requests_serverid.sql", "original_file_path": "models/staging/cws/_cws__sources.yml", "unique_id": "test.mattermost_analytics.source_not_null_cws_trial_requests_serverid.2e0a97f5b3", "fqn": ["mattermost_analytics", "staging", "cws", "source_not_null_cws_trial_requests_serverid"], "alias": "source_not_null_cws_trial_requests_serverid", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["stitch"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.64886, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["cws", "trial_requests"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["source.mattermost_analytics.cws.trial_requests"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "serverid", "file_key_name": "sources.cws", "attached_node": null}, "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_id.8b751dff4c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(source('mattermost_jira', 'issue_comments')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "source_not_null_mattermost_jira_issue_comments_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "source_not_null_mattermost_jira_issue_comments_id.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_id.8b751dff4c", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "source_not_null_mattermost_jira_issue_comments_id"], "alias": "source_not_null_mattermost_jira_issue_comments_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["stitch"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.664939, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["mattermost_jira", "issue_comments"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["source.mattermost_analytics.mattermost_jira.issue_comments"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "sources.mattermost_jira", "attached_node": null}, "test.mattermost_analytics.source_unique_mattermost_jira_issue_comments_id.40eec45a3e": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(source('mattermost_jira', 'issue_comments')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "source_unique_mattermost_jira_issue_comments_id", "resource_type": "test", "package_name": "mattermost_analytics", "path": "source_unique_mattermost_jira_issue_comments_id.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "test.mattermost_analytics.source_unique_mattermost_jira_issue_comments_id.40eec45a3e", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "source_unique_mattermost_jira_issue_comments_id"], "alias": "source_unique_mattermost_jira_issue_comments_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["stitch"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.665834, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["mattermost_jira", "issue_comments"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["source.mattermost_analytics.mattermost_jira.issue_comments"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "sources.mattermost_jira", "attached_node": null}, "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_issueid.6741fae44f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "issueid", "model": "{{ get_where_subquery(source('mattermost_jira', 'issue_comments')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "source_not_null_mattermost_jira_issue_comments_issueid", "resource_type": "test", "package_name": "mattermost_analytics", "path": "source_not_null_mattermost_jira_issue_comments_issueid.sql", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_issueid.6741fae44f", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "source_not_null_mattermost_jira_issue_comments_issueid"], "alias": "source_not_null_mattermost_jira_issue_comments_issueid", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["stitch"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.666712, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["mattermost_jira", "issue_comments"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["source.mattermost_analytics.mattermost_jira.issue_comments"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "issueid", "file_key_name": "sources.mattermost_jira", "attached_node": null}, "test.mattermost_analytics.source_unique_mattermost_version_release_dates_version.97e96eeef4": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "version", "model": "{{ get_where_subquery(source('mattermost', 'version_release_dates')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "source_unique_mattermost_version_release_dates_version", "resource_type": "test", "package_name": "mattermost_analytics", "path": "source_unique_mattermost_version_release_dates_version.sql", "original_file_path": "models/staging/mattermost/_mattermost__sources.yml", "unique_id": "test.mattermost_analytics.source_unique_mattermost_version_release_dates_version.97e96eeef4", "fqn": ["mattermost_analytics", "staging", "mattermost", "source_unique_mattermost_version_release_dates_version"], "alias": "source_unique_mattermost_version_release_dates_version", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["snowflake-dbt"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.676049, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["mattermost", "version_release_dates"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["source.mattermost_analytics.mattermost.version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version", "file_key_name": "sources.mattermost", "attached_node": null}, "test.mattermost_analytics.source_not_null_mattermost_version_release_dates_version.fb90ab39c4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "version", "model": "{{ get_where_subquery(source('mattermost', 'version_release_dates')) }}"}, "namespace": null}, "database": "jaffle_shop", "schema": "main", "name": "source_not_null_mattermost_version_release_dates_version", "resource_type": "test", "package_name": "mattermost_analytics", "path": "source_not_null_mattermost_version_release_dates_version.sql", "original_file_path": "models/staging/mattermost/_mattermost__sources.yml", "unique_id": "test.mattermost_analytics.source_not_null_mattermost_version_release_dates_version.fb90ab39c4", "fqn": ["mattermost_analytics", "staging", "mattermost", "source_not_null_mattermost_version_release_dates_version"], "alias": "source_not_null_mattermost_version_release_dates_version", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": ["snowflake-dbt"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1699414207.676956, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [], "sources": [["mattermost", "version_release_dates"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["source.mattermost_analytics.mattermost.version_release_dates"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "version", "file_key_name": "sources.mattermost", "attached_node": null}}, "sources": {"source.mattermost_analytics.mm_telemetry_rc.tracks": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.tracks", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "tracks"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"tracks\"", "created_at": 1699414207.635307}, "source.mattermost_analytics.mm_telemetry_rc.event": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "event", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.event", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "event"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "event", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"event\"", "created_at": 1699414207.6354141}, "source.mattermost_analytics.mm_telemetry_rc.pages": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "pages", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.pages", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "pages"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "pages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"pages\"", "created_at": 1699414207.635493}, "source.mattermost_analytics.mm_telemetry_rc.identifies": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "identifies", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.identifies", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "identifies"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"identifies\"", "created_at": 1699414207.635566}, "source.mattermost_analytics.mm_telemetry_rc.config_saml": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_saml", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_saml", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_saml"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_saml", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_saml\"", "created_at": 1699414207.635637}, "source.mattermost_analytics.mm_telemetry_rc.config_localization": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_localization", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_localization", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_localization"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_localization", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_localization\"", "created_at": 1699414207.635805}, "source.mattermost_analytics.mm_telemetry_rc.config_cluster": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_cluster", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_cluster", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_cluster"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_cluster", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_cluster\"", "created_at": 1699414207.635881}, "source.mattermost_analytics.mm_telemetry_rc.config_compliance": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_compliance", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_compliance", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_compliance"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_compliance", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_compliance\"", "created_at": 1699414207.635954}, "source.mattermost_analytics.mm_telemetry_rc.config_analytics": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_analytics", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_analytics", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_analytics"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_analytics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_analytics\"", "created_at": 1699414207.63602}, "source.mattermost_analytics.mm_telemetry_rc.config_ldap": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_ldap", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_ldap", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_ldap"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_ldap", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_ldap\"", "created_at": 1699414207.636087}, "source.mattermost_analytics.mm_telemetry_rc.config_metrics": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_metrics", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_metrics", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_metrics"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_metrics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_metrics\"", "created_at": 1699414207.636157}, "source.mattermost_analytics.mm_telemetry_rc.config_elasticsearch": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_elasticsearch", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_elasticsearch", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_elasticsearch"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_elasticsearch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_elasticsearch\"", "created_at": 1699414207.636224}, "source.mattermost_analytics.mm_telemetry_rc.config_nativeapp": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_nativeapp", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_nativeapp", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_nativeapp"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_nativeapp", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_nativeapp\"", "created_at": 1699414207.636292}, "source.mattermost_analytics.mm_telemetry_rc.config_announcement": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_announcement", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_announcement", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_announcement"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_announcement", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_announcement\"", "created_at": 1699414207.636359}, "source.mattermost_analytics.mm_telemetry_rc.config_privacy": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_privacy", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_privacy", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_privacy"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_privacy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_privacy\"", "created_at": 1699414207.636425}, "source.mattermost_analytics.mm_telemetry_rc.config_experimental": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_experimental", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_experimental", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_experimental"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_experimental", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_experimental\"", "created_at": 1699414207.636491}, "source.mattermost_analytics.mm_telemetry_rc.config_support": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_support", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_support", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_support"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_support", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_support\"", "created_at": 1699414207.63656}, "source.mattermost_analytics.mm_telemetry_rc.config_theme": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_theme", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_theme", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_theme"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_theme", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_theme\"", "created_at": 1699414207.636628}, "source.mattermost_analytics.mm_telemetry_rc.config_oauth": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_oauth", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_oauth", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_oauth"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_oauth", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_oauth\"", "created_at": 1699414207.6366951}, "source.mattermost_analytics.mm_telemetry_rc.config_file": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_file", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_file", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_file"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_file", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_file\"", "created_at": 1699414207.63676}, "source.mattermost_analytics.mm_telemetry_rc.activity": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "activity", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.activity", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "activity"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "activity", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"activity\"", "created_at": 1699414207.636826}, "source.mattermost_analytics.mm_telemetry_rc.config_audit": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_audit", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_audit", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_audit"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_audit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_audit\"", "created_at": 1699414207.6368918}, "source.mattermost_analytics.mm_telemetry_rc.config_email": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_email", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_email", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_email"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_email", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_email\"", "created_at": 1699414207.636957}, "source.mattermost_analytics.mm_telemetry_rc.config_notifications_log": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_notifications_log", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_notifications_log", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_notifications_log"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_notifications_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_notifications_log\"", "created_at": 1699414207.637023}, "source.mattermost_analytics.mm_telemetry_rc.config_rate": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_rate", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_rate", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_rate"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_rate", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_rate\"", "created_at": 1699414207.63709}, "source.mattermost_analytics.mm_telemetry_rc.config_password": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_password", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_password", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_password"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_password", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_password\"", "created_at": 1699414207.637158}, "source.mattermost_analytics.mm_telemetry_rc.config_team": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_team", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_team", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_team"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_team", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_team\"", "created_at": 1699414207.6372218}, "source.mattermost_analytics.mm_telemetry_rc.config_log": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_log", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_log", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_log"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_log\"", "created_at": 1699414207.6372879}, "source.mattermost_analytics.mm_telemetry_rc.config_service": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_service", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_service", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_service"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_service", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_service\"", "created_at": 1699414207.637353}, "source.mattermost_analytics.mm_telemetry_rc.config_client_requirements": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_client_requirements", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_client_requirements", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_client_requirements"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_client_requirements", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_client_requirements\"", "created_at": 1699414207.637419}, "source.mattermost_analytics.mm_telemetry_rc.config_sql": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_sql", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_sql", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_sql"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_sql", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_sql\"", "created_at": 1699414207.637486}, "source.mattermost_analytics.mm_telemetry_rc.config_data_retention": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_data_retention", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_data_retention", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_data_retention"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_data_retention", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_data_retention\"", "created_at": 1699414207.637551}, "source.mattermost_analytics.mm_telemetry_rc.config_guest_accounts": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_guest_accounts", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_guest_accounts", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_guest_accounts"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_guest_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_guest_accounts\"", "created_at": 1699414207.6376162}, "source.mattermost_analytics.mm_telemetry_rc.config_message_export": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_message_export", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_message_export", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_message_export"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_message_export", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_message_export\"", "created_at": 1699414207.637683}, "source.mattermost_analytics.mm_telemetry_rc.config_plugin": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_plugin", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_plugin", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_plugin"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_plugin", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_plugin\"", "created_at": 1699414207.63775}, "source.mattermost_analytics.mm_telemetry_rc.config_display": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_display", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_display", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_display"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_display", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_display\"", "created_at": 1699414207.637816}, "source.mattermost_analytics.mm_telemetry_rc.config_image_proxy": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_image_proxy", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_image_proxy", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_image_proxy"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_image_proxy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_image_proxy\"", "created_at": 1699414207.63788}, "source.mattermost_analytics.mm_telemetry_rc.server": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "server", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.server", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "server"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "server", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"server\"", "created_at": 1699414207.6379461}, "source.mattermost_analytics.mm_telemetry_rc.permissions_general": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "permissions_general", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.permissions_general", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "permissions_general"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "permissions_general", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"permissions_general\"", "created_at": 1699414207.638009}, "source.mattermost_analytics.mm_telemetry_rc.config_bleve": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_bleve", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_bleve", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_bleve"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_bleve", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_bleve\"", "created_at": 1699414207.6380749}, "source.mattermost_analytics.mm_telemetry_rc.permissions_system_scheme": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "permissions_system_scheme", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.permissions_system_scheme", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "permissions_system_scheme"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "permissions_system_scheme", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"permissions_system_scheme\"", "created_at": 1699414207.63814}, "source.mattermost_analytics.mm_telemetry_rc.elasticsearch": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "elasticsearch", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.elasticsearch", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "elasticsearch"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "elasticsearch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"elasticsearch\"", "created_at": 1699414207.638206}, "source.mattermost_analytics.mm_telemetry_rc._groups": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "_groups", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc._groups", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "_groups"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "_groups", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"_groups\"", "created_at": 1699414207.638277}, "source.mattermost_analytics.mm_telemetry_rc.channel_moderation": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "channel_moderation", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.channel_moderation", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "channel_moderation"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "channel_moderation", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"channel_moderation\"", "created_at": 1699414207.638342}, "source.mattermost_analytics.mm_telemetry_rc.config_export": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_export", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_export", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_export"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_export", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_export\"", "created_at": 1699414207.63841}, "source.mattermost_analytics.mm_telemetry_rc.config_feature_flags": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "config_feature_flags", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.config_feature_flags", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "config_feature_flags"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_feature_flags", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"config_feature_flags\"", "created_at": 1699414207.638478}, "source.mattermost_analytics.mm_telemetry_rc.plugins": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "plugins", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.plugins", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "plugins"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "plugins", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"plugins\"", "created_at": 1699414207.6385431}, "source.mattermost_analytics.mm_telemetry_rc.license": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "license", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.license", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "license"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "license", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"license\"", "created_at": 1699414207.638608}, "source.mattermost_analytics.mm_telemetry_rc.products": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "products", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.products", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "products"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"products\"", "created_at": 1699414207.6386719}, "source.mattermost_analytics.mm_telemetry_rc.users": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.users", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "users"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"users\"", "created_at": 1699414207.638755}, "source.mattermost_analytics.mm_telemetry_rc.warn_metrics": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "warn_metrics", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.warn_metrics", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "warn_metrics"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "warn_metrics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"warn_metrics\"", "created_at": 1699414207.6388218}, "source.mattermost_analytics.mm_telemetry_rc.permissions_team_schemes": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "permissions_team_schemes", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.permissions_team_schemes", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "permissions_team_schemes"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "permissions_team_schemes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"permissions_team_schemes\"", "created_at": 1699414207.638889}, "source.mattermost_analytics.mm_telemetry_rc.welcome_message_sent": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "welcome_message_sent", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.welcome_message_sent", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "welcome_message_sent"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "welcome_message_sent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"welcome_message_sent\"", "created_at": 1699414207.638953}, "source.mattermost_analytics.mm_telemetry_rc.track_invite_email_resend": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "track_invite_email_resend", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.track_invite_email_resend", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "track_invite_email_resend"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "track_invite_email_resend", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"track_invite_email_resend\"", "created_at": 1699414207.6390212}, "source.mattermost_analytics.mm_telemetry_rc.inactive_server": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "inactive_server", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.inactive_server", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "inactive_server"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "inactive_server", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"inactive_server\"", "created_at": 1699414207.6390872}, "source.mattermost_analytics.mm_telemetry_rc.inactive_server_emails_sent": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "inactive_server_emails_sent", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.inactive_server_emails_sent", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "inactive_server_emails_sent"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "inactive_server_emails_sent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"inactive_server_emails_sent\"", "created_at": 1699414207.639151}, "source.mattermost_analytics.mm_telemetry_rc.rudder_discards": {"database": "RAW", "schema": "mm_telemetry_rc", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "original_file_path": "models/staging/mm_telemetry_rc/_mm_telemetry_rc__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_rc.rudder_discards", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_rc", "mm_telemetry_rc", "rudder_discards"], "source_name": "mm_telemetry_rc", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains RC data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_rc\".\"rudder_discards\"", "created_at": 1699414207.639215}, "source.mattermost_analytics.cws._sdc_rejected": {"database": "RAW", "schema": "cws_prod", "name": "_sdc_rejected", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/cws/_cws__sources.yml", "original_file_path": "models/staging/cws/_cws__sources.yml", "unique_id": "source.mattermost_analytics.cws._sdc_rejected", "fqn": ["mattermost_analytics", "staging", "cws", "cws", "_sdc_rejected"], "source_name": "cws", "source_description": "Customer Web Server database replica.\n", "loader": "Stitch", "identifier": "_sdc_rejected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Rejected columns from stitch syncs", "columns": {"record": {"name": "record", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "table_name": {"name": "table_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_rejected_at": {"name": "_sdc_rejected_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"cws_prod\".\"_sdc_rejected\"", "created_at": 1699414207.6392908}, "source.mattermost_analytics.cws.marketing": {"database": "RAW", "schema": "cws_prod", "name": "marketing", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/cws/_cws__sources.yml", "original_file_path": "models/staging/cws/_cws__sources.yml", "unique_id": "source.mattermost_analytics.cws.marketing", "fqn": ["mattermost_analytics", "staging", "cws", "cws", "marketing"], "source_name": "cws", "source_description": "Customer Web Server database replica.\n", "loader": "Stitch", "identifier": "marketing", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"createdat": {"name": "createdat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serverid": {"name": "serverid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscribedcontent": {"name": "subscribedcontent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updatedat": {"name": "updatedat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"cws_prod\".\"marketing\"", "created_at": 1699414207.639373}, "source.mattermost_analytics.cws.trial_requests": {"database": "RAW", "schema": "cws_prod", "name": "trial_requests", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/cws/_cws__sources.yml", "original_file_path": "models/staging/cws/_cws__sources.yml", "unique_id": "source.mattermost_analytics.cws.trial_requests", "fqn": ["mattermost_analytics", "staging", "cws", "cws", "trial_requests"], "source_name": "cws", "source_description": "Customer Web Server database replica.\n", "loader": "Stitch", "identifier": "trial_requests", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "Unique identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "companycountry": {"name": "companycountry", "description": "The name of the company's country", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "companyname": {"name": "companyname", "description": "The company's name.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "companysize": {"name": "companysize", "description": "The company's size bucket", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactemail": {"name": "contactemail", "description": "Email address provided explicitly by the user when requesting the license.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactfirstname": {"name": "contactfirstname", "description": "The first name of the user.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactlastname": {"name": "contactlastname", "description": "The last name of the user.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "Email address of the mattermost user requesting the trial.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "Trial end date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "The contact's full name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receiveemailsaccepted": {"name": "receiveemailsaccepted", "description": "Whether the user accepted to receive emails or not.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serverid": {"name": "serverid", "description": "The server's id.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sitename": {"name": "sitename", "description": "The name of the site.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "siteurl": {"name": "siteurl", "description": "The URL of the installation.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "Trial start date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "termsaccepted": {"name": "termsaccepted", "description": "Whether the user accepted the terms or not.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "users": {"name": "users", "description": "Number of users", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "__sdc_primary_key": {"name": "__sdc_primary_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"cws_prod\".\"trial_requests\"", "created_at": 1699414207.6494222}, "source.mattermost_analytics.mm_mobile_prod.action_channels_add_member": {"database": "RAW", "schema": "mm_mobile_prod", "name": "action_channels_add_member", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.action_channels_add_member", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "action_channels_add_member"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "action_channels_add_member", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"action_channels_add_member\"", "created_at": 1699414207.649512}, "source.mattermost_analytics.mm_mobile_prod.action_channels_favorite": {"database": "RAW", "schema": "mm_mobile_prod", "name": "action_channels_favorite", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.action_channels_favorite", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "action_channels_favorite"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "action_channels_favorite", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"action_channels_favorite\"", "created_at": 1699414207.649586}, "source.mattermost_analytics.mm_mobile_prod.action_channels_join": {"database": "RAW", "schema": "mm_mobile_prod", "name": "action_channels_join", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.action_channels_join", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "action_channels_join"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "action_channels_join", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"action_channels_join\"", "created_at": 1699414207.649655}, "source.mattermost_analytics.mm_mobile_prod.action_channels_leave": {"database": "RAW", "schema": "mm_mobile_prod", "name": "action_channels_leave", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.action_channels_leave", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "action_channels_leave"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "action_channels_leave", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"action_channels_leave\"", "created_at": 1699414207.649726}, "source.mattermost_analytics.mm_mobile_prod.action_channels_remove_member": {"database": "RAW", "schema": "mm_mobile_prod", "name": "action_channels_remove_member", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.action_channels_remove_member", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "action_channels_remove_member"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "action_channels_remove_member", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"action_channels_remove_member\"", "created_at": 1699414207.649792}, "source.mattermost_analytics.mm_mobile_prod.action_channels_unfavorite": {"database": "RAW", "schema": "mm_mobile_prod", "name": "action_channels_unfavorite", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.action_channels_unfavorite", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "action_channels_unfavorite"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "action_channels_unfavorite", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"action_channels_unfavorite\"", "created_at": 1699414207.6498601}, "source.mattermost_analytics.mm_mobile_prod.action_posts_flag": {"database": "RAW", "schema": "mm_mobile_prod", "name": "action_posts_flag", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.action_posts_flag", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "action_posts_flag"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "action_posts_flag", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"action_posts_flag\"", "created_at": 1699414207.649926}, "source.mattermost_analytics.mm_mobile_prod.action_posts_unflag": {"database": "RAW", "schema": "mm_mobile_prod", "name": "action_posts_unflag", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.action_posts_unflag", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "action_posts_unflag"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "action_posts_unflag", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"action_posts_unflag\"", "created_at": 1699414207.649992}, "source.mattermost_analytics.mm_mobile_prod.api_channel_get": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channel_get", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channel_get", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channel_get"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channel_get", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channel_get\"", "created_at": 1699414207.650059}, "source.mattermost_analytics.mm_mobile_prod.api_channel_get_by_name_and_team_name": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channel_get_by_name_and_team_name", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channel_get_by_name_and_team_name", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channel_get_by_name_and_team_name"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channel_get_by_name_and_team_name", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channel_get_by_name_and_team_name\"", "created_at": 1699414207.650124}, "source.mattermost_analytics.mm_mobile_prod.api_channels_add_member": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_add_member", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_add_member", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_add_member"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_add_member", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_add_member\"", "created_at": 1699414207.65019}, "source.mattermost_analytics.mm_mobile_prod.api_channels_convert_to_private": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_convert_to_private", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_convert_to_private", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_convert_to_private"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_convert_to_private", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_convert_to_private\"", "created_at": 1699414207.650261}, "source.mattermost_analytics.mm_mobile_prod.api_channels_create": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_create", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_create", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_create"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_create", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_create\"", "created_at": 1699414207.650326}, "source.mattermost_analytics.mm_mobile_prod.api_channels_create_direct": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_create_direct", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_create_direct", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_create_direct"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_create_direct", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_create_direct\"", "created_at": 1699414207.650393}, "source.mattermost_analytics.mm_mobile_prod.api_channels_create_group": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_create_group", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_create_group", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_create_group"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_create_group", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_create_group\"", "created_at": 1699414207.650462}, "source.mattermost_analytics.mm_mobile_prod.api_channels_delete": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_delete", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_delete", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_delete"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_delete", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_delete\"", "created_at": 1699414207.650527}, "source.mattermost_analytics.mm_mobile_prod.api_channels_patch": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_patch", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_patch", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_patch"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_patch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_patch\"", "created_at": 1699414207.650593}, "source.mattermost_analytics.mm_mobile_prod.api_channels_remove_member": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_remove_member", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_remove_member", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_remove_member"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_remove_member", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_remove_member\"", "created_at": 1699414207.6506581}, "source.mattermost_analytics.mm_mobile_prod.api_channels_unarchive": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_unarchive", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_unarchive", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_unarchive"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_unarchive", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_unarchive\"", "created_at": 1699414207.650833}, "source.mattermost_analytics.mm_mobile_prod.api_channels_update_privacy": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_channels_update_privacy", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_channels_update_privacy", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_channels_update_privacy"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_channels_update_privacy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_channels_update_privacy\"", "created_at": 1699414207.6509051}, "source.mattermost_analytics.mm_mobile_prod.api_files_upload": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_files_upload", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_files_upload", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_files_upload"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_files_upload", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_files_upload\"", "created_at": 1699414207.650974}, "source.mattermost_analytics.mm_mobile_prod.api_get_known_users": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_get_known_users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_get_known_users", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_get_known_users"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_get_known_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_get_known_users\"", "created_at": 1699414207.651041}, "source.mattermost_analytics.mm_mobile_prod.api_integrations_used": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_integrations_used", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_integrations_used", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_integrations_used"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_integrations_used", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_integrations_used\"", "created_at": 1699414207.651106}, "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_button_clicked": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_interactive_messages_button_clicked", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_button_clicked", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_interactive_messages_button_clicked"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_interactive_messages_button_clicked", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_interactive_messages_button_clicked\"", "created_at": 1699414207.6511738}, "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_dialog_submitted": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_interactive_messages_dialog_submitted", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_dialog_submitted", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_interactive_messages_dialog_submitted"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_interactive_messages_dialog_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_interactive_messages_dialog_submitted\"", "created_at": 1699414207.651239}, "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_menu_selected": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_interactive_messages_menu_selected", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_menu_selected", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_interactive_messages_menu_selected"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_interactive_messages_menu_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_interactive_messages_menu_selected\"", "created_at": 1699414207.651308}, "source.mattermost_analytics.mm_mobile_prod.api_post_set_unread_post": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_post_set_unread_post", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_post_set_unread_post", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_post_set_unread_post"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_post_set_unread_post", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_post_set_unread_post\"", "created_at": 1699414207.651374}, "source.mattermost_analytics.mm_mobile_prod.api_posts_create": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_create", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_create", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_create"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_create", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_create\"", "created_at": 1699414207.6514409}, "source.mattermost_analytics.mm_mobile_prod.api_posts_delete": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_delete", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_delete", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_delete"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_delete", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_delete\"", "created_at": 1699414207.651505}, "source.mattermost_analytics.mm_mobile_prod.api_posts_get_after": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_get_after", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_get_after", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_get_after"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_get_after", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_get_after\"", "created_at": 1699414207.651571}, "source.mattermost_analytics.mm_mobile_prod.api_posts_get_before": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_get_before", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_get_before", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_get_before"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_get_before", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_get_before\"", "created_at": 1699414207.651638}, "source.mattermost_analytics.mm_mobile_prod.api_posts_get_flagged": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_get_flagged", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_get_flagged", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_get_flagged"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_get_flagged", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_get_flagged\"", "created_at": 1699414207.651705}, "source.mattermost_analytics.mm_mobile_prod.api_posts_get_pinned": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_get_pinned", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_get_pinned", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_get_pinned"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_get_pinned", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_get_pinned\"", "created_at": 1699414207.6517692}, "source.mattermost_analytics.mm_mobile_prod.api_posts_patch": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_patch", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_patch", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_patch"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_patch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_patch\"", "created_at": 1699414207.651834}, "source.mattermost_analytics.mm_mobile_prod.api_posts_pin": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_pin", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_pin", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_pin"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_pin", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_pin\"", "created_at": 1699414207.6518981}, "source.mattermost_analytics.mm_mobile_prod.api_posts_replied": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_replied", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_replied", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_replied"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_replied", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_replied\"", "created_at": 1699414207.651963}, "source.mattermost_analytics.mm_mobile_prod.api_posts_search": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_search", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_search", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_search"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_search", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_search\"", "created_at": 1699414207.6520262}, "source.mattermost_analytics.mm_mobile_prod.api_posts_search_mention": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_search_mention", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_search_mention", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_search_mention"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_search_mention", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_search_mention\"", "created_at": 1699414207.652093}, "source.mattermost_analytics.mm_mobile_prod.api_posts_unpin": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_posts_unpin", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_posts_unpin", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_posts_unpin"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_posts_unpin", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_posts_unpin\"", "created_at": 1699414207.65216}, "source.mattermost_analytics.mm_mobile_prod.api_profiles_get": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_profiles_get", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_profiles_get", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_profiles_get"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_profiles_get", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_profiles_get\"", "created_at": 1699414207.652225}, "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_by_ids": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_profiles_get_by_ids", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_by_ids", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_profiles_get_by_ids"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_profiles_get_by_ids", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_profiles_get_by_ids\"", "created_at": 1699414207.65229}, "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_by_usernames": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_profiles_get_by_usernames", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_by_usernames", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_profiles_get_by_usernames"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_profiles_get_by_usernames", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_profiles_get_by_usernames\"", "created_at": 1699414207.652355}, "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_in_channel": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_profiles_get_in_channel", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_in_channel", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_profiles_get_in_channel"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_profiles_get_in_channel", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_profiles_get_in_channel\"", "created_at": 1699414207.652419}, "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_in_team": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_profiles_get_in_team", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_in_team", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_profiles_get_in_team"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_profiles_get_in_team", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_profiles_get_in_team\"", "created_at": 1699414207.6524858}, "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_not_in_channel": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_profiles_get_not_in_channel", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_not_in_channel", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_profiles_get_not_in_channel"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_profiles_get_not_in_channel", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_profiles_get_not_in_channel\"", "created_at": 1699414207.652552}, "source.mattermost_analytics.mm_mobile_prod.api_reactions_delete": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_reactions_delete", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_reactions_delete", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_reactions_delete"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_reactions_delete", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_reactions_delete\"", "created_at": 1699414207.6526232}, "source.mattermost_analytics.mm_mobile_prod.api_reactions_save": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_reactions_save", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_reactions_save", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_reactions_save"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_reactions_save", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_reactions_save\"", "created_at": 1699414207.65269}, "source.mattermost_analytics.mm_mobile_prod.api_search_users": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_search_users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_search_users", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_search_users"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_search_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_search_users\"", "created_at": 1699414207.652756}, "source.mattermost_analytics.mm_mobile_prod.api_teams_get_team_by_name": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_teams_get_team_by_name", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_teams_get_team_by_name", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_teams_get_team_by_name"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_teams_get_team_by_name", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_teams_get_team_by_name\"", "created_at": 1699414207.652821}, "source.mattermost_analytics.mm_mobile_prod.api_teams_invite_members": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_teams_invite_members", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_teams_invite_members", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_teams_invite_members"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_teams_invite_members", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_teams_invite_members\"", "created_at": 1699414207.652886}, "source.mattermost_analytics.mm_mobile_prod.api_teams_remove_members": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_teams_remove_members", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_teams_remove_members", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_teams_remove_members"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_teams_remove_members", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_teams_remove_members\"", "created_at": 1699414207.65295}, "source.mattermost_analytics.mm_mobile_prod.api_users_login": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_users_login", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_users_login", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_users_login"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_users_login", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_users_login\"", "created_at": 1699414207.653017}, "source.mattermost_analytics.mm_mobile_prod.api_users_logout": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_users_logout", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_users_logout", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_users_logout"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_users_logout", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_users_logout\"", "created_at": 1699414207.653085}, "source.mattermost_analytics.mm_mobile_prod.api_users_send_password_reset": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_users_send_password_reset", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_users_send_password_reset", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_users_send_password_reset"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_users_send_password_reset", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_users_send_password_reset\"", "created_at": 1699414207.653153}, "source.mattermost_analytics.mm_mobile_prod.api_users_set_default_profile_picture": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_users_set_default_profile_picture", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_users_set_default_profile_picture", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_users_set_default_profile_picture"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_users_set_default_profile_picture", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_users_set_default_profile_picture\"", "created_at": 1699414207.653217}, "source.mattermost_analytics.mm_mobile_prod.api_users_update_channel_notifications": {"database": "RAW", "schema": "mm_mobile_prod", "name": "api_users_update_channel_notifications", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.api_users_update_channel_notifications", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "api_users_update_channel_notifications"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "api_users_update_channel_notifications", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"api_users_update_channel_notifications\"", "created_at": 1699414207.653281}, "source.mattermost_analytics.mm_mobile_prod.application_backgrounded": {"database": "RAW", "schema": "mm_mobile_prod", "name": "application_backgrounded", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.application_backgrounded", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "application_backgrounded"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "application_backgrounded", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"application_backgrounded\"", "created_at": 1699414207.6533492}, "source.mattermost_analytics.mm_mobile_prod.application_installed": {"database": "RAW", "schema": "mm_mobile_prod", "name": "application_installed", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.application_installed", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "application_installed"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "application_installed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"application_installed\"", "created_at": 1699414207.653413}, "source.mattermost_analytics.mm_mobile_prod.application_opened": {"database": "RAW", "schema": "mm_mobile_prod", "name": "application_opened", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.application_opened", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "application_opened"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "application_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"application_opened\"", "created_at": 1699414207.653478}, "source.mattermost_analytics.mm_mobile_prod.application_updated": {"database": "RAW", "schema": "mm_mobile_prod", "name": "application_updated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.application_updated", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "application_updated"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "application_updated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"application_updated\"", "created_at": 1699414207.653545}, "source.mattermost_analytics.mm_mobile_prod.complete_suggestion": {"database": "RAW", "schema": "mm_mobile_prod", "name": "complete_suggestion", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.complete_suggestion", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "complete_suggestion"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "complete_suggestion", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"complete_suggestion\"", "created_at": 1699414207.65361}, "source.mattermost_analytics.mm_mobile_prod.get_suggestions_failed": {"database": "RAW", "schema": "mm_mobile_prod", "name": "get_suggestions_failed", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.get_suggestions_failed", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "get_suggestions_failed"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "get_suggestions_failed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"get_suggestions_failed\"", "created_at": 1699414207.6536908}, "source.mattermost_analytics.mm_mobile_prod.get_suggestions_initiated": {"database": "RAW", "schema": "mm_mobile_prod", "name": "get_suggestions_initiated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.get_suggestions_initiated", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "get_suggestions_initiated"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "get_suggestions_initiated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"get_suggestions_initiated\"", "created_at": 1699414207.6537569}, "source.mattermost_analytics.mm_mobile_prod.get_suggestions_success": {"database": "RAW", "schema": "mm_mobile_prod", "name": "get_suggestions_success", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.get_suggestions_success", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "get_suggestions_success"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "get_suggestions_success", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"get_suggestions_success\"", "created_at": 1699414207.653824}, "source.mattermost_analytics.mm_mobile_prod.identifies": {"database": "RAW", "schema": "mm_mobile_prod", "name": "identifies", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.identifies", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "identifies"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"identifies\"", "created_at": 1699414207.653891}, "source.mattermost_analytics.mm_mobile_prod.rudder_discards": {"database": "RAW", "schema": "mm_mobile_prod", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.rudder_discards", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "rudder_discards"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"rudder_discards\"", "created_at": 1699414207.6539571}, "source.mattermost_analytics.mm_mobile_prod.screens": {"database": "RAW", "schema": "mm_mobile_prod", "name": "screens", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.screens", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "screens"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "screens", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"screens\"", "created_at": 1699414207.654021}, "source.mattermost_analytics.mm_mobile_prod.tracks": {"database": "RAW", "schema": "mm_mobile_prod", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.tracks", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "tracks"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"tracks\"", "created_at": 1699414207.6540868}, "source.mattermost_analytics.mm_mobile_prod.users": {"database": "RAW", "schema": "mm_mobile_prod", "name": "users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "original_file_path": "models/staging/mm_mobile_prod/_mm_mobile_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_mobile_prod.users", "fqn": ["mattermost_analytics", "staging", "mm_mobile_prod", "mm_mobile_prod", "users"], "source_name": "mm_mobile_prod", "source_description": "Mobile app telemetry pushed using Rudderstack. This schema is for production releases. \n\n[Source code](https://github.com/mattermost/mattermost-mobile/blob/main/app/managers/analytics.ts)\n", "loader": "Rudderstack", "identifier": "users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_mobile_prod\".\"users\"", "created_at": 1699414207.6541529}, "source.mattermost_analytics.mattermost_docs.feedback_submitted": {"database": "RAW", "schema": "mattermost_docs", "name": "feedback_submitted", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_docs/_mattermost_docs__sources.yml", "original_file_path": "models/staging/mattermost_docs/_mattermost_docs__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_docs.feedback_submitted", "fqn": ["mattermost_analytics", "staging", "mattermost_docs", "mattermost_docs", "feedback_submitted"], "source_name": "mattermost_docs", "source_description": "Telemetry data for [Mattermost Docs](https://docs.mattermost.com/). Pushed via Rudderstack.\n", "loader": "Rudderstack", "identifier": "feedback_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Holds a record for each `tracks` call where event name is `feedback_submitted`.", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost_docs\".\"feedback_submitted\"", "created_at": 1699414207.654219}, "source.mattermost_analytics.mattermost_docs.pages": {"database": "RAW", "schema": "mattermost_docs", "name": "pages", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_docs/_mattermost_docs__sources.yml", "original_file_path": "models/staging/mattermost_docs/_mattermost_docs__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_docs.pages", "fqn": ["mattermost_analytics", "staging", "mattermost_docs", "mattermost_docs", "pages"], "source_name": "mattermost_docs", "source_description": "Telemetry data for [Mattermost Docs](https://docs.mattermost.com/). Pushed via Rudderstack.\n", "loader": "Rudderstack", "identifier": "pages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Holds a record for every `page` call.", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost_docs\".\"pages\"", "created_at": 1699414207.6542861}, "source.mattermost_analytics.mattermost_docs.rudder_discards": {"database": "RAW", "schema": "mattermost_docs", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_docs/_mattermost_docs__sources.yml", "original_file_path": "models/staging/mattermost_docs/_mattermost_docs__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_docs.rudder_discards", "fqn": ["mattermost_analytics", "staging", "mattermost_docs", "mattermost_docs", "rudder_discards"], "source_name": "mattermost_docs", "source_description": "Telemetry data for [Mattermost Docs](https://docs.mattermost.com/). Pushed via Rudderstack.\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Holds data that were not added to a Rudderstack managed table due to invalid data type.", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost_docs\".\"rudder_discards\"", "created_at": 1699414207.654351}, "source.mattermost_analytics.mattermost_docs.tracks": {"database": "RAW", "schema": "mattermost_docs", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_docs/_mattermost_docs__sources.yml", "original_file_path": "models/staging/mattermost_docs/_mattermost_docs__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_docs.tracks", "fqn": ["mattermost_analytics", "staging", "mattermost_docs", "mattermost_docs", "tracks"], "source_name": "mattermost_docs", "source_description": "Telemetry data for [Mattermost Docs](https://docs.mattermost.com/). Pushed via Rudderstack.\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Holds a record for each `track` call.", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost_docs\".\"tracks\"", "created_at": 1699414207.6544142}, "source.mattermost_analytics.mm_plugin_prod.apps_framework_call": {"database": "raw", "schema": "mm_plugin_prod", "name": "apps_framework_call", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.apps_framework_call", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "apps_framework_call"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "apps_framework_call", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"apps_framework_call\"", "created_at": 1699414207.654481}, "source.mattermost_analytics.mm_plugin_prod.apps_framework_install": {"database": "raw", "schema": "mm_plugin_prod", "name": "apps_framework_install", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.apps_framework_install", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "apps_framework_install"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "apps_framework_install", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"apps_framework_install\"", "created_at": 1699414207.654547}, "source.mattermost_analytics.mm_plugin_prod.apps_framework_oauth_complete": {"database": "raw", "schema": "mm_plugin_prod", "name": "apps_framework_oauth_complete", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.apps_framework_oauth_complete", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "apps_framework_oauth_complete"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "apps_framework_oauth_complete", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"apps_framework_oauth_complete\"", "created_at": 1699414207.654614}, "source.mattermost_analytics.mm_plugin_prod.apps_framework_uninstall": {"database": "raw", "schema": "mm_plugin_prod", "name": "apps_framework_uninstall", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.apps_framework_uninstall", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "apps_framework_uninstall"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "apps_framework_uninstall", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"apps_framework_uninstall\"", "created_at": 1699414207.6546812}, "source.mattermost_analytics.mm_plugin_prod.github_stats": {"database": "raw", "schema": "mm_plugin_prod", "name": "github_stats", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.github_stats", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "github_stats"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "github_stats", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"github_stats\"", "created_at": 1699414207.654746}, "source.mattermost_analytics.mm_plugin_prod.gitlab_stats": {"database": "raw", "schema": "mm_plugin_prod", "name": "gitlab_stats", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.gitlab_stats", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "gitlab_stats"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "gitlab_stats", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"gitlab_stats\"", "created_at": 1699414207.6548102}, "source.mattermost_analytics.mm_plugin_prod.mscalendar_automatic_status_update": {"database": "raw", "schema": "mm_plugin_prod", "name": "mscalendar_automatic_status_update", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.mscalendar_automatic_status_update", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "mscalendar_automatic_status_update"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "mscalendar_automatic_status_update", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"mscalendar_automatic_status_update\"", "created_at": 1699414207.654878}, "source.mattermost_analytics.mm_plugin_prod.mscalendar_daily_summary_sent": {"database": "raw", "schema": "mm_plugin_prod", "name": "mscalendar_daily_summary_sent", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.mscalendar_daily_summary_sent", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "mscalendar_daily_summary_sent"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "mscalendar_daily_summary_sent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"mscalendar_daily_summary_sent\"", "created_at": 1699414207.654946}, "source.mattermost_analytics.mm_plugin_prod.mscalendar_user_authenticated": {"database": "raw", "schema": "mm_plugin_prod", "name": "mscalendar_user_authenticated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.mscalendar_user_authenticated", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "mscalendar_user_authenticated"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "mscalendar_user_authenticated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"mscalendar_user_authenticated\"", "created_at": 1699414207.6550112}, "source.mattermost_analytics.mm_plugin_prod.mscalendar_user_deauthenticated": {"database": "raw", "schema": "mm_plugin_prod", "name": "mscalendar_user_deauthenticated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.mscalendar_user_deauthenticated", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "mscalendar_user_deauthenticated"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "mscalendar_user_deauthenticated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"mscalendar_user_deauthenticated\"", "created_at": 1699414207.655076}, "source.mattermost_analytics.mm_plugin_prod.mscalendar_welcome_flow_completion": {"database": "raw", "schema": "mm_plugin_prod", "name": "mscalendar_welcome_flow_completion", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.mscalendar_welcome_flow_completion", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "mscalendar_welcome_flow_completion"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "mscalendar_welcome_flow_completion", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"mscalendar_welcome_flow_completion\"", "created_at": 1699414207.655143}, "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_connect": {"database": "raw", "schema": "mm_plugin_prod", "name": "msteamsmeetings_connect", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_connect", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "msteamsmeetings_connect"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "msteamsmeetings_connect", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"msteamsmeetings_connect\"", "created_at": 1699414207.655207}, "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_disconnect": {"database": "raw", "schema": "mm_plugin_prod", "name": "msteamsmeetings_disconnect", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_disconnect", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "msteamsmeetings_disconnect"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "msteamsmeetings_disconnect", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"msteamsmeetings_disconnect\"", "created_at": 1699414207.655272}, "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_duplicated": {"database": "raw", "schema": "mm_plugin_prod", "name": "msteamsmeetings_meeting_duplicated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_duplicated", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "msteamsmeetings_meeting_duplicated"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "msteamsmeetings_meeting_duplicated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"msteamsmeetings_meeting_duplicated\"", "created_at": 1699414207.655338}, "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_forced": {"database": "raw", "schema": "mm_plugin_prod", "name": "msteamsmeetings_meeting_forced", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_forced", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "msteamsmeetings_meeting_forced"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "msteamsmeetings_meeting_forced", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"msteamsmeetings_meeting_forced\"", "created_at": 1699414207.655404}, "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_started": {"database": "raw", "schema": "mm_plugin_prod", "name": "msteamsmeetings_meeting_started", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_started", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "msteamsmeetings_meeting_started"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "msteamsmeetings_meeting_started", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"msteamsmeetings_meeting_started\"", "created_at": 1699414207.6554701}, "source.mattermost_analytics.mm_plugin_prod.nps_nps_disable": {"database": "raw", "schema": "mm_plugin_prod", "name": "nps_nps_disable", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.nps_nps_disable", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "nps_nps_disable"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "nps_nps_disable", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"nps_nps_disable\"", "created_at": 1699414207.6555362}, "source.mattermost_analytics.mm_plugin_prod.nps_nps_feedback": {"database": "raw", "schema": "mm_plugin_prod", "name": "nps_nps_feedback", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.nps_nps_feedback", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "nps_nps_feedback"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "nps_nps_feedback", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NPS feedback data", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"nps_nps_feedback\"", "created_at": 1699414207.655602}, "source.mattermost_analytics.mm_plugin_prod.nps_nps_score": {"database": "raw", "schema": "mm_plugin_prod", "name": "nps_nps_score", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.nps_nps_score", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "nps_nps_score"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "nps_nps_score", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NPS score data", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"nps_nps_score\"", "created_at": 1699414207.6556659}, "source.mattermost_analytics.mm_plugin_prod.rudder_discards": {"database": "raw", "schema": "mm_plugin_prod", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.rudder_discards", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "rudder_discards"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"rudder_discards\"", "created_at": 1699414207.65573}, "source.mattermost_analytics.mm_plugin_prod.todo_accept_issue": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_accept_issue", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_accept_issue", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_accept_issue"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_accept_issue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_accept_issue\"", "created_at": 1699414207.6557949}, "source.mattermost_analytics.mm_plugin_prod.todo_add_issue": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_add_issue", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_add_issue", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_add_issue"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_add_issue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_add_issue\"", "created_at": 1699414207.655861}, "source.mattermost_analytics.mm_plugin_prod.todo_bump_issue": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_bump_issue", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_bump_issue", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_bump_issue"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_bump_issue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_bump_issue\"", "created_at": 1699414207.655931}, "source.mattermost_analytics.mm_plugin_prod.todo_change_issue_assignment": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_change_issue_assignment", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_change_issue_assignment", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_change_issue_assignment"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_change_issue_assignment", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_change_issue_assignment\"", "created_at": 1699414207.6559958}, "source.mattermost_analytics.mm_plugin_prod.todo_command": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_command", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_command", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_command"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_command", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_command\"", "created_at": 1699414207.656061}, "source.mattermost_analytics.mm_plugin_prod.todo_complete_issue": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_complete_issue", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_complete_issue", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_complete_issue"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_complete_issue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_complete_issue\"", "created_at": 1699414207.656126}, "source.mattermost_analytics.mm_plugin_prod.todo_daily_summary_sent": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_daily_summary_sent", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_daily_summary_sent", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_daily_summary_sent"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_daily_summary_sent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_daily_summary_sent\"", "created_at": 1699414207.656192}, "source.mattermost_analytics.mm_plugin_prod.todo_edit_issue": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_edit_issue", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_edit_issue", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_edit_issue"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_edit_issue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_edit_issue\"", "created_at": 1699414207.656257}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_in": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_click_lhs_in", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_in", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_click_lhs_in"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_click_lhs_in", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_click_lhs_in\"", "created_at": 1699414207.656331}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_my": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_click_lhs_my", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_my", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_click_lhs_my"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_click_lhs_my", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_click_lhs_my\"", "created_at": 1699414207.656411}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_out": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_click_lhs_out", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_out", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_click_lhs_out"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_click_lhs_out", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_click_lhs_out\"", "created_at": 1699414207.656482}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_accept": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_custom_post_accept", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_accept", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_custom_post_accept"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_custom_post_accept", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_custom_post_accept\"", "created_at": 1699414207.6565492}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_complete": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_custom_post_complete", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_complete", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_custom_post_complete"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_custom_post_complete", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_custom_post_complete\"", "created_at": 1699414207.6566138}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_remove": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_custom_post_remove", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_remove", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_custom_post_remove"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_custom_post_remove", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_custom_post_remove\"", "created_at": 1699414207.656683}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_rhs_add": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_rhs_add", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_rhs_add", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_rhs_add"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_rhs_add", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_rhs_add\"", "created_at": 1699414207.656748}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_toggle_inbox": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_toggle_inbox", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_toggle_inbox", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_toggle_inbox"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_toggle_inbox", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_toggle_inbox\"", "created_at": 1699414207.6568131}, "source.mattermost_analytics.mm_plugin_prod.todo_frontend_toggle_my": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_frontend_toggle_my", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_frontend_toggle_my", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_frontend_toggle_my"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_frontend_toggle_my", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_frontend_toggle_my\"", "created_at": 1699414207.656878}, "source.mattermost_analytics.mm_plugin_prod.todo_remove_issue": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_remove_issue", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_remove_issue", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_remove_issue"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_remove_issue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_remove_issue\"", "created_at": 1699414207.6569421}, "source.mattermost_analytics.mm_plugin_prod.todo_send_issue": {"database": "raw", "schema": "mm_plugin_prod", "name": "todo_send_issue", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.todo_send_issue", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "todo_send_issue"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "todo_send_issue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"todo_send_issue\"", "created_at": 1699414207.6570141}, "source.mattermost_analytics.mm_plugin_prod.tracks": {"database": "raw", "schema": "mm_plugin_prod", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.tracks", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "tracks"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"tracks\"", "created_at": 1699414207.6570802}, "source.mattermost_analytics.mm_plugin_prod.zoom_connect": {"database": "raw", "schema": "mm_plugin_prod", "name": "zoom_connect", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.zoom_connect", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "zoom_connect"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "zoom_connect", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"zoom_connect\"", "created_at": 1699414207.657145}, "source.mattermost_analytics.mm_plugin_prod.zoom_disconnect": {"database": "raw", "schema": "mm_plugin_prod", "name": "zoom_disconnect", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.zoom_disconnect", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "zoom_disconnect"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "zoom_disconnect", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"zoom_disconnect\"", "created_at": 1699414207.6572108}, "source.mattermost_analytics.mm_plugin_prod.zoom_meeting_duplicated": {"database": "raw", "schema": "mm_plugin_prod", "name": "zoom_meeting_duplicated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.zoom_meeting_duplicated", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "zoom_meeting_duplicated"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "zoom_meeting_duplicated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"zoom_meeting_duplicated\"", "created_at": 1699414207.657276}, "source.mattermost_analytics.mm_plugin_prod.zoom_meeting_forced": {"database": "raw", "schema": "mm_plugin_prod", "name": "zoom_meeting_forced", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.zoom_meeting_forced", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "zoom_meeting_forced"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "zoom_meeting_forced", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"zoom_meeting_forced\"", "created_at": 1699414207.6573398}, "source.mattermost_analytics.mm_plugin_prod.zoom_oauth_mode_change": {"database": "raw", "schema": "mm_plugin_prod", "name": "zoom_oauth_mode_change", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.zoom_oauth_mode_change", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "zoom_oauth_mode_change"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "zoom_oauth_mode_change", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"zoom_oauth_mode_change\"", "created_at": 1699414207.657405}, "source.mattermost_analytics.mm_plugin_prod.zoom_start_meeting": {"database": "raw", "schema": "mm_plugin_prod", "name": "zoom_start_meeting", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "original_file_path": "models/staging/mm_plugin_prod/_mm_plugin_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_plugin_prod.zoom_start_meeting", "fqn": ["mattermost_analytics", "staging", "mm_plugin_prod", "mm_plugin_prod", "zoom_start_meeting"], "source_name": "mm_plugin_prod", "source_description": "Plugin telemetry pushed via Rudderstack. Please check related plugin repo for telemetry.\n\nThis schema contains production data.\n", "loader": "Rudderstack", "identifier": "zoom_start_meeting", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"raw\".\"mm_plugin_prod\".\"zoom_start_meeting\"", "created_at": 1699414207.65747}, "source.mattermost_analytics.portal_prod.click_access_workspace": {"database": "RAW", "schema": "portal_prod", "name": "click_access_workspace", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_access_workspace", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_access_workspace"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_access_workspace", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_access_workspace\"", "created_at": 1699414207.657535}, "source.mattermost_analytics.portal_prod.click_compare_plan": {"database": "RAW", "schema": "portal_prod", "name": "click_compare_plan", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_compare_plan", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_compare_plan"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_compare_plan", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_compare_plan\"", "created_at": 1699414207.657601}, "source.mattermost_analytics.portal_prod.click_connect_workspace": {"database": "RAW", "schema": "portal_prod", "name": "click_connect_workspace", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_connect_workspace", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_connect_workspace"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_connect_workspace", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_connect_workspace\"", "created_at": 1699414207.657675}, "source.mattermost_analytics.portal_prod.click_contact_sales": {"database": "RAW", "schema": "portal_prod", "name": "click_contact_sales", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_contact_sales", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_contact_sales"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_contact_sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_contact_sales\"", "created_at": 1699414207.657741}, "source.mattermost_analytics.portal_prod.click_contact_support": {"database": "RAW", "schema": "portal_prod", "name": "click_contact_support", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_contact_support", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_contact_support"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_contact_support", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_contact_support\"", "created_at": 1699414207.657805}, "source.mattermost_analytics.portal_prod.click_continue_button": {"database": "RAW", "schema": "portal_prod", "name": "click_continue_button", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_continue_button", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_continue_button"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_continue_button", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_continue_button\"", "created_at": 1699414207.657871}, "source.mattermost_analytics.portal_prod.click_create_workspace": {"database": "RAW", "schema": "portal_prod", "name": "click_create_workspace", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_create_workspace", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_create_workspace"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_create_workspace", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_create_workspace\"", "created_at": 1699414207.6579359}, "source.mattermost_analytics.portal_prod.click_edit_url_button": {"database": "RAW", "schema": "portal_prod", "name": "click_edit_url_button", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_edit_url_button", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_edit_url_button"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_edit_url_button", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_edit_url_button\"", "created_at": 1699414207.658009}, "source.mattermost_analytics.portal_prod.click_goto_exisiting_workspace": {"database": "RAW", "schema": "portal_prod", "name": "click_goto_exisiting_workspace", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_goto_exisiting_workspace", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_goto_exisiting_workspace"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_goto_exisiting_workspace", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_goto_exisiting_workspace\"", "created_at": 1699414207.6580749}, "source.mattermost_analytics.portal_prod.click_join_team_workspace_link": {"database": "RAW", "schema": "portal_prod", "name": "click_join_team_workspace_link", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_join_team_workspace_link", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_join_team_workspace_link"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_join_team_workspace_link", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_join_team_workspace_link\"", "created_at": 1699414207.6581419}, "source.mattermost_analytics.portal_prod.click_join_team_workspace_link_b": {"database": "RAW", "schema": "portal_prod", "name": "click_join_team_workspace_link_b", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_join_team_workspace_link_b", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_join_team_workspace_link_b"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_join_team_workspace_link_b", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_join_team_workspace_link_b\"", "created_at": 1699414207.658209}, "source.mattermost_analytics.portal_prod.click_login": {"database": "RAW", "schema": "portal_prod", "name": "click_login", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_login", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_login"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_login", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_login\"", "created_at": 1699414207.658274}, "source.mattermost_analytics.portal_prod.click_login_billing": {"database": "RAW", "schema": "portal_prod", "name": "click_login_billing", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_login_billing", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_login_billing"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_login_billing", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_login_billing\"", "created_at": 1699414207.658339}, "source.mattermost_analytics.portal_prod.click_logout": {"database": "RAW", "schema": "portal_prod", "name": "click_logout", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_logout", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_logout"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_logout", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_logout\"", "created_at": 1699414207.658408}, "source.mattermost_analytics.portal_prod.click_next": {"database": "RAW", "schema": "portal_prod", "name": "click_next", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_next", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_next"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_next", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_next\"", "created_at": 1699414207.658473}, "source.mattermost_analytics.portal_prod.click_next_b": {"database": "RAW", "schema": "portal_prod", "name": "click_next_b", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_next_b", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_next_b"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_next_b", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_next_b\"", "created_at": 1699414207.658536}, "source.mattermost_analytics.portal_prod.click_open_payment_feedback_form_modal": {"database": "RAW", "schema": "portal_prod", "name": "click_open_payment_feedback_form_modal", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_open_payment_feedback_form_modal", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_open_payment_feedback_form_modal"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_open_payment_feedback_form_modal", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_open_payment_feedback_form_modal\"", "created_at": 1699414207.658601}, "source.mattermost_analytics.portal_prod.click_password_continue_button": {"database": "RAW", "schema": "portal_prod", "name": "click_password_continue_button", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_password_continue_button", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_password_continue_button"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_password_continue_button", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_password_continue_button\"", "created_at": 1699414207.658666}, "source.mattermost_analytics.portal_prod.click_privacy_policy": {"database": "RAW", "schema": "portal_prod", "name": "click_privacy_policy", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_privacy_policy", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_privacy_policy"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_privacy_policy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_privacy_policy\"", "created_at": 1699414207.658734}, "source.mattermost_analytics.portal_prod.click_privacy_policy_b": {"database": "RAW", "schema": "portal_prod", "name": "click_privacy_policy_b", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_privacy_policy_b", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_privacy_policy_b"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_privacy_policy_b", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_privacy_policy_b\"", "created_at": 1699414207.658798}, "source.mattermost_analytics.portal_prod.click_resend_code": {"database": "RAW", "schema": "portal_prod", "name": "click_resend_code", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_resend_code", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_resend_code"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_resend_code", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_resend_code\"", "created_at": 1699414207.658863}, "source.mattermost_analytics.portal_prod.click_self_managed_trial_link": {"database": "RAW", "schema": "portal_prod", "name": "click_self_managed_trial_link", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_self_managed_trial_link", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_self_managed_trial_link"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_self_managed_trial_link", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_self_managed_trial_link\"", "created_at": 1699414207.6589282}, "source.mattermost_analytics.portal_prod.click_self_managed_trial_link_b": {"database": "RAW", "schema": "portal_prod", "name": "click_self_managed_trial_link_b", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_self_managed_trial_link_b", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_self_managed_trial_link_b"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_self_managed_trial_link_b", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_self_managed_trial_link_b\"", "created_at": 1699414207.658991}, "source.mattermost_analytics.portal_prod.click_signup": {"database": "RAW", "schema": "portal_prod", "name": "click_signup", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_signup", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_signup"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_signup", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_signup\"", "created_at": 1699414207.6590562}, "source.mattermost_analytics.portal_prod.click_signup_password_continue_button": {"database": "RAW", "schema": "portal_prod", "name": "click_signup_password_continue_button", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_signup_password_continue_button", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_signup_password_continue_button"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_signup_password_continue_button", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_signup_password_continue_button\"", "created_at": 1699414207.6591349}, "source.mattermost_analytics.portal_prod.click_start_trial": {"database": "RAW", "schema": "portal_prod", "name": "click_start_trial", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_start_trial", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_start_trial"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_start_trial", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_start_trial\"", "created_at": 1699414207.659201}, "source.mattermost_analytics.portal_prod.click_status_page": {"database": "RAW", "schema": "portal_prod", "name": "click_status_page", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_status_page", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_status_page"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_status_page", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_status_page\"", "created_at": 1699414207.659265}, "source.mattermost_analytics.portal_prod.click_terms": {"database": "RAW", "schema": "portal_prod", "name": "click_terms", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_terms", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_terms"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_terms", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_terms\"", "created_at": 1699414207.659332}, "source.mattermost_analytics.portal_prod.click_terms_b": {"database": "RAW", "schema": "portal_prod", "name": "click_terms_b", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_terms_b", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_terms_b"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_terms_b", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_terms_b\"", "created_at": 1699414207.6593978}, "source.mattermost_analytics.portal_prod.click_unknown_url": {"database": "RAW", "schema": "portal_prod", "name": "click_unknown_url", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.click_unknown_url", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "click_unknown_url"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "click_unknown_url", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"click_unknown_url\"", "created_at": 1699414207.659466}, "source.mattermost_analytics.portal_prod.clicked_contact_us_link": {"database": "RAW", "schema": "portal_prod", "name": "clicked_contact_us_link", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.clicked_contact_us_link", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "clicked_contact_us_link"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "clicked_contact_us_link", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"clicked_contact_us_link\"", "created_at": 1699414207.659533}, "source.mattermost_analytics.portal_prod.clicked_faq_link": {"database": "RAW", "schema": "portal_prod", "name": "clicked_faq_link", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.clicked_faq_link", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "clicked_faq_link"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "clicked_faq_link", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"clicked_faq_link\"", "created_at": 1699414207.659599}, "source.mattermost_analytics.portal_prod.clicked_terms_checkbox": {"database": "RAW", "schema": "portal_prod", "name": "clicked_terms_checkbox", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.clicked_terms_checkbox", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "clicked_terms_checkbox"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "clicked_terms_checkbox", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"clicked_terms_checkbox\"", "created_at": 1699414207.659664}, "source.mattermost_analytics.portal_prod.cloud_contact_us_submitted": {"database": "RAW", "schema": "portal_prod", "name": "cloud_contact_us_submitted", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.cloud_contact_us_submitted", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "cloud_contact_us_submitted"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "cloud_contact_us_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"cloud_contact_us_submitted\"", "created_at": 1699414207.659727}, "source.mattermost_analytics.portal_prod.cloud_signup_a_page_visit": {"database": "RAW", "schema": "portal_prod", "name": "cloud_signup_a_page_visit", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.cloud_signup_a_page_visit", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "cloud_signup_a_page_visit"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "cloud_signup_a_page_visit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"cloud_signup_a_page_visit\"", "created_at": 1699414207.6597939}, "source.mattermost_analytics.portal_prod.cloud_signup_b_page_visit": {"database": "RAW", "schema": "portal_prod", "name": "cloud_signup_b_page_visit", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.cloud_signup_b_page_visit", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "cloud_signup_b_page_visit"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "cloud_signup_b_page_visit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"cloud_signup_b_page_visit\"", "created_at": 1699414207.659859}, "source.mattermost_analytics.portal_prod.cloud_signup_error": {"database": "RAW", "schema": "portal_prod", "name": "cloud_signup_error", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.cloud_signup_error", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "cloud_signup_error"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "cloud_signup_error", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"cloud_signup_error\"", "created_at": 1699414207.6599228}, "source.mattermost_analytics.portal_prod.cloud_signup_page_visit": {"database": "RAW", "schema": "portal_prod", "name": "cloud_signup_page_visit", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.cloud_signup_page_visit", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "cloud_signup_page_visit"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "cloud_signup_page_visit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"cloud_signup_page_visit\"", "created_at": 1699414207.659988}, "source.mattermost_analytics.portal_prod.cloud_signup_redirect_to_mattermost": {"database": "RAW", "schema": "portal_prod", "name": "cloud_signup_redirect_to_mattermost", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.cloud_signup_redirect_to_mattermost", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "cloud_signup_redirect_to_mattermost"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "cloud_signup_redirect_to_mattermost", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"cloud_signup_redirect_to_mattermost\"", "created_at": 1699414207.660052}, "source.mattermost_analytics.portal_prod.cloud_signup_success": {"database": "RAW", "schema": "portal_prod", "name": "cloud_signup_success", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.cloud_signup_success", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "cloud_signup_success"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "cloud_signup_success", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"cloud_signup_success\"", "created_at": 1699414207.660117}, "source.mattermost_analytics.portal_prod.cloud_subscription_completed": {"database": "RAW", "schema": "portal_prod", "name": "cloud_subscription_completed", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.cloud_subscription_completed", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "cloud_subscription_completed"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "cloud_subscription_completed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"cloud_subscription_completed\"", "created_at": 1699414207.6601841}, "source.mattermost_analytics.portal_prod.deployment_option_select": {"database": "RAW", "schema": "portal_prod", "name": "deployment_option_select", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.deployment_option_select", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "deployment_option_select"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "deployment_option_select", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"deployment_option_select\"", "created_at": 1699414207.6602502}, "source.mattermost_analytics.portal_prod.email_address_already_associated_with_an_account": {"database": "RAW", "schema": "portal_prod", "name": "email_address_already_associated_with_an_account", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.email_address_already_associated_with_an_account", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "email_address_already_associated_with_an_account"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "email_address_already_associated_with_an_account", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"email_address_already_associated_with_an_account\"", "created_at": 1699414207.660314}, "source.mattermost_analytics.portal_prod.enter_invalid_code": {"database": "RAW", "schema": "portal_prod", "name": "enter_invalid_code", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.enter_invalid_code", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "enter_invalid_code"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "enter_invalid_code", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"enter_invalid_code\"", "created_at": 1699414207.66038}, "source.mattermost_analytics.portal_prod.enter_invalid_code_too_many_times": {"database": "RAW", "schema": "portal_prod", "name": "enter_invalid_code_too_many_times", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.enter_invalid_code_too_many_times", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "enter_invalid_code_too_many_times"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "enter_invalid_code_too_many_times", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"enter_invalid_code_too_many_times\"", "created_at": 1699414207.660444}, "source.mattermost_analytics.portal_prod.enter_valid_code": {"database": "RAW", "schema": "portal_prod", "name": "enter_valid_code", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.enter_valid_code", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "enter_valid_code"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "enter_valid_code", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"enter_valid_code\"", "created_at": 1699414207.66051}, "source.mattermost_analytics.portal_prod.identifies": {"database": "RAW", "schema": "portal_prod", "name": "identifies", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.identifies", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "identifies"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Holds one record for each `identify` call.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"identifies\"", "created_at": 1699414207.660576}, "source.mattermost_analytics.portal_prod.non_business_email_blocked": {"database": "RAW", "schema": "portal_prod", "name": "non_business_email_blocked", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.non_business_email_blocked", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "non_business_email_blocked"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "non_business_email_blocked", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"non_business_email_blocked\"", "created_at": 1699414207.6606421}, "source.mattermost_analytics.portal_prod.non_business_email_blocked_b": {"database": "RAW", "schema": "portal_prod", "name": "non_business_email_blocked_b", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.non_business_email_blocked_b", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "non_business_email_blocked_b"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "non_business_email_blocked_b", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"non_business_email_blocked_b\"", "created_at": 1699414207.660706}, "source.mattermost_analytics.portal_prod.page_load": {"database": "RAW", "schema": "portal_prod", "name": "page_load", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.page_load", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "page_load"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "page_load", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"page_load\"", "created_at": 1699414207.6607711}, "source.mattermost_analytics.portal_prod.pages": {"database": "RAW", "schema": "portal_prod", "name": "pages", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.pages", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "pages"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "pages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Holds a record for every `page` call.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"pages\"", "created_at": 1699414207.66084}, "source.mattermost_analytics.portal_prod.pageview_admin_password": {"database": "RAW", "schema": "portal_prod", "name": "pageview_admin_password", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.pageview_admin_password", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "pageview_admin_password"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "pageview_admin_password", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"pageview_admin_password\"", "created_at": 1699414207.660904}, "source.mattermost_analytics.portal_prod.pageview_cloud_landing_page": {"database": "RAW", "schema": "portal_prod", "name": "pageview_cloud_landing_page", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.pageview_cloud_landing_page", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "pageview_cloud_landing_page"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "pageview_cloud_landing_page", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"pageview_cloud_landing_page\"", "created_at": 1699414207.660969}, "source.mattermost_analytics.portal_prod.pageview_create_signup_password": {"database": "RAW", "schema": "portal_prod", "name": "pageview_create_signup_password", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.pageview_create_signup_password", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "pageview_create_signup_password"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "pageview_create_signup_password", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"pageview_create_signup_password\"", "created_at": 1699414207.6610339}, "source.mattermost_analytics.portal_prod.pageview_create_workspace": {"database": "RAW", "schema": "portal_prod", "name": "pageview_create_workspace", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.pageview_create_workspace", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "pageview_create_workspace"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "pageview_create_workspace", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"pageview_create_workspace\"", "created_at": 1699414207.661098}, "source.mattermost_analytics.portal_prod.pageview_deployment_selection": {"database": "RAW", "schema": "portal_prod", "name": "pageview_deployment_selection", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.pageview_deployment_selection", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "pageview_deployment_selection"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "pageview_deployment_selection", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"pageview_deployment_selection\"", "created_at": 1699414207.661164}, "source.mattermost_analytics.portal_prod.pageview_getting_started": {"database": "RAW", "schema": "portal_prod", "name": "pageview_getting_started", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.pageview_getting_started", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "pageview_getting_started"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "pageview_getting_started", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"pageview_getting_started\"", "created_at": 1699414207.66123}, "source.mattermost_analytics.portal_prod.pageview_verify_email": {"database": "RAW", "schema": "portal_prod", "name": "pageview_verify_email", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.pageview_verify_email", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "pageview_verify_email"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "pageview_verify_email", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"pageview_verify_email\"", "created_at": 1699414207.6612968}, "source.mattermost_analytics.portal_prod.password_validation_error": {"database": "RAW", "schema": "portal_prod", "name": "password_validation_error", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.password_validation_error", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "password_validation_error"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "password_validation_error", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"password_validation_error\"", "created_at": 1699414207.661362}, "source.mattermost_analytics.portal_prod.purchase_complete_create_portal_account": {"database": "RAW", "schema": "portal_prod", "name": "purchase_complete_create_portal_account", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.purchase_complete_create_portal_account", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "purchase_complete_create_portal_account"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "purchase_complete_create_portal_account", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"purchase_complete_create_portal_account\"", "created_at": 1699414207.661427}, "source.mattermost_analytics.portal_prod.purchase_fail_clicked_try_again": {"database": "RAW", "schema": "portal_prod", "name": "purchase_fail_clicked_try_again", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.purchase_fail_clicked_try_again", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "purchase_fail_clicked_try_again"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "purchase_fail_clicked_try_again", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"purchase_fail_clicked_try_again\"", "created_at": 1699414207.661494}, "source.mattermost_analytics.portal_prod.renew_license_form_choose": {"database": "RAW", "schema": "portal_prod", "name": "renew_license_form_choose", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.renew_license_form_choose", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "renew_license_form_choose"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "renew_license_form_choose", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"renew_license_form_choose\"", "created_at": 1699414207.661557}, "source.mattermost_analytics.portal_prod.renew_license_form_choose_enterprise": {"database": "RAW", "schema": "portal_prod", "name": "renew_license_form_choose_enterprise", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.renew_license_form_choose_enterprise", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "renew_license_form_choose_enterprise"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "renew_license_form_choose_enterprise", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"renew_license_form_choose_enterprise\"", "created_at": 1699414207.661621}, "source.mattermost_analytics.portal_prod.renew_license_form_choose_enterprise_e_10": {"database": "RAW", "schema": "portal_prod", "name": "renew_license_form_choose_enterprise_e_10", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.renew_license_form_choose_enterprise_e_10", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "renew_license_form_choose_enterprise_e_10"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "renew_license_form_choose_enterprise_e_10", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"renew_license_form_choose_enterprise_e_10\"", "created_at": 1699414207.661685}, "source.mattermost_analytics.portal_prod.renew_license_form_choose_professional": {"database": "RAW", "schema": "portal_prod", "name": "renew_license_form_choose_professional", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.renew_license_form_choose_professional", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "renew_license_form_choose_professional"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "renew_license_form_choose_professional", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"renew_license_form_choose_professional\"", "created_at": 1699414207.661749}, "source.mattermost_analytics.portal_prod.renew_license_form_choose_self_hosted_enterprise": {"database": "RAW", "schema": "portal_prod", "name": "renew_license_form_choose_self_hosted_enterprise", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.renew_license_form_choose_self_hosted_enterprise", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "renew_license_form_choose_self_hosted_enterprise"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "renew_license_form_choose_self_hosted_enterprise", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"renew_license_form_choose_self_hosted_enterprise\"", "created_at": 1699414207.661833}, "source.mattermost_analytics.portal_prod.renew_license_form_choose_self_hosted_professional": {"database": "RAW", "schema": "portal_prod", "name": "renew_license_form_choose_self_hosted_professional", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.renew_license_form_choose_self_hosted_professional", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "renew_license_form_choose_self_hosted_professional"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "renew_license_form_choose_self_hosted_professional", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"renew_license_form_choose_self_hosted_professional\"", "created_at": 1699414207.661899}, "source.mattermost_analytics.portal_prod.renew_license_form_clicked_compare_plans": {"database": "RAW", "schema": "portal_prod", "name": "renew_license_form_clicked_compare_plans", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.renew_license_form_clicked_compare_plans", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "renew_license_form_clicked_compare_plans"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "renew_license_form_clicked_compare_plans", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"renew_license_form_clicked_compare_plans\"", "created_at": 1699414207.6619651}, "source.mattermost_analytics.portal_prod.renew_license_form_clicked_complete_purchase": {"database": "RAW", "schema": "portal_prod", "name": "renew_license_form_clicked_complete_purchase", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.renew_license_form_clicked_complete_purchase", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "renew_license_form_clicked_complete_purchase"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "renew_license_form_clicked_complete_purchase", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"renew_license_form_clicked_complete_purchase\"", "created_at": 1699414207.66203}, "source.mattermost_analytics.portal_prod.rudder_discards": {"database": "RAW", "schema": "portal_prod", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.rudder_discards", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "rudder_discards"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Holds data that were not added to a Rudderstack managed table due to invalid data type.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"rudder_discards\"", "created_at": 1699414207.662095}, "source.mattermost_analytics.portal_prod.see_how_billing_works": {"database": "RAW", "schema": "portal_prod", "name": "see_how_billing_works", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.see_how_billing_works", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "see_how_billing_works"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "see_how_billing_works", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"see_how_billing_works\"", "created_at": 1699414207.6621609}, "source.mattermost_analytics.portal_prod.signup_flow_email_invalidated": {"database": "RAW", "schema": "portal_prod", "name": "signup_flow_email_invalidated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.signup_flow_email_invalidated", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "signup_flow_email_invalidated"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "signup_flow_email_invalidated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"signup_flow_email_invalidated\"", "created_at": 1699414207.6622279}, "source.mattermost_analytics.portal_prod.signup_flow_email_validated": {"database": "RAW", "schema": "portal_prod", "name": "signup_flow_email_validated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.signup_flow_email_validated", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "signup_flow_email_validated"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "signup_flow_email_validated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"signup_flow_email_validated\"", "created_at": 1699414207.662293}, "source.mattermost_analytics.portal_prod.srv_oauth_complete_success": {"database": "RAW", "schema": "portal_prod", "name": "srv_oauth_complete_success", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.srv_oauth_complete_success", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "srv_oauth_complete_success"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "srv_oauth_complete_success", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"srv_oauth_complete_success\"", "created_at": 1699414207.662359}, "source.mattermost_analytics.portal_prod.stripe_confirm_card_error": {"database": "RAW", "schema": "portal_prod", "name": "stripe_confirm_card_error", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.stripe_confirm_card_error", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "stripe_confirm_card_error"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "stripe_confirm_card_error", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"stripe_confirm_card_error\"", "created_at": 1699414207.662424}, "source.mattermost_analytics.portal_prod.subscription_purchased": {"database": "RAW", "schema": "portal_prod", "name": "subscription_purchased", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.subscription_purchased", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "subscription_purchased"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "subscription_purchased", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"subscription_purchased\"", "created_at": 1699414207.6624901}, "source.mattermost_analytics.portal_prod.successful_url_redirect": {"database": "RAW", "schema": "portal_prod", "name": "successful_url_redirect", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.successful_url_redirect", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "successful_url_redirect"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "successful_url_redirect", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"successful_url_redirect\"", "created_at": 1699414207.6625578}, "source.mattermost_analytics.portal_prod.tracks": {"database": "RAW", "schema": "portal_prod", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.tracks", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "tracks"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Holds a record for each `track` call.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"tracks\"", "created_at": 1699414207.662632}, "source.mattermost_analytics.portal_prod.unknown_url": {"database": "RAW", "schema": "portal_prod", "name": "unknown_url", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.unknown_url", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "unknown_url"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "unknown_url", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"unknown_url\"", "created_at": 1699414207.662696}, "source.mattermost_analytics.portal_prod.users": {"database": "RAW", "schema": "portal_prod", "name": "users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.users", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "users"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains the properties from the latest `identify` call made for an user.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"users\"", "created_at": 1699414207.662762}, "source.mattermost_analytics.portal_prod.utm_params": {"database": "RAW", "schema": "portal_prod", "name": "utm_params", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.utm_params", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "utm_params"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "utm_params", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"utm_params\"", "created_at": 1699414207.662827}, "source.mattermost_analytics.portal_prod.workspace_name_taken": {"database": "RAW", "schema": "portal_prod", "name": "workspace_name_taken", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_name_taken", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_name_taken"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_name_taken", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_name_taken\"", "created_at": 1699414207.662892}, "source.mattermost_analytics.portal_prod.workspace_name_unavailable": {"database": "RAW", "schema": "portal_prod", "name": "workspace_name_unavailable", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_name_unavailable", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_name_unavailable"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_name_unavailable", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_name_unavailable\"", "created_at": 1699414207.662957}, "source.mattermost_analytics.portal_prod.workspace_name_valid": {"database": "RAW", "schema": "portal_prod", "name": "workspace_name_valid", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_name_valid", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_name_valid"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_name_valid", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_name_valid\"", "created_at": 1699414207.663023}, "source.mattermost_analytics.portal_prod.workspace_provisioning_click_open_workspace": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_click_open_workspace", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_click_open_workspace", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_click_open_workspace"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_click_open_workspace", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_click_open_workspace\"", "created_at": 1699414207.663088}, "source.mattermost_analytics.portal_prod.workspace_provisioning_ended": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_ended", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_ended", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_ended"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_ended", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_ended\"", "created_at": 1699414207.663151}, "source.mattermost_analytics.portal_prod.workspace_provisioning_error": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_error", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_error", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_error"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_error", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_error\"", "created_at": 1699414207.66322}, "source.mattermost_analytics.portal_prod.workspace_provisioning_error_unknown": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_error_unknown", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_error_unknown", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_error_unknown"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_error_unknown", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_error_unknown\"", "created_at": 1699414207.663285}, "source.mattermost_analytics.portal_prod.workspace_provisioning_in_progress": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_in_progress", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_in_progress", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_in_progress"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_in_progress", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_in_progress\"", "created_at": 1699414207.66335}, "source.mattermost_analytics.portal_prod.workspace_provisioning_started": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_started", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_started", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_started"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_started", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_started\"", "created_at": 1699414207.663417}, "source.mattermost_analytics.portal_prod.workspace_provisioning_timeout": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_timeout", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_timeout", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_timeout"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_timeout", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_timeout\"", "created_at": 1699414207.66348}, "source.mattermost_analytics.portal_prod.workspace_provisioning_video_ended": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_video_ended", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_video_ended", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_video_ended"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_video_ended", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_video_ended\"", "created_at": 1699414207.6635442}, "source.mattermost_analytics.portal_prod.workspace_provisioning_video_enterfullscreen": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_video_enterfullscreen", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_video_enterfullscreen", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_video_enterfullscreen"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_video_enterfullscreen", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_video_enterfullscreen\"", "created_at": 1699414207.6636102}, "source.mattermost_analytics.portal_prod.workspace_provisioning_video_paused": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_video_paused", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_video_paused", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_video_paused"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_video_paused", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_video_paused\"", "created_at": 1699414207.6636758}, "source.mattermost_analytics.portal_prod.workspace_provisioning_video_play": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_video_play", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_video_play", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_video_play"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_video_play", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_video_play\"", "created_at": 1699414207.6637409}, "source.mattermost_analytics.portal_prod.workspace_provisioning_video_resume": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_video_resume", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_video_resume", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_video_resume"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_video_resume", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_video_resume\"", "created_at": 1699414207.6638029}, "source.mattermost_analytics.portal_prod.workspace_provisioning_video_unmuted": {"database": "RAW", "schema": "portal_prod", "name": "workspace_provisioning_video_unmuted", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_provisioning_video_unmuted", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_provisioning_video_unmuted"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_provisioning_video_unmuted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_provisioning_video_unmuted\"", "created_at": 1699414207.663868}, "source.mattermost_analytics.portal_prod.workspace_reactivation_ended": {"database": "RAW", "schema": "portal_prod", "name": "workspace_reactivation_ended", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_reactivation_ended", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_reactivation_ended"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_reactivation_ended", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_reactivation_ended\"", "created_at": 1699414207.663933}, "source.mattermost_analytics.portal_prod.workspace_reactivation_error": {"database": "RAW", "schema": "portal_prod", "name": "workspace_reactivation_error", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_reactivation_error", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_reactivation_error"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_reactivation_error", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_reactivation_error\"", "created_at": 1699414207.663996}, "source.mattermost_analytics.portal_prod.workspace_reactivation_error_unknown": {"database": "RAW", "schema": "portal_prod", "name": "workspace_reactivation_error_unknown", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_reactivation_error_unknown", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_reactivation_error_unknown"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_reactivation_error_unknown", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_reactivation_error_unknown\"", "created_at": 1699414207.6640608}, "source.mattermost_analytics.portal_prod.workspace_reactivation_no_dns": {"database": "RAW", "schema": "portal_prod", "name": "workspace_reactivation_no_dns", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_reactivation_no_dns", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_reactivation_no_dns"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_reactivation_no_dns", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_reactivation_no_dns\"", "created_at": 1699414207.664124}, "source.mattermost_analytics.portal_prod.workspace_reactivation_not_needed": {"database": "RAW", "schema": "portal_prod", "name": "workspace_reactivation_not_needed", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_reactivation_not_needed", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_reactivation_not_needed"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_reactivation_not_needed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_reactivation_not_needed\"", "created_at": 1699414207.664191}, "source.mattermost_analytics.portal_prod.workspace_reactivation_started": {"database": "RAW", "schema": "portal_prod", "name": "workspace_reactivation_started", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_reactivation_started", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_reactivation_started"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_reactivation_started", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_reactivation_started\"", "created_at": 1699414207.664257}, "source.mattermost_analytics.portal_prod.workspace_reactivation_timeout": {"database": "RAW", "schema": "portal_prod", "name": "workspace_reactivation_timeout", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/portal_prod/_portal_prod__sources.yml", "original_file_path": "models/staging/portal_prod/_portal_prod__sources.yml", "unique_id": "source.mattermost_analytics.portal_prod.workspace_reactivation_timeout", "fqn": ["mattermost_analytics", "staging", "portal_prod", "portal_prod", "workspace_reactivation_timeout"], "source_name": "portal_prod", "source_description": "Portal data stored using Rudderstack. Rudderstack documentation offers an in-depth documentation of the\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Source code](https://github.com/mattermost/customer-web-server/blob/master/webapp/src/utils/rudder.tsx).\n", "loader": "Rudderstack", "identifier": "workspace_reactivation_timeout", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"portal_prod\".\"workspace_reactivation_timeout\"", "created_at": 1699414207.664321}, "source.mattermost_analytics.mattermost_jira._sdc_rejected": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "_sdc_rejected", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira._sdc_rejected", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "_sdc_rejected"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "_sdc_rejected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"record": {"name": "record", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "table_name": {"name": "table_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_rejected_at": {"name": "_sdc_rejected_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"_sdc_rejected\"", "created_at": 1699414207.664397}, "source.mattermost_analytics.mattermost_jira.changelogs": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "changelogs", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.changelogs", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "changelogs"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "changelogs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"author": {"name": "author", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "historymetadata": {"name": "historymetadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issueid": {"name": "issueid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "items": {"name": "items", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"changelogs\"", "created_at": 1699414207.664494}, "source.mattermost_analytics.mattermost_jira.issue_comments": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "issue_comments", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.issue_comments", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "issue_comments"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "issue_comments", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "Unique ID of the comment.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "author": {"name": "author", "description": "JSON object containing author information.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "body": {"name": "body", "description": "Content of the comment.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "Timestamp where the comment was created.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issueid": {"name": "issueid", "description": "Foreign key referencing the id of the `issue` that was commented on.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "jsdpublic": {"name": "jsdpublic", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "Link to the REST API call to get current comment.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updateauthor": {"name": "updateauthor", "description": "JSON Object of the last author that updated the comment.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "Timestamp when the comment was last updated at.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "visibility": {"name": "visibility", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"issue_comments\"", "created_at": 1699414207.667242}, "source.mattermost_analytics.mattermost_jira.issue_transitions": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "issue_transitions", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.issue_transitions", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "issue_transitions"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "issue_transitions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"hasscreen": {"name": "hasscreen", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isconditional": {"name": "isconditional", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isglobal": {"name": "isglobal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isinitial": {"name": "isinitial", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issueid": {"name": "issueid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "to": {"name": "to", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"issue_transitions\"", "created_at": 1699414207.667337}, "source.mattermost_analytics.mattermost_jira.issues": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "issues", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.issues", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "issues"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "issues", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "key": {"name": "key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expand": {"name": "expand", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fields": {"name": "fields", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"issues\"", "created_at": 1699414207.667425}, "source.mattermost_analytics.mattermost_jira.issues_expanded": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "issues_expanded", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.issues_expanded", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "issues_expanded"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "issues_expanded", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "key": {"name": "key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aggregateprogress_progress": {"name": "aggregateprogress_progress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aggregateprogress_total": {"name": "aggregateprogress_total", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aggregatetimeestimate": {"name": "aggregatetimeestimate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aggregatetimeoriginalestimate": {"name": "aggregatetimeoriginalestimate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "aggregatetimespent": {"name": "aggregatetimespent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_accountid": {"name": "assignee_accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_accounttype": {"name": "assignee_accounttype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_active": {"name": "assignee_active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_avatarurls": {"name": "assignee_avatarurls", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_displayname": {"name": "assignee_displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_self": {"name": "assignee_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_timezone": {"name": "assignee_timezone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attachment": {"name": "attachment", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "components": {"name": "components", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_accountid": {"name": "creator_accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_accounttype": {"name": "creator_accounttype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_active": {"name": "creator_active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_avatarurls": {"name": "creator_avatarurls", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_displayname": {"name": "creator_displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_self": {"name": "creator_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creator_timezone": {"name": "creator_timezone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10000": {"name": "customfield_10000", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10001": {"name": "customfield_10001", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10003": {"name": "customfield_10003", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10004": {"name": "customfield_10004", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10006": {"name": "customfield_10006", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10007": {"name": "customfield_10007", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10011": {"name": "customfield_10011", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10500": {"name": "customfield_10500", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10600_hasepiclinkfielddependency": {"name": "customfield_10600_hasepiclinkfielddependency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10600_noneditablereason": {"name": "customfield_10600_noneditablereason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10600_showfield": {"name": "customfield_10600_showfield", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10700": {"name": "customfield_10700", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10800": {"name": "customfield_10800", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_10900": {"name": "customfield_10900", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11100_accountid": {"name": "customfield_11100_accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11100_accounttype": {"name": "customfield_11100_accounttype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11100_active": {"name": "customfield_11100_active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11100_avatarurls": {"name": "customfield_11100_avatarurls", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11100_displayname": {"name": "customfield_11100_displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11100_self": {"name": "customfield_11100_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11100_timezone": {"name": "customfield_11100_timezone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11101_id": {"name": "customfield_11101_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11101_self": {"name": "customfield_11101_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11101_value": {"name": "customfield_11101_value", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11103": {"name": "customfield_11103", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11104": {"name": "customfield_11104", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11105": {"name": "customfield_11105", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11106": {"name": "customfield_11106", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11107": {"name": "customfield_11107", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11108": {"name": "customfield_11108", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11109": {"name": "customfield_11109", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11110": {"name": "customfield_11110", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11111": {"name": "customfield_11111", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11112": {"name": "customfield_11112", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11113": {"name": "customfield_11113", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11114": {"name": "customfield_11114", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11116": {"name": "customfield_11116", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11117": {"name": "customfield_11117", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11118": {"name": "customfield_11118", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11119": {"name": "customfield_11119", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11121": {"name": "customfield_11121", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11122": {"name": "customfield_11122", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11123": {"name": "customfield_11123", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11124": {"name": "customfield_11124", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11125": {"name": "customfield_11125", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11126": {"name": "customfield_11126", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customfield_11127": {"name": "customfield_11127", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duedate": {"name": "duedate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fixversions": {"name": "fixversions", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issuelinks": {"name": "issuelinks", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issuetype_avatarid": {"name": "issuetype_avatarid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issuetype_description": {"name": "issuetype_description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issuetype_iconurl": {"name": "issuetype_iconurl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issuetype_id": {"name": "issuetype_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issuetype_name": {"name": "issuetype_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issuetype_self": {"name": "issuetype_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issuetype_subtask": {"name": "issuetype_subtask", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "labels": {"name": "labels", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastviewed": {"name": "lastviewed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "progress_progress": {"name": "progress_progress", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "progress_total": {"name": "progress_total", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_avatarurls": {"name": "project_avatarurls", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_id": {"name": "project_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_key": {"name": "project_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_name": {"name": "project_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_projecttypekey": {"name": "project_projecttypekey", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_self": {"name": "project_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_simplified": {"name": "project_simplified", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_accountid": {"name": "reporter_accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_accounttype": {"name": "reporter_accounttype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_active": {"name": "reporter_active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_avatarurls": {"name": "reporter_avatarurls", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_displayname": {"name": "reporter_displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_self": {"name": "reporter_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reporter_timezone": {"name": "reporter_timezone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution_description": {"name": "resolution_description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution_id": {"name": "resolution_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution_name": {"name": "resolution_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution_self": {"name": "resolution_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolutiondate": {"name": "resolutiondate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "security": {"name": "security", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_description": {"name": "status_description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_iconurl": {"name": "status_iconurl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_id": {"name": "status_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_name": {"name": "status_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_self": {"name": "status_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_statuscategory": {"name": "status_statuscategory", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "statuscategorychangedate": {"name": "statuscategorychangedate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtasks": {"name": "subtasks", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "summary": {"name": "summary", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timeestimate": {"name": "timeestimate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timeoriginalestimate": {"name": "timeoriginalestimate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timespent": {"name": "timespent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "votes_hasvoted": {"name": "votes_hasvoted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "votes_self": {"name": "votes_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "votes_votes": {"name": "votes_votes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "watches_iswatching": {"name": "watches_iswatching", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "watches_self": {"name": "watches_self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "watches_watchcount": {"name": "watches_watchcount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "workratio": {"name": "workratio", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"issues_expanded\"", "created_at": 1699414207.6677701}, "source.mattermost_analytics.mattermost_jira.project_types": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "project_types", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.project_types", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "project_types"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "project_types", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"key": {"name": "key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "color": {"name": "color", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "descriptioni18nkey": {"name": "descriptioni18nkey", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "formattedkey": {"name": "formattedkey", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"project_types\"", "created_at": 1699414207.667854}, "source.mattermost_analytics.mattermost_jira.projects": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "projects", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.projects", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "projects"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "projects", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "key": {"name": "key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avatarurls": {"name": "avatarurls", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expand": {"name": "expand", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead": {"name": "lead", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "projectkeys": {"name": "projectkeys", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "projecttypekey": {"name": "projecttypekey", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "simplified": {"name": "simplified", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"projects\"", "created_at": 1699414207.667944}, "source.mattermost_analytics.mattermost_jira.resolutions": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "resolutions", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.resolutions", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "resolutions"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "resolutions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"resolutions\"", "created_at": 1699414207.6680262}, "source.mattermost_analytics.mattermost_jira.roles": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "roles", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.roles", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "roles"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "roles", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actors": {"name": "actors", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"roles\"", "created_at": 1699414207.668104}, "source.mattermost_analytics.mattermost_jira.users": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.users", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "users"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accountid": {"name": "accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accounttype": {"name": "accounttype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active": {"name": "active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avatarurls": {"name": "avatarurls", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "displayname": {"name": "displayname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timezone": {"name": "timezone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"users\"", "created_at": 1699414207.6682081}, "source.mattermost_analytics.mattermost_jira.versions": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "versions", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.versions", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "versions"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "versions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"archived": {"name": "archived", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "overdue": {"name": "overdue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "projectid": {"name": "projectid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "released": {"name": "released", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "releasedate": {"name": "releasedate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "userreleasedate": {"name": "userreleasedate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "userstartdate": {"name": "userstartdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"versions\"", "created_at": 1699414207.668298}, "source.mattermost_analytics.mattermost_jira.worklogs": {"database": "ANALYTICS", "schema": "mattermost_jira", "name": "worklogs", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "original_file_path": "models/staging/mattermost_jira/_mattermost_jira__sources.yml", "unique_id": "source.mattermost_analytics.mattermost_jira.worklogs", "fqn": ["mattermost_analytics", "staging", "mattermost_jira", "mattermost_jira", "worklogs"], "source_name": "mattermost_jira", "source_description": "Copy of JIRA database.\n", "loader": "Stitch", "identifier": "worklogs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "author": {"name": "author", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issueid": {"name": "issueid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self": {"name": "self", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "started": {"name": "started", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timespent": {"name": "timespent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timespentseconds": {"name": "timespentseconds", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updateauthor": {"name": "updateauthor", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment": {"name": "comment", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost_jira\".\"worklogs\"", "created_at": 1699414207.6683898}, "source.mattermost_analytics.incident_response_prod.add_checklist_item": {"database": "RAW", "schema": "incident_response_prod", "name": "add_checklist_item", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.add_checklist_item", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "add_checklist_item"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "add_checklist_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"add_checklist_item\"", "created_at": 1699414207.668459}, "source.mattermost_analytics.incident_response_prod.change_commander": {"database": "RAW", "schema": "incident_response_prod", "name": "change_commander", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.change_commander", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "change_commander"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "change_commander", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"change_commander\"", "created_at": 1699414207.668525}, "source.mattermost_analytics.incident_response_prod.change_stage": {"database": "RAW", "schema": "incident_response_prod", "name": "change_stage", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.change_stage", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "change_stage"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "change_stage", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"change_stage\"", "created_at": 1699414207.66859}, "source.mattermost_analytics.incident_response_prod.channel_action": {"database": "RAW", "schema": "incident_response_prod", "name": "channel_action", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.channel_action", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "channel_action"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "channel_action", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"channel_action\"", "created_at": 1699414207.6686552}, "source.mattermost_analytics.incident_response_prod.check_checklist_item": {"database": "RAW", "schema": "incident_response_prod", "name": "check_checklist_item", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.check_checklist_item", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "check_checklist_item"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "check_checklist_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"check_checklist_item\"", "created_at": 1699414207.6687202}, "source.mattermost_analytics.incident_response_prod.checklists": {"database": "RAW", "schema": "incident_response_prod", "name": "checklists", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.checklists", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "checklists"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "checklists", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"checklists\"", "created_at": 1699414207.668787}, "source.mattermost_analytics.incident_response_prod.create_incident": {"database": "RAW", "schema": "incident_response_prod", "name": "create_incident", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.create_incident", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "create_incident"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "create_incident", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"create_incident\"", "created_at": 1699414207.6688519}, "source.mattermost_analytics.incident_response_prod.create_playbook": {"database": "RAW", "schema": "incident_response_prod", "name": "create_playbook", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.create_playbook", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "create_playbook"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "create_playbook", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"create_playbook\"", "created_at": 1699414207.668919}, "source.mattermost_analytics.incident_response_prod.delete_playbook": {"database": "RAW", "schema": "incident_response_prod", "name": "delete_playbook", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.delete_playbook", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "delete_playbook"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "delete_playbook", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"delete_playbook\"", "created_at": 1699414207.6689842}, "source.mattermost_analytics.incident_response_prod.end_incident": {"database": "RAW", "schema": "incident_response_prod", "name": "end_incident", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.end_incident", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "end_incident"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "end_incident", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"end_incident\"", "created_at": 1699414207.669048}, "source.mattermost_analytics.incident_response_prod.frontend": {"database": "RAW", "schema": "incident_response_prod", "name": "frontend", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.frontend", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "frontend"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "frontend", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"frontend\"", "created_at": 1699414207.669114}, "source.mattermost_analytics.incident_response_prod.incident": {"database": "RAW", "schema": "incident_response_prod", "name": "incident", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.incident", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "incident"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "incident", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"incident\"", "created_at": 1699414207.669182}, "source.mattermost_analytics.incident_response_prod.lhs_category": {"database": "RAW", "schema": "incident_response_prod", "name": "lhs_category", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.lhs_category", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "lhs_category"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "lhs_category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"lhs_category\"", "created_at": 1699414207.669249}, "source.mattermost_analytics.incident_response_prod.modify_state_checklist_item": {"database": "RAW", "schema": "incident_response_prod", "name": "modify_state_checklist_item", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.modify_state_checklist_item", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "modify_state_checklist_item"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "modify_state_checklist_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"modify_state_checklist_item\"", "created_at": 1699414207.669318}, "source.mattermost_analytics.incident_response_prod.move_checklist_item": {"database": "RAW", "schema": "incident_response_prod", "name": "move_checklist_item", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.move_checklist_item", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "move_checklist_item"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "move_checklist_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"move_checklist_item\"", "created_at": 1699414207.669384}, "source.mattermost_analytics.incident_response_prod.notify_admins": {"database": "RAW", "schema": "incident_response_prod", "name": "notify_admins", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.notify_admins", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "notify_admins"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "notify_admins", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"notify_admins\"", "created_at": 1699414207.6694489}, "source.mattermost_analytics.incident_response_prod.pages": {"database": "RAW", "schema": "incident_response_prod", "name": "pages", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.pages", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "pages"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "pages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"pages\"", "created_at": 1699414207.669515}, "source.mattermost_analytics.incident_response_prod.playbook": {"database": "RAW", "schema": "incident_response_prod", "name": "playbook", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.playbook", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "playbook"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "playbook", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"playbook\"", "created_at": 1699414207.669579}, "source.mattermost_analytics.incident_response_prod.playbookrun_action": {"database": "RAW", "schema": "incident_response_prod", "name": "playbookrun_action", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.playbookrun_action", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "playbookrun_action"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "playbookrun_action", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"playbookrun_action\"", "created_at": 1699414207.669644}, "source.mattermost_analytics.incident_response_prod.playbookrun_create": {"database": "RAW", "schema": "incident_response_prod", "name": "playbookrun_create", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.playbookrun_create", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "playbookrun_create"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "playbookrun_create", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"playbookrun_create\"", "created_at": 1699414207.669709}, "source.mattermost_analytics.incident_response_prod.playbookrun_follow": {"database": "RAW", "schema": "incident_response_prod", "name": "playbookrun_follow", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.playbookrun_follow", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "playbookrun_follow"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "playbookrun_follow", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"playbookrun_follow\"", "created_at": 1699414207.669774}, "source.mattermost_analytics.incident_response_prod.playbookrun_leave": {"database": "RAW", "schema": "incident_response_prod", "name": "playbookrun_leave", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.playbookrun_leave", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "playbookrun_leave"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "playbookrun_leave", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"playbookrun_leave\"", "created_at": 1699414207.669836}, "source.mattermost_analytics.incident_response_prod.playbookrun_participate": {"database": "RAW", "schema": "incident_response_prod", "name": "playbookrun_participate", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.playbookrun_participate", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "playbookrun_participate"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "playbookrun_participate", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"playbookrun_participate\"", "created_at": 1699414207.6699011}, "source.mattermost_analytics.incident_response_prod.playbookrun_unfollow": {"database": "RAW", "schema": "incident_response_prod", "name": "playbookrun_unfollow", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.playbookrun_unfollow", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "playbookrun_unfollow"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "playbookrun_unfollow", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"playbookrun_unfollow\"", "created_at": 1699414207.6699672}, "source.mattermost_analytics.incident_response_prod.playbookrun_update_actions": {"database": "RAW", "schema": "incident_response_prod", "name": "playbookrun_update_actions", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.playbookrun_update_actions", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "playbookrun_update_actions"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "playbookrun_update_actions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"playbookrun_update_actions\"", "created_at": 1699414207.670035}, "source.mattermost_analytics.incident_response_prod.remove_checklist_item": {"database": "RAW", "schema": "incident_response_prod", "name": "remove_checklist_item", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.remove_checklist_item", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "remove_checklist_item"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "remove_checklist_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"remove_checklist_item\"", "created_at": 1699414207.670101}, "source.mattermost_analytics.incident_response_prod.rename_checklist_item": {"database": "RAW", "schema": "incident_response_prod", "name": "rename_checklist_item", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.rename_checklist_item", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "rename_checklist_item"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "rename_checklist_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"rename_checklist_item\"", "created_at": 1699414207.670167}, "source.mattermost_analytics.incident_response_prod.restart_incident": {"database": "RAW", "schema": "incident_response_prod", "name": "restart_incident", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.restart_incident", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "restart_incident"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "restart_incident", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"restart_incident\"", "created_at": 1699414207.670233}, "source.mattermost_analytics.incident_response_prod.rudder_discards": {"database": "RAW", "schema": "incident_response_prod", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.rudder_discards", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "rudder_discards"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"rudder_discards\"", "created_at": 1699414207.670548}, "source.mattermost_analytics.incident_response_prod.run_checklist_item_slash_command": {"database": "RAW", "schema": "incident_response_prod", "name": "run_checklist_item_slash_command", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.run_checklist_item_slash_command", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "run_checklist_item_slash_command"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "run_checklist_item_slash_command", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"run_checklist_item_slash_command\"", "created_at": 1699414207.670624}, "source.mattermost_analytics.incident_response_prod.set_assignee": {"database": "RAW", "schema": "incident_response_prod", "name": "set_assignee", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.set_assignee", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "set_assignee"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "set_assignee", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"set_assignee\"", "created_at": 1699414207.670696}, "source.mattermost_analytics.incident_response_prod.settings": {"database": "RAW", "schema": "incident_response_prod", "name": "settings", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.settings", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "settings"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "settings", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"settings\"", "created_at": 1699414207.670763}, "source.mattermost_analytics.incident_response_prod.start_trial": {"database": "RAW", "schema": "incident_response_prod", "name": "start_trial", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.start_trial", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "start_trial"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "start_trial", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"start_trial\"", "created_at": 1699414207.6708312}, "source.mattermost_analytics.incident_response_prod.taskactions_action_executed": {"database": "RAW", "schema": "incident_response_prod", "name": "taskactions_action_executed", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.taskactions_action_executed", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "taskactions_action_executed"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "taskactions_action_executed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"taskactions_action_executed\"", "created_at": 1699414207.670899}, "source.mattermost_analytics.incident_response_prod.taskactions_triggered": {"database": "RAW", "schema": "incident_response_prod", "name": "taskactions_triggered", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.taskactions_triggered", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "taskactions_triggered"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "taskactions_triggered", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"taskactions_triggered\"", "created_at": 1699414207.670966}, "source.mattermost_analytics.incident_response_prod.taskactions_updated": {"database": "RAW", "schema": "incident_response_prod", "name": "taskactions_updated", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.taskactions_updated", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "taskactions_updated"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "taskactions_updated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"taskactions_updated\"", "created_at": 1699414207.671032}, "source.mattermost_analytics.incident_response_prod.tasks": {"database": "RAW", "schema": "incident_response_prod", "name": "tasks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.tasks", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "tasks"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "tasks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"tasks\"", "created_at": 1699414207.671099}, "source.mattermost_analytics.incident_response_prod.tracks": {"database": "RAW", "schema": "incident_response_prod", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.tracks", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "tracks"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"tracks\"", "created_at": 1699414207.6711638}, "source.mattermost_analytics.incident_response_prod.uncheck_checklist_item": {"database": "RAW", "schema": "incident_response_prod", "name": "uncheck_checklist_item", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.uncheck_checklist_item", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "uncheck_checklist_item"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "uncheck_checklist_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"uncheck_checklist_item\"", "created_at": 1699414207.6712298}, "source.mattermost_analytics.incident_response_prod.update_playbook": {"database": "RAW", "schema": "incident_response_prod", "name": "update_playbook", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "original_file_path": "models/staging/incident_response_prod/_incident_response_prod__sources.yml", "unique_id": "source.mattermost_analytics.incident_response_prod.update_playbook", "fqn": ["mattermost_analytics", "staging", "incident_response_prod", "incident_response_prod", "update_playbook"], "source_name": "incident_response_prod", "source_description": "Playbook plugin telemetry production data. Published via Rudderstack Go client.\n\n[Source code](https://github.com/mattermost/mattermost-plugin-playbooks/blob/master/server/telemetry/rudder.go#L578)\n", "loader": "Rudderstack", "identifier": "update_playbook", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"incident_response_prod\".\"update_playbook\"", "created_at": 1699414207.671297}, "source.mattermost_analytics.diagnostics.log_entries": {"database": "RAW", "schema": "diagnostics", "name": "log_entries", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/diagnostics/_diagnostics__sources.yml", "original_file_path": "models/staging/diagnostics/_diagnostics__sources.yml", "unique_id": "source.mattermost_analytics.diagnostics.log_entries", "fqn": ["mattermost_analytics", "staging", "diagnostics", "diagnostics", "log_entries"], "source_name": "diagnostics", "source_description": "Contains parsed logs from security update check service.\n", "loader": "Snowflake Stage", "identifier": "log_entries", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains parsed logs from security update check service. The logs are loaded using a Snowflake stage. An \n[Airflow DAG](https://github.com/mattermost/mattermost-data-warehouse/blob/master/dags/extract/diagnostics.py)\ntriggers the loading of the job. The entrypoint to the script that performs the loading is available\n[here](https://github.com/mattermost/mattermost-data-warehouse/blob/master/extract/s3_extract/diagnostics_job.py).\n\nIn-depth documentation of the fields is available at \n[Cloudfront documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html).\n", "columns": {"logdate": {"name": "logdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "logtime": {"name": "logtime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "edge": {"name": "edge", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bytessent": {"name": "bytessent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cip": {"name": "cip", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "method": {"name": "method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "host": {"name": "host", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uri": {"name": "uri", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "creferrer": {"name": "creferrer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "useragent": {"name": "useragent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cs_uri_query": {"name": "cs_uri_query", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cookie": {"name": "cookie", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_edge_result_type": {"name": "x_edge_result_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_edge_request_id": {"name": "x_edge_request_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_host_header": {"name": "x_host_header", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "protocol": {"name": "protocol", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cs_bytes": {"name": "cs_bytes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "time_taken": {"name": "time_taken", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_forwarded_for": {"name": "x_forwarded_for", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ssl_protocol": {"name": "ssl_protocol", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ssl_cipher": {"name": "ssl_cipher", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_edge_response_result_type": {"name": "x_edge_response_result_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cs_protocol_version": {"name": "cs_protocol_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "file_status": {"name": "file_status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "file_encrypted_fields": {"name": "file_encrypted_fields", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stage"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"diagnostics\".\"log_entries\"", "created_at": 1699414207.671401}, "source.mattermost_analytics.salesforce._sdc_rejected": {"database": "analytics", "schema": "orgm_raw", "name": "_sdc_rejected", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce._sdc_rejected", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "_sdc_rejected"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "_sdc_rejected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"record": {"name": "record", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "table_name": {"name": "table_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_rejected_at": {"name": "_sdc_rejected_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"_sdc_rejected\"", "created_at": 1699414207.671479}, "source.mattermost_analytics.salesforce.account": {"database": "analytics", "schema": "orgm_raw", "name": "account", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.account", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "account"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "account", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accountsource": {"name": "accountsource", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_end_date__c": {"name": "account_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_number_int__c": {"name": "account_number_int__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_owner_zd__c": {"name": "account_owner_zd__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_start_date__c": {"name": "account_start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "annualrevenue": {"name": "annualrevenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "api_id__c": {"name": "api_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "arr_current__c": {"name": "arr_current__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingcity": {"name": "billingcity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingcountry": {"name": "billingcountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingcountrycode": {"name": "billingcountrycode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billinglatitude": {"name": "billinglatitude", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billinglongitude": {"name": "billinglongitude", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingpostalcode": {"name": "billingpostalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingstate": {"name": "billingstate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingstatecode": {"name": "billingstatecode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingstreet": {"name": "billingstreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cbit__clearbitdomain__c": {"name": "cbit__clearbitdomain__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clearbit_employee_count__c": {"name": "clearbit_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_type__c": {"name": "company_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cosize__c": {"name": "cosize__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_lookup__c": {"name": "csm_lookup__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_override__c": {"name": "csm_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_zd__c": {"name": "csm_zd__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_engineer_zd__c": {"name": "customer_engineer_zd__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_engineer__c": {"name": "customer_engineer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_finance_status__c": {"name": "customer_finance_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_segmentation_tier__c": {"name": "customer_segmentation_tier__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_of_issue__c": {"name": "date_of_issue__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "demo_req_date__c": {"name": "demo_req_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discoverorg_employee_count__c": {"name": "discoverorg_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_count_override__c": {"name": "employee_count_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagio__numberofpeople__c": {"name": "engagio__numberofpeople__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "e_purchase_date__c": {"name": "e_purchase_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fax": {"name": "fax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_created_date__c": {"name": "first_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_offer__c": {"name": "first_offer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "followup_date__c": {"name": "followup_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "getstarteddate__c": {"name": "getstarteddate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "government__c": {"name": "government__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "health_score__c": {"name": "health_score__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "imported_case_study_note__c": {"name": "imported_case_study_note__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "imported_industry__c": {"name": "imported_industry__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbound_outbound__c": {"name": "inbound_outbound__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "industry": {"name": "industry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastactivitydate": {"name": "lastactivitydate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreviewed__c": {"name": "lastreviewed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "latest_telemetry_date__c": {"name": "latest_telemetry_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_created_date__c": {"name": "lead_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legally_agreed_to_joint_pr__c": {"name": "legally_agreed_to_joint_pr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legally_agreed_to_pr__c": {"name": "legally_agreed_to_pr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legal_right_for_case_studies__c": {"name": "legal_right_for_case_studies__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "masterrecordid": {"name": "masterrecordid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "max_closed_won_date__c": {"name": "max_closed_won_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meetingset_date__c": {"name": "meetingset_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "named_account_tier__c": {"name": "named_account_tier__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "named_account__c": {"name": "named_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nda_expiration_date__c": {"name": "nda_expiration_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__celigo_update__c": {"name": "netsuite_conn__celigo_update__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__credit_hold__c": {"name": "netsuite_conn__credit_hold__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__netsuite_id__c": {"name": "netsuite_conn__netsuite_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__netsuite_sync_err__c": {"name": "netsuite_conn__netsuite_sync_err__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__pushed_from_opportunity__c": {"name": "netsuite_conn__pushed_from_opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__push_to_netsuite__c": {"name": "netsuite_conn__push_to_netsuite__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__sync_in_progress__c": {"name": "netsuite_conn__sync_in_progress__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofemployees": {"name": "numberofemployees", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offer_detail__c": {"name": "offer_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offer__c": {"name": "offer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "other_customer_marketing_comment__c": {"name": "other_customer_marketing_comment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "our_champion__c": {"name": "our_champion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownership": {"name": "ownership", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parentid": {"name": "parentid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_s_parent_acount__c": {"name": "parent_s_parent_acount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rating": {"name": "rating", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region__c": {"name": "region__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_a_quote_date__c": {"name": "request_a_quote_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responded_date__c": {"name": "responded_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_latest__c": {"name": "seats_active_latest__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_mau__c": {"name": "seats_active_mau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_max__c": {"name": "seats_active_max__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_override__c": {"name": "seats_active_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_wau__c": {"name": "seats_active_wau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_licensed__c": {"name": "seats_licensed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_registered__c": {"name": "seats_registered__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seat_utilization__c": {"name": "seat_utilization__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sector__c": {"name": "sector__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_version__c": {"name": "server_version__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingcity": {"name": "shippingcity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingcountry": {"name": "shippingcountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingcountrycode": {"name": "shippingcountrycode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingpostalcode": {"name": "shippingpostalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingstate": {"name": "shippingstate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingstatecode": {"name": "shippingstatecode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingstreet": {"name": "shippingstreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sic": {"name": "sic", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sicdesc": {"name": "sicdesc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "signed_nda__c": {"name": "signed_nda__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "site": {"name": "site", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sponsor__c": {"name": "sponsor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "telemetry_accuracy__c": {"name": "telemetry_accuracy__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territoryid__c": {"name": "territoryid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_area__c": {"name": "territory_area__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_comm_rep__c": {"name": "territory_comm_rep__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_ent_rep__c": {"name": "territory_ent_rep__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_geo__c": {"name": "territory_geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_last_updated__c": {"name": "territory_last_updated__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_region__c": {"name": "territory_region__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_segment__c": {"name": "territory_segment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tickersymbol": {"name": "tickersymbol", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_sales__c": {"name": "total_sales__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_seats__c": {"name": "total_seats__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_req_date__c": {"name": "trial_req_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "true_up_eligible__c": {"name": "true_up_eligible__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unqualified_date__c": {"name": "unqualified_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "website": {"name": "website", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cleaned_up_website__c": {"name": "cleaned_up_website__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "elasticsearch__c": {"name": "elasticsearch__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "read_only_announcement_channels__c": {"name": "read_only_announcement_channels__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "high_availability_ha__c": {"name": "high_availability_ha__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "saml_sso__c": {"name": "saml_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ldap_group_sync__c": {"name": "ldap_group_sync__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "compliance_custom_data_retention__c": {"name": "compliance_custom_data_retention__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "incident_collaboration__c": {"name": "incident_collaboration__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integrations__c": {"name": "integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sector_picklist__c": {"name": "sector_picklist__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recordtypeid": {"name": "recordtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"account\"", "created_at": 1699414207.671757}, "source.mattermost_analytics.salesforce.billing_entity__c": {"database": "analytics", "schema": "orgm_raw", "name": "billing_entity__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.billing_entity__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "billing_entity__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "billing_entity__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_company__c": {"name": "cust_company__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_email__c": {"name": "cust_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_firstname__c": {"name": "cust_firstname__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_id__c": {"name": "cust_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_lastname__c": {"name": "cust_lastname__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_payment_method_detail__c": {"name": "cust_payment_method_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_payment_method__c": {"name": "cust_payment_method__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lu_contactid__c": {"name": "lu_contactid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"billing_entity__c\"", "created_at": 1699414207.6718569}, "source.mattermost_analytics.salesforce.campaign": {"database": "analytics", "schema": "orgm_raw", "name": "campaign", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.campaign", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "campaign"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "campaign", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"actualcost": {"name": "actualcost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amountallopportunities": {"name": "amountallopportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amountwonopportunities": {"name": "amountwonopportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "budgetedcost": {"name": "budgetedcost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_offer_detail__c": {"name": "campaign_offer_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_offer__c": {"name": "campaign_offer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dscorgpkg__suppress_from_discoverorg__c": {"name": "dscorgpkg__suppress_from_discoverorg__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expectedresponse": {"name": "expectedresponse", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchyactualcost": {"name": "hierarchyactualcost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchyamountallopportunities": {"name": "hierarchyamountallopportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchyamountwonopportunities": {"name": "hierarchyamountwonopportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchybudgetedcost": {"name": "hierarchybudgetedcost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchyexpectedrevenue": {"name": "hierarchyexpectedrevenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchynumberofcontacts": {"name": "hierarchynumberofcontacts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchynumberofconvertedleads": {"name": "hierarchynumberofconvertedleads", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchynumberofleads": {"name": "hierarchynumberofleads", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchynumberofopportunities": {"name": "hierarchynumberofopportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchynumberofresponses": {"name": "hierarchynumberofresponses", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchynumberofwonopportunities": {"name": "hierarchynumberofwonopportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchynumbersent": {"name": "hierarchynumbersent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isactive": {"name": "isactive", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofcontacts": {"name": "numberofcontacts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofconvertedleads": {"name": "numberofconvertedleads", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofleads": {"name": "numberofleads", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofopportunities": {"name": "numberofopportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofresponses": {"name": "numberofresponses", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofwonopportunities": {"name": "numberofwonopportunities", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numbersent": {"name": "numbersent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parentid": {"name": "parentid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "triggers_mql__c": {"name": "triggers_mql__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expectedrevenue": {"name": "expectedrevenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"campaign\"", "created_at": 1699414207.67199}, "source.mattermost_analytics.salesforce.campaignmember": {"database": "analytics", "schema": "orgm_raw", "name": "campaignmember", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.campaignmember", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "campaignmember"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "campaignmember", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accounttype__c": {"name": "accounttype__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaignid": {"name": "campaignid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "companyoraccount": {"name": "companyoraccount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactid": {"name": "contactid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_us_notes__c": {"name": "contact_us_notes__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "converted_date__c": {"name": "converted_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cosize__c": {"name": "cosize__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "donotcall": {"name": "donotcall", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "e_purchase_date__c": {"name": "e_purchase_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fax": {"name": "fax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "firstname": {"name": "firstname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "firstrespondeddate": {"name": "firstrespondeddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_responded_on__c": {"name": "first_responded_on__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hasoptedoutofemail": {"name": "hasoptedoutofemail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hasoptedoutoffax": {"name": "hasoptedoutoffax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hasresponded": {"name": "hasresponded", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastname": {"name": "lastname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_occurrence__c": {"name": "last_occurrence__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadcontact_create_date__c": {"name": "leadcontact_create_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadid": {"name": "leadid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadorcontactid": {"name": "leadorcontactid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadorcontactownerid": {"name": "leadorcontactownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadsource": {"name": "leadsource", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_text__c": {"name": "lead_source_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source__c": {"name": "lead_source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marketing_ops_fix_detail__c": {"name": "marketing_ops_fix_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "member_channel_detail__c": {"name": "member_channel_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "member_channel__c": {"name": "member_channel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobilephone": {"name": "mobilephone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql_date__c": {"name": "mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql__c": {"name": "mql__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "named_account__c": {"name": "named_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postalcode": {"name": "postalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pql_date__c": {"name": "pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region__c": {"name": "region__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "salutation": {"name": "salutation", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "senior_title__c": {"name": "senior_title__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "state": {"name": "state", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "street": {"name": "street", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_title__c": {"name": "technical_title__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "title": {"name": "title", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"campaignmember\"", "created_at": 1699414207.672152}, "source.mattermost_analytics.salesforce.contact": {"database": "analytics", "schema": "orgm_raw", "name": "contact", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.contact", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "contact"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "contact", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accountid": {"name": "accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clearbit_employee_count__c": {"name": "clearbit_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_type__c": {"name": "company_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_us_inquiry_type__c": {"name": "contact_us_inquiry_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discoverorg_employee_count__c": {"name": "discoverorg_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "donotcall": {"name": "donotcall", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duplicate_lead_id__c": {"name": "duplicate_lead_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employees__c": {"name": "employees__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_count_override__c": {"name": "employee_count_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "firstname": {"name": "firstname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_action_detail__c": {"name": "first_action_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_action__c": {"name": "first_action__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel_detail__c": {"name": "first_channel_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel__c": {"name": "first_channel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mcl_date__c": {"name": "first_mcl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mel_date__c": {"name": "first_mel_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mql_date__c": {"name": "first_mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_not_a_lead_date__c": {"name": "first_not_a_lead_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_pql_date__c": {"name": "first_pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_qsc_date__c": {"name": "first_qsc_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_qso_date__c": {"name": "first_qso_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_recycle_date__c": {"name": "first_recycle_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_scl_date__c": {"name": "first_scl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_sdl_date__c": {"name": "first_sdl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hasoptedoutofemail": {"name": "hasoptedoutofemail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hasoptedoutoffax": {"name": "hasoptedoutoffax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "how_did_you_hear_about_mattermost__c": {"name": "how_did_you_hear_about_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastname": {"name": "lastname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail__c": {"name": "lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source__c": {"name": "lead_source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marketing_suspend__c": {"name": "marketing_suspend__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_action_detail__c": {"name": "most_recent_action_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_action__c": {"name": "most_recent_action__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_lead_source_detail__c": {"name": "most_recent_lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_lead_source__c": {"name": "most_recent_lead_source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mcl_date__c": {"name": "most_recent_mcl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mel_date__c": {"name": "most_recent_mel_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mql_date__c": {"name": "most_recent_mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_qsc_date__c": {"name": "most_recent_qsc_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_qso_date__c": {"name": "most_recent_qso_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_recycle_date__c": {"name": "most_recent_recycle_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_scl_date__c": {"name": "most_recent_scl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_sdl_date__c": {"name": "most_recent_sdl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_of_end_users__c": {"name": "number_of_end_users__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_a_quote_date__c": {"name": "request_a_quote_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_to_contact_us_date__c": {"name": "request_to_contact_us_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tell_us_more_about_how_we_can_help_you__c": {"name": "tell_us_more_about_how_we_can_help_you__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_req_date__c": {"name": "trial_req_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_dns__c": {"name": "cloud_dns__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stripe_customer_id__c": {"name": "stripe_customer_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_pql_date__c": {"name": "most_recent_pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_license_id__c": {"name": "trial_license_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"contact\"", "created_at": 1699414207.67231}, "source.mattermost_analytics.salesforce.contract": {"database": "analytics", "schema": "orgm_raw", "name": "contract", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.contract", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "contract"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "contract", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"acceptance__c": {"name": "acceptance__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountid": {"name": "accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_owner_email__c": {"name": "account_owner_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_owner_is_me__c": {"name": "account_owner_is_me__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_owner__c": {"name": "account_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activatedbyid": {"name": "activatedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activateddate": {"name": "activateddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agreement_status__c": {"name": "agreement_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agreement_type__c": {"name": "agreement_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignment__c": {"name": "assignment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audit_rights__c": {"name": "audit_rights__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "auto_renewal__c": {"name": "auto_renewal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingcity": {"name": "billingcity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingcountry": {"name": "billingcountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingcountrycode": {"name": "billingcountrycode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billinglatitude": {"name": "billinglatitude", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billinglongitude": {"name": "billinglongitude", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingpostalcode": {"name": "billingpostalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingstate": {"name": "billingstate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingstatecode": {"name": "billingstatecode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billingstreet": {"name": "billingstreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "companysigneddate": {"name": "companysigneddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "companysignedid": {"name": "companysignedid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contractnumber": {"name": "contractnumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contractterm": {"name": "contractterm", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contract_opportunity__c": {"name": "contract_opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contract_request_date__c": {"name": "contract_request_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_owner__c": {"name": "csm_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customersigneddate": {"name": "customersigneddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customersignedid": {"name": "customersignedid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customersignedtitle": {"name": "customersignedtitle", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_approved_date__c": {"name": "discount_approved_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_e10__c": {"name": "discount_e10__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_e20__c": {"name": "discount_e20__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_percent_ofered__c": {"name": "discount_percent_ofered__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "early_termination__c": {"name": "early_termination__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddate": {"name": "enddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_customer__c": {"name": "end_customer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exceptions_to_waiver_of_indirect_damage__c": {"name": "exceptions_to_waiver_of_indirect_damage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "excluded_customers__c": {"name": "excluded_customers__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "feedback_provision__c": {"name": "feedback_provision__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fee_caps__c": {"name": "fee_caps__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fulfillment_discount__c": {"name": "fulfillment_discount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "governing_law__c": {"name": "governing_law__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastactivitydate": {"name": "lastactivitydate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_status_change__c": {"name": "last_status_change__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legal_counsel__c": {"name": "legal_counsel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "liability_cap_direct_damages__c": {"name": "liability_cap_direct_damages__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "liability_cap_indemnity_claims__c": {"name": "liability_cap_indemnity_claims__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_to_agreement__c": {"name": "link_to_agreement__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "named_add_l_insured_and_date_coi_provid__c": {"name": "named_add_l_insured_and_date_coi_provid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notices_to__c": {"name": "notices_to__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "on_partner_page__c": {"name": "on_partner_page__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_form_required__c": {"name": "order_form_required__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "other_terms_to_note__c": {"name": "other_terms_to_note__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paper__c": {"name": "paper__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_of_taxes__c": {"name": "payment_of_taxes__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_terms__c": {"name": "payment_terms__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "privacy_security_requirements__c": {"name": "privacy_security_requirements__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "publicity__c": {"name": "publicity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "purchase_order_required__c": {"name": "purchase_order_required__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "refunds__c": {"name": "refunds__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region__c": {"name": "region__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registered_discount__c": {"name": "registered_discount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "remedy_for_breach_of_warranty__c": {"name": "remedy_for_breach_of_warranty__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reseller_territory__c": {"name": "reseller_territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "scope_other_indemnification_matters__c": {"name": "scope_other_indemnification_matters__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingcity": {"name": "shippingcity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingcountry": {"name": "shippingcountry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingcountrycode": {"name": "shippingcountrycode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingpostalcode": {"name": "shippingpostalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingstate": {"name": "shippingstate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingstatecode": {"name": "shippingstatecode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippingstreet": {"name": "shippingstreet", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_code_escrow__c": {"name": "source_code_escrow__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "specialterms": {"name": "specialterms", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdate": {"name": "startdate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "statuscode": {"name": "statuscode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "termination_for_cause__c": {"name": "termination_for_cause__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "termination_for_convenience__c": {"name": "termination_for_convenience__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "termination_notice_date__c": {"name": "termination_notice_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "true_up_language__c": {"name": "true_up_language__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "volume_discount_schedule__c": {"name": "volume_discount_schedule__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty__c": {"name": "warranty__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"contract\"", "created_at": 1699414207.672523}, "source.mattermost_analytics.salesforce.customer_onboarding__c": {"database": "analytics", "schema": "orgm_raw", "name": "customer_onboarding__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.customer_onboarding__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "customer_onboarding__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "customer_onboarding__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"account_name__c": {"name": "account_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_owner__c": {"name": "account_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_highlights__c": {"name": "company_highlights__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cse_owner__c": {"name": "cse_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_owner__c": {"name": "csm_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_challenges__c": {"name": "current_challenges__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_identity_provider_sso__c": {"name": "current_identity_provider_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_productivity_platform__c": {"name": "current_productivity_platform__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_type__c": {"name": "database_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "data_migration_required__c": {"name": "data_migration_required__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deployment_model__c": {"name": "deployment_model__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emm_mdm__c": {"name": "emm_mdm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exec_sponsor__c": {"name": "exec_sponsor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_chat_solution__c": {"name": "existing_chat_solution__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "infosec_questionnaire_completed__c": {"name": "infosec_questionnaire_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integrations_enabled__c": {"name": "integrations_enabled__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "latest_telemetry_date__c": {"name": "latest_telemetry_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_key__c": {"name": "license_key__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "load_balancer__c": {"name": "load_balancer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobile_in_scope__c": {"name": "mobile_in_scope__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "of_plugins__c": {"name": "of_plugins__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "of_seats_licensed__c": {"name": "of_seats_licensed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "of_webhooks__c": {"name": "of_webhooks__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunity_name__c": {"name": "opportunity_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "other_integrations__c": {"name": "other_integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_contact__c": {"name": "primary_contact__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_objective__c": {"name": "primary_objective__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product__c": {"name": "product__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_date__c": {"name": "renewal_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_latest__c": {"name": "seats_active_latest__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_mau__c": {"name": "seats_active_mau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_max__c": {"name": "seats_active_max__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_active_override__c": {"name": "seats_active_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_registered__c": {"name": "seats_registered__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seat_utilization__c": {"name": "seat_utilization__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "server_version__c": {"name": "server_version__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage__c": {"name": "stage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_go_live_date__c": {"name": "target_go_live_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_integrations__c": {"name": "target_integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "usage_maturity_reason__c": {"name": "usage_maturity_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "usage_maturity__c": {"name": "usage_maturity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_case__c": {"name": "user_case__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "it_capability_tier__c": {"name": "it_capability_tier__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "regulatory_requirements__c": {"name": "regulatory_requirements__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expansion_plan__c": {"name": "expansion_plan__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "key_benefits__c": {"name": "key_benefits__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastactivitydate": {"name": "lastactivitydate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"customer_onboarding__c\"", "created_at": 1699414207.6726668}, "source.mattermost_analytics.salesforce.customer_reference__c": {"database": "analytics", "schema": "orgm_raw", "name": "customer_reference__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.customer_reference__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "customer_reference__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "customer_reference__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"account__c": {"name": "account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_by_legal__c": {"name": "approved_by_legal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audience__c": {"name": "audience__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_reference_contact__c": {"name": "customer_reference_contact__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "internal_or_external__c": {"name": "internal_or_external__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "location__c": {"name": "location__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "logo_on_website_approved__c": {"name": "logo_on_website_approved__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mattermost_legal_sign_off__c": {"name": "mattermost_legal_sign_off__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notes__c": {"name": "notes__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "published_reference_url__c": {"name": "published_reference_url__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_category__c": {"name": "reference_category__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_end_date__c": {"name": "reference_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_notes__c": {"name": "reference_notes__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_start_date__c": {"name": "reference_start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_type__c": {"name": "reference_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status__c": {"name": "status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_completion_date__c": {"name": "target_completion_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"customer_reference__c\"", "created_at": 1699414207.67278}, "source.mattermost_analytics.salesforce.customer_risk__c": {"database": "analytics", "schema": "orgm_raw", "name": "customer_risk__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.customer_risk__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "customer_risk__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "customer_risk__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"account_owner__c": {"name": "account_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account__c": {"name": "account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additional_details__c": {"name": "additional_details__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "at_risk_date__c": {"name": "at_risk_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ce_owner__c": {"name": "ce_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "churned_date__c": {"name": "churned_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "competitor__c": {"name": "competitor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contraction__c": {"name": "contraction__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_owner__c": {"name": "csm_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_arr__c": {"name": "current_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delayed_date__c": {"name": "delayed_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "early_warning_date__c": {"name": "early_warning_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "key_contact__c": {"name": "key_contact__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "next_step__c": {"name": "next_step__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "of_seats_licensed__c": {"name": "of_seats_licensed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunity__c": {"name": "opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "projected_amount_retainment__c": {"name": "projected_amount_retainment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "projected_seat_retainment__c": {"name": "projected_seat_retainment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason__c": {"name": "reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_date__c": {"name": "renewed_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "risk_amount__c": {"name": "risk_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "risk_resolved_date__c": {"name": "risk_resolved_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seats_at_risk__c": {"name": "seats_at_risk__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "secondary_reason__c": {"name": "secondary_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status__c": {"name": "status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type__c": {"name": "type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"customer_risk__c\"", "created_at": 1699414207.672898}, "source.mattermost_analytics.salesforce.customer_risk__history": {"database": "analytics", "schema": "orgm_raw", "name": "customer_risk__history", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.customer_risk__history", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "customer_risk__history"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "customer_risk__history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "field": {"name": "field", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "newvalue__fl": {"name": "newvalue__fl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "newvalue__st": {"name": "newvalue__st", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "oldvalue__fl": {"name": "oldvalue__fl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "oldvalue__st": {"name": "oldvalue__st", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parentid": {"name": "parentid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"customer_risk__history\"", "created_at": 1699414207.673001}, "source.mattermost_analytics.salesforce.event": {"database": "analytics", "schema": "orgm_raw", "name": "event", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.event", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "event"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "event", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accountid": {"name": "accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activitydate": {"name": "activitydate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activitydatetime": {"name": "activitydatetime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assigned_to_manager__c": {"name": "assigned_to_manager__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "durationinminutes": {"name": "durationinminutes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enddatetime": {"name": "enddatetime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "eventsubtype": {"name": "eventsubtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "groupeventtype": {"name": "groupeventtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isalldayevent": {"name": "isalldayevent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isarchived": {"name": "isarchived", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ischild": {"name": "ischild", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isgroupevent": {"name": "isgroupevent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isprivate": {"name": "isprivate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isrecurrence": {"name": "isrecurrence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isreminderset": {"name": "isreminderset", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "location": {"name": "location", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recurrenceactivityid": {"name": "recurrenceactivityid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recurrencedayofweekmask": {"name": "recurrencedayofweekmask", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recurrenceenddateonly": {"name": "recurrenceenddateonly", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recurrenceinstance": {"name": "recurrenceinstance", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recurrenceinterval": {"name": "recurrenceinterval", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recurrencestartdatetime": {"name": "recurrencestartdatetime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recurrencetimezonesidkey": {"name": "recurrencetimezonesidkey", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recurrencetype": {"name": "recurrencetype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reminderdatetime": {"name": "reminderdatetime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "showas": {"name": "showas", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "startdatetime": {"name": "startdatetime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subject": {"name": "subject", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "whatcount": {"name": "whatcount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "whatid": {"name": "whatid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "whocount": {"name": "whocount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "whoid": {"name": "whoid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"event\"", "created_at": 1699414207.673127}, "source.mattermost_analytics.salesforce.lead": {"database": "analytics", "schema": "orgm_raw", "name": "lead", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.lead", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "lead"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "lead", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"actively_being_sequenced__c": {"name": "actively_being_sequenced__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "api_id__c": {"name": "api_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignment_logic__c": {"name": "assignment_logic__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "behavior_score__c": {"name": "behavior_score__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id__c": {"name": "campaign_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel_detail__c": {"name": "channel_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel__c": {"name": "channel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cleaned_up_website__c": {"name": "cleaned_up_website__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clearbit_employee_count__c": {"name": "clearbit_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_daily_posts__c": {"name": "cloud_daily_posts__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_dau__c": {"name": "cloud_dau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_dns__c": {"name": "cloud_dns__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_last_active_date__c": {"name": "cloud_last_active_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_mau__c": {"name": "cloud_mau__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_plugins_enabled__c": {"name": "cloud_plugins_enabled__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cloud_total_posts__c": {"name": "cloud_total_posts__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company": {"name": "company", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_type__c": {"name": "company_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "connected__c": {"name": "connected__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_us_inquiry_type__c": {"name": "contact_us_inquiry_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "convertedaccountid": {"name": "convertedaccountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "convertedcontactid": {"name": "convertedcontactid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "converteddate": {"name": "converteddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "convertedopportunityid": {"name": "convertedopportunityid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "countrycode": {"name": "countrycode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_status__c": {"name": "current_sequence_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_step_number__c": {"name": "current_sequence_step_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_step_type__c": {"name": "current_sequence_step_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_task_due_date__c": {"name": "current_sequence_task_due_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_sequence_user_name__c": {"name": "current_sequence_user_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discoverorg_employee_count__c": {"name": "discoverorg_employee_count__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discovery_call_booked__c": {"name": "discovery_call_booked__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discovery_call_completed__c": {"name": "discovery_call_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dscorgpkg__company_hq_country_code__c": {"name": "dscorgpkg__company_hq_country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_count_override__c": {"name": "employee_count_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagio__matched_account__c": {"name": "engagio__matched_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_account__c": {"name": "existing_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "firstname": {"name": "firstname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_action_detail__c": {"name": "first_action_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_action__c": {"name": "first_action__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel_detail__c": {"name": "first_channel_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel__c": {"name": "first_channel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mcl_date__c": {"name": "first_mcl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mel_date__c": {"name": "first_mel_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_mql_date__c": {"name": "first_mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_not_a_lead_date__c": {"name": "first_not_a_lead_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_pql_date__c": {"name": "first_pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_qsc_date__c": {"name": "first_qsc_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_qso_date__c": {"name": "first_qso_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_recycle_date__c": {"name": "first_recycle_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_scl_date__c": {"name": "first_scl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_sdl_date__c": {"name": "first_sdl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hasoptedoutofemail": {"name": "hasoptedoutofemail", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hasoptedoutoffax": {"name": "hasoptedoutoffax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "how_did_you_hear_about_mattermost__c": {"name": "how_did_you_hear_about_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbound_outbound__c": {"name": "inbound_outbound__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "indirect_lead__c": {"name": "indirect_lead__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "industry": {"name": "industry", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "industry_text__c": {"name": "industry_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "job_function__c": {"name": "job_function__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "junk_reason__c": {"name": "junk_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastname": {"name": "lastname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead2convdays__c": {"name": "lead2convdays__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead2trialdays__c": {"name": "lead2trialdays__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_created_date__c": {"name": "lead_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_number__c": {"name": "lead_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail__c": {"name": "lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_text__c": {"name": "lead_source_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_status_at_conversion__c": {"name": "lead_status_at_conversion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_status_minor__c": {"name": "lead_status_minor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_type__c": {"name": "lead_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "linkedin__c": {"name": "linkedin__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marketing_suspend__c": {"name": "marketing_suspend__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "matched_account_company_type__c": {"name": "matched_account_company_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "matched_account_named_account_tier__c": {"name": "matched_account_named_account_tier__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "matched_account_named_account__c": {"name": "matched_account_named_account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobilephone": {"name": "mobilephone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_action_detail__c": {"name": "most_recent_action_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_action__c": {"name": "most_recent_action__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_lead_source_detail__c": {"name": "most_recent_lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_lead_source__c": {"name": "most_recent_lead_source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mcl_date__c": {"name": "most_recent_mcl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mel_date__c": {"name": "most_recent_mel_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_mql_date__c": {"name": "most_recent_mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_qsc_date__c": {"name": "most_recent_qsc_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_qso_date__c": {"name": "most_recent_qso_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_recycle_date__c": {"name": "most_recent_recycle_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_scl_date__c": {"name": "most_recent_scl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_sdl_date__c": {"name": "most_recent_sdl_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name_of_currently_active_sequence__c": {"name": "name_of_currently_active_sequence__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "never_connected__c": {"name": "never_connected__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numberofemployees": {"name": "numberofemployees", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_owner__c": {"name": "original_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outreach_cadence_add__c": {"name": "outreach_cadence_add__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outreach_manual_create__c": {"name": "outreach_manual_create__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outreach__c": {"name": "outreach__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_email__c": {"name": "partner_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_name__c": {"name": "partner_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postalcode": {"name": "postalcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_status__c": {"name": "product_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quality_star_rating__c": {"name": "quality_star_rating__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quality__c": {"name": "quality__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recycle_reason__c": {"name": "recycle_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_a_demo_date__c": {"name": "request_a_demo_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_a_trial_date__c": {"name": "request_a_trial_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_quote_date__c": {"name": "request_quote_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_to_contact_us_date__c": {"name": "request_to_contact_us_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "state": {"name": "state", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "statecode": {"name": "statecode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stripe_customer_id__c": {"name": "stripe_customer_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tell_us_more_about_how_we_can_help_you__c": {"name": "tell_us_more_about_how_we_can_help_you__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territoryid__c": {"name": "territoryid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timeline__c": {"name": "timeline__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "website": {"name": "website", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "where_are_you_with_mattermost__c": {"name": "where_are_you_with_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discovery_call_date__c": {"name": "discovery_call_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_pql_date__c": {"name": "most_recent_pql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lifecycle_stage__c": {"name": "lifecycle_stage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sal_date__c": {"name": "sal_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "most_recent_reengaged_date__c": {"name": "most_recent_reengaged_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_reengaged_date__c": {"name": "first_reengaged_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_license_id__c": {"name": "trial_license_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_activation_date__c": {"name": "trial_activation_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"lead\"", "created_at": 1699414207.673384}, "source.mattermost_analytics.salesforce.netsuite_conn__netsuite_financial__c": {"database": "analytics", "schema": "orgm_raw", "name": "netsuite_conn__netsuite_financial__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.netsuite_conn__netsuite_financial__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "netsuite_conn__netsuite_financial__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "netsuite_conn__netsuite_financial__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__account__c": {"name": "netsuite_conn__account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__currency__c": {"name": "netsuite_conn__currency__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__days_overdue__c": {"name": "netsuite_conn__days_overdue__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__discount_total__c": {"name": "netsuite_conn__discount_total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__document_id__c": {"name": "netsuite_conn__document_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__due_date__c": {"name": "netsuite_conn__due_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__memo__c": {"name": "netsuite_conn__memo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__netsuite_id__c": {"name": "netsuite_conn__netsuite_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__opportunity__c": {"name": "netsuite_conn__opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__pdf_file__c": {"name": "netsuite_conn__pdf_file__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__status__c": {"name": "netsuite_conn__status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__subtotal__c": {"name": "netsuite_conn__subtotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__total__c": {"name": "netsuite_conn__total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__transaction_date__c": {"name": "netsuite_conn__transaction_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__type__c": {"name": "netsuite_conn__type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunity_stage__c": {"name": "opportunity_stage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method__c": {"name": "payment_method__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"netsuite_conn__netsuite_financial__c\"", "created_at": 1699414207.6734898}, "source.mattermost_analytics.salesforce.opportunity": {"database": "analytics", "schema": "orgm_raw", "name": "opportunity", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.opportunity", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "opportunity"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "opportunity", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accountid": {"name": "accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additional_environment_details__c": {"name": "additional_environment_details__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_in_commit__c": {"name": "amount_in_commit__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_in_pipeline__c": {"name": "amount_in_pipeline__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_city__c": {"name": "billing_city__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_country_code__c": {"name": "billing_country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_country__c": {"name": "billing_country__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_partner_name__c": {"name": "billing_partner_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_state_province__c": {"name": "billing_state_province__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_street__c": {"name": "billing_street__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_zip_postal_code__c": {"name": "billing_zip_postal_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaignid": {"name": "campaignid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ce_owner__c": {"name": "ce_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closedate": {"name": "closedate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closed_lost_other__c": {"name": "closed_lost_other__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "compelling_event__c": {"name": "compelling_event__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "competitor__c": {"name": "competitor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contract_finalized__c": {"name": "contract_finalized__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_override__c": {"name": "csm_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_owner__c": {"name": "csm_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_identity_provider_sso__c": {"name": "current_identity_provider_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_productivity_platform__c": {"name": "current_productivity_platform__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "data_migration_required__c": {"name": "data_migration_required__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "days_past_renewal__c": {"name": "days_past_renewal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "decision_criteria_process__c": {"name": "decision_criteria_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delta_amount__c": {"name": "delta_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emm_mdm__c": {"name": "emm_mdm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_customer_po_number__c": {"name": "end_customer_po_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enterprise_trial_completed__c": {"name": "enterprise_trial_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_chat_solution_details__c": {"name": "existing_chat_solution_details__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_chat_solution__c": {"name": "existing_chat_solution__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expansion_type__c": {"name": "expansion_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expectedrevenue": {"name": "expectedrevenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extended_support_release_customer__c": {"name": "extended_support_release_customer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "e_purchase_date__c": {"name": "e_purchase_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecastcategory": {"name": "forecastcategory", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecastcategoryname": {"name": "forecastcategoryname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecast_category_custom__c": {"name": "forecast_category_custom__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gtm_save_motions__c": {"name": "gtm_save_motions__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "how_did_you_hear_about_mattermost__c": {"name": "how_did_you_hear_about_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "infosec_questionnaire_completed__c": {"name": "infosec_questionnaire_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_number__c": {"name": "invoice_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isclosed": {"name": "isclosed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "iswon": {"name": "iswon", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadid__c": {"name": "leadid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_created_date__c": {"name": "lead_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail_upon_conversion__c": {"name": "lead_source_detail_upon_conversion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail__c": {"name": "lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_text__c": {"name": "lead_source_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_upon_conversion__c": {"name": "lead_source_upon_conversion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_type__c": {"name": "lead_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_active__c": {"name": "license_active__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_contract_sent__c": {"name": "license_contract_sent__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_end_date__c": {"name": "license_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_key_sent_date__c": {"name": "license_key_sent_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_key__c": {"name": "license_key__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_quantity__c": {"name": "license_quantity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_start_date__c": {"name": "license_start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lost_reason__c": {"name": "lost_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lost_to_competitor__c": {"name": "lost_to_competitor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobile_in_scope__c": {"name": "mobile_in_scope__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql_date__c": {"name": "mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql_reason__c": {"name": "mql_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_expansion_total__c": {"name": "new_expansion_total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_logo__c": {"name": "new_logo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nextstep": {"name": "nextstep", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "open_source_user__c": {"name": "open_source_user__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type__c": {"name": "order_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunityid__c": {"name": "original_opportunityid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_amount__c": {"name": "original_opportunity_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_arr__c": {"name": "original_opportunity_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_end_date__c": {"name": "original_opportunity_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_id__c": {"name": "original_opportunity_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_length_in_months__c": {"name": "original_opportunity_length_in_months__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity__c": {"name": "original_opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "other_integrations__c": {"name": "other_integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paper_trail_process__c": {"name": "paper_trail_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_name__c": {"name": "partner_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "probability": {"name": "probability", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "regulatory_requirements__c": {"name": "regulatory_requirements__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_amount_total__c": {"name": "renewal_amount_total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_created_date__c": {"name": "renewal_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_includes_leftover_expansion__c": {"name": "renewal_includes_leftover_expansion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opportunity_id__c": {"name": "renewed_by_opportunity_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opp_arr__c": {"name": "renewed_by_opp_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opp_prob__c": {"name": "renewed_by_opp_prob__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requirements__c": {"name": "requirements__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "risks__c": {"name": "risks__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self_service_enabled__c": {"name": "self_service_enabled__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_city__c": {"name": "shipping_city__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_country_code__c": {"name": "shipping_country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_country__c": {"name": "shipping_country__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_state_province__c": {"name": "shipping_state_province__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_street__c": {"name": "shipping_street__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_zip_postal_code__c": {"name": "shipping_zip_postal_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stagename": {"name": "stagename", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage_before_closed_lost__c": {"name": "stage_before_closed_lost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage_change_date__c": {"name": "stage_change_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_wlo__c": {"name": "status_wlo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stripe_id__c": {"name": "stripe_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subs_id__c": {"name": "subs_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_external_email__c": {"name": "suppress_external_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_internal_email__c": {"name": "suppress_internal_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_renewal_process__c": {"name": "suppress_renewal_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_go_live_date__c": {"name": "target_go_live_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_integrations__c": {"name": "target_integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_segment__c": {"name": "territory_segment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "time_in_stage__c": {"name": "time_in_stage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "use_case__c": {"name": "use_case__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_identitiy_provider_sso__c": {"name": "current_identitiy_provider_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "available_renewal__c": {"name": "available_renewal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cs_qualified_lead__c": {"name": "cs_qualified_lead__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "override_total_net_new_arr__c": {"name": "override_total_net_new_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_net_new_arr_with_override__c": {"name": "total_net_new_arr_with_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_net_new_arr__c": {"name": "total_net_new_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ending_arr__c": {"name": "ending_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_role__c": {"name": "created_by_role__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contractid": {"name": "contractid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_license_id__c": {"name": "trial_license_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opp_line_items_products__c": {"name": "opp_line_items_products__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_licenses__c": {"name": "active_licenses__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opp_products__c": {"name": "opp_products__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product__c": {"name": "product__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__contracted__c": {"name": "sbqq__contracted__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__primaryquote__c": {"name": "sbqq__primaryquote__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricebook2id": {"name": "pricebook2id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"opportunity\"", "created_at": 1699414207.673751}, "source.mattermost_analytics.salesforce.opportunity_sg": {"database": "analytics", "schema": "orgm_raw", "name": "opportunity_sg", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.opportunity_sg", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "opportunity_sg"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "opportunity_sg", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accountid": {"name": "accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additional_environment_details__c": {"name": "additional_environment_details__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_in_commit__c": {"name": "amount_in_commit__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_in_pipeline__c": {"name": "amount_in_pipeline__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_city__c": {"name": "billing_city__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_country_code__c": {"name": "billing_country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_country__c": {"name": "billing_country__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_partner_name__c": {"name": "billing_partner_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_state_province__c": {"name": "billing_state_province__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_street__c": {"name": "billing_street__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_zip_postal_code__c": {"name": "billing_zip_postal_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaignid": {"name": "campaignid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ce_owner__c": {"name": "ce_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closedate": {"name": "closedate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closed_lost_other__c": {"name": "closed_lost_other__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "compelling_event__c": {"name": "compelling_event__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "competitor__c": {"name": "competitor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contract_finalized__c": {"name": "contract_finalized__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_override__c": {"name": "csm_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_owner__c": {"name": "csm_owner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_identity_provider_sso__c": {"name": "current_identity_provider_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_productivity_platform__c": {"name": "current_productivity_platform__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "data_migration_required__c": {"name": "data_migration_required__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "days_past_renewal__c": {"name": "days_past_renewal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "decision_criteria_process__c": {"name": "decision_criteria_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delta_amount__c": {"name": "delta_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emm_mdm__c": {"name": "emm_mdm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_customer_po_number__c": {"name": "end_customer_po_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enterprise_trial_completed__c": {"name": "enterprise_trial_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_chat_solution_details__c": {"name": "existing_chat_solution_details__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "existing_chat_solution__c": {"name": "existing_chat_solution__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expansion_type__c": {"name": "expansion_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expectedrevenue": {"name": "expectedrevenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extended_support_release_customer__c": {"name": "extended_support_release_customer__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "e_purchase_date__c": {"name": "e_purchase_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecastcategory": {"name": "forecastcategory", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecastcategoryname": {"name": "forecastcategoryname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecast_category_custom__c": {"name": "forecast_category_custom__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gtm_save_motions__c": {"name": "gtm_save_motions__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "how_did_you_hear_about_mattermost__c": {"name": "how_did_you_hear_about_mattermost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "infosec_questionnaire_completed__c": {"name": "infosec_questionnaire_completed__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_number__c": {"name": "invoice_number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isclosed": {"name": "isclosed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "iswon": {"name": "iswon", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leadid__c": {"name": "leadid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_created_date__c": {"name": "lead_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail_upon_conversion__c": {"name": "lead_source_detail_upon_conversion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_detail__c": {"name": "lead_source_detail__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_text__c": {"name": "lead_source_text__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_source_upon_conversion__c": {"name": "lead_source_upon_conversion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lead_type__c": {"name": "lead_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_active__c": {"name": "license_active__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_contract_sent__c": {"name": "license_contract_sent__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_end_date__c": {"name": "license_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_key_sent_date__c": {"name": "license_key_sent_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_key__c": {"name": "license_key__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_quantity__c": {"name": "license_quantity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "license_start_date__c": {"name": "license_start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lost_reason__c": {"name": "lost_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lost_to_competitor__c": {"name": "lost_to_competitor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobile_in_scope__c": {"name": "mobile_in_scope__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql_date__c": {"name": "mql_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mql_reason__c": {"name": "mql_reason__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_expansion_total__c": {"name": "new_expansion_total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_logo__c": {"name": "new_logo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nextstep": {"name": "nextstep", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "open_source_user__c": {"name": "open_source_user__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type__c": {"name": "order_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunityid__c": {"name": "original_opportunityid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_amount__c": {"name": "original_opportunity_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_arr__c": {"name": "original_opportunity_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_end_date__c": {"name": "original_opportunity_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_id__c": {"name": "original_opportunity_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity_length_in_months__c": {"name": "original_opportunity_length_in_months__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_opportunity__c": {"name": "original_opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "other_integrations__c": {"name": "other_integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paper_trail_process__c": {"name": "paper_trail_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_name__c": {"name": "partner_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "probability": {"name": "probability", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "regulatory_requirements__c": {"name": "regulatory_requirements__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_amount_total__c": {"name": "renewal_amount_total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_created_date__c": {"name": "renewal_created_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_includes_leftover_expansion__c": {"name": "renewal_includes_leftover_expansion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opportunity_id__c": {"name": "renewed_by_opportunity_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opp_arr__c": {"name": "renewed_by_opp_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opp_prob__c": {"name": "renewed_by_opp_prob__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requirements__c": {"name": "requirements__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "risks__c": {"name": "risks__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "self_service_enabled__c": {"name": "self_service_enabled__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_city__c": {"name": "shipping_city__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_country_code__c": {"name": "shipping_country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_country__c": {"name": "shipping_country__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_state_province__c": {"name": "shipping_state_province__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_street__c": {"name": "shipping_street__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_zip_postal_code__c": {"name": "shipping_zip_postal_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stagename": {"name": "stagename", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage_before_closed_lost__c": {"name": "stage_before_closed_lost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage_change_date__c": {"name": "stage_change_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_wlo__c": {"name": "status_wlo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stripe_id__c": {"name": "stripe_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subs_id__c": {"name": "subs_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_external_email__c": {"name": "suppress_external_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_internal_email__c": {"name": "suppress_internal_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_renewal_process__c": {"name": "suppress_renewal_process__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_go_live_date__c": {"name": "target_go_live_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_integrations__c": {"name": "target_integrations__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_segment__c": {"name": "territory_segment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "time_in_stage__c": {"name": "time_in_stage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "use_case__c": {"name": "use_case__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_identitiy_provider_sso__c": {"name": "current_identitiy_provider_sso__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "available_renewal__c": {"name": "available_renewal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cs_qualified_lead__c": {"name": "cs_qualified_lead__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "override_total_net_new_arr__c": {"name": "override_total_net_new_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_net_new_arr_with_override__c": {"name": "total_net_new_arr_with_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_net_new_arr__c": {"name": "total_net_new_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ending_arr__c": {"name": "ending_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_role__c": {"name": "created_by_role__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"opportunity_sg\"", "created_at": 1699414207.674004}, "source.mattermost_analytics.salesforce.opportunitycontactrole": {"database": "analytics", "schema": "orgm_raw", "name": "opportunitycontactrole", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.opportunitycontactrole", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "opportunitycontactrole"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "opportunitycontactrole", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"contactid": {"name": "contactid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_portal_access__c": {"name": "customer_portal_access__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isprimary": {"name": "isprimary", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunityid": {"name": "opportunityid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role": {"name": "role", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"opportunitycontactrole\"", "created_at": 1699414207.674093}, "source.mattermost_analytics.salesforce.opportunityfieldhistory": {"database": "analytics", "schema": "orgm_raw", "name": "opportunityfieldhistory", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.opportunityfieldhistory", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "opportunityfieldhistory"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "opportunityfieldhistory", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "field": {"name": "field", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "newvalue__bo": {"name": "newvalue__bo", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "newvalue__de": {"name": "newvalue__de", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "newvalue__fl": {"name": "newvalue__fl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "newvalue__st": {"name": "newvalue__st", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "oldvalue__bo": {"name": "oldvalue__bo", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "oldvalue__de": {"name": "oldvalue__de", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "oldvalue__fl": {"name": "oldvalue__fl", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "oldvalue__st": {"name": "oldvalue__st", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunityid": {"name": "opportunityid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"opportunityfieldhistory\"", "created_at": 1699414207.67419}, "source.mattermost_analytics.salesforce.opportunityhistory": {"database": "analytics", "schema": "orgm_raw", "name": "opportunityhistory", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.opportunityhistory", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "opportunityhistory"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "opportunityhistory", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closedate": {"name": "closedate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expectedrevenue": {"name": "expectedrevenue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecastcategory": {"name": "forecastcategory", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunityid": {"name": "opportunityid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "probability": {"name": "probability", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stagename": {"name": "stagename", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"opportunityhistory\"", "created_at": 1699414207.674277}, "source.mattermost_analytics.salesforce.opportunitylineitem": {"database": "analytics", "schema": "orgm_raw", "name": "opportunitylineitem", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.opportunitylineitem", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "opportunitylineitem"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "opportunitylineitem", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount_manual_override__c": {"name": "amount_manual_override__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "coterm_expansion_amount__c": {"name": "coterm_expansion_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discounted_list_price__c": {"name": "discounted_list_price__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_calc__c": {"name": "discount_calc__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_date__c": {"name": "end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expansion_amount__c": {"name": "expansion_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_id__c": {"name": "invoice_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_status__c": {"name": "invoice_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_prorated_expansion__c": {"name": "is_prorated_expansion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "leftover_expansion_amount__c": {"name": "leftover_expansion_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lineitemid__c": {"name": "lineitemid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "listprice": {"name": "listprice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_billing_amount__c": {"name": "monthly_billing_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "multi_amount__c": {"name": "multi_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_amount__c": {"name": "new_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunityid": {"name": "opportunityid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricebookentryid": {"name": "pricebookentryid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricing_method__c": {"name": "pricing_method__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product2id": {"name": "product2id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "productcode": {"name": "productcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_end_datef__c": {"name": "product_end_datef__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_line_type__c": {"name": "product_line_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_start_datef__c": {"name": "product_start_datef__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_type__c": {"name": "product_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prorated_listprice__c": {"name": "prorated_listprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recalculate_sales_price__c": {"name": "recalculate_sales_price__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_amount__c": {"name": "renewal_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_end_date__c": {"name": "renewal_end_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_multi_amount__c": {"name": "renewal_multi_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewal_start_date__c": {"name": "renewal_start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "renewed_by_opportunity_line_id__c": {"name": "renewed_by_opportunity_line_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reseller_fee__c": {"name": "reseller_fee__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "revenue_type__c": {"name": "revenue_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_price_needs_to_be_updated__c": {"name": "sales_price_needs_to_be_updated__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "servicedate": {"name": "servicedate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sortorder": {"name": "sortorder", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_date__c": {"name": "start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subs_id__c": {"name": "subs_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subs_version_id__c": {"name": "subs_version_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "term_months__c": {"name": "term_months__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "totalprice": {"name": "totalprice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_amount_total_price__c": {"name": "total_amount_total_price__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_amount__c": {"name": "total_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_price_with_annualized_expansion__c": {"name": "total_price_with_annualized_expansion__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unitprice": {"name": "unitprice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_invoice_id__c": {"name": "netsuite_invoice_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subs_prev_version_id__c": {"name": "subs_prev_version_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"opportunitylineitem\"", "created_at": 1699414207.674426}, "source.mattermost_analytics.salesforce.pricebookentry": {"database": "analytics", "schema": "orgm_raw", "name": "pricebookentry", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.pricebookentry", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "pricebookentry"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "pricebookentry", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isactive": {"name": "isactive", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricebook2id": {"name": "pricebook2id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product2id": {"name": "product2id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "productcode": {"name": "productcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unitprice": {"name": "unitprice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "usestandardprice": {"name": "usestandardprice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"pricebookentry\"", "created_at": 1699414207.674518}, "source.mattermost_analytics.salesforce.product2": {"database": "analytics", "schema": "orgm_raw", "name": "product2", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.product2", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "product2"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "product2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "family": {"name": "family", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isactive": {"name": "isactive", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__celigo_update__c": {"name": "netsuite_conn__celigo_update__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__netsuite_id__c": {"name": "netsuite_conn__netsuite_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__push_to_netsuite__c": {"name": "netsuite_conn__push_to_netsuite__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "netsuite_conn__sync_in_progress__c": {"name": "netsuite_conn__sync_in_progress__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricing_type__c": {"name": "pricing_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "productcode": {"name": "productcode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id_18_digit__c": {"name": "product_id_18_digit__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id__c": {"name": "product_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "required_term_length_days__c": {"name": "required_term_length_days__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"product2\"", "created_at": 1699414207.6746361}, "source.mattermost_analytics.salesforce.sbqq__quote__c": {"database": "analytics", "schema": "orgm_raw", "name": "sbqq__quote__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.sbqq__quote__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "sbqq__quote__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "sbqq__quote__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accounts_payable_email_for_template__c": {"name": "accounts_payable_email_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accounts_payable_for_template__c": {"name": "accounts_payable_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accounts_payable_phone_for_template__c": {"name": "accounts_payable_phone_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_name_for_template__c": {"name": "account_name_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additional_terms__c": {"name": "additional_terms__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approvalstatus__c": {"name": "approvalstatus__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "arr_decrease__c": {"name": "arr_decrease__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_address_for_template_test__c": {"name": "billing_address_for_template_test__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "business_justification__c": {"name": "business_justification__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bypass_further_approvals__c": {"name": "bypass_further_approvals__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "calculated_subscription_term__c": {"name": "calculated_subscription_term__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "counter_signature_required__c": {"name": "counter_signature_required__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_email_for_template__c": {"name": "csm_email_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csm_name_for_template__c": {"name": "csm_name_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "emea_user_no_watermark__c": {"name": "emea_user_no_watermark__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "final_discount_with_partner__c": {"name": "final_discount_with_partner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "grandfathered_pricing__c": {"name": "grandfathered_pricing__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "has_enterprise_products__c": {"name": "has_enterprise_products__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issue_date_for_template__c": {"name": "issue_date_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_order_type_direct__c": {"name": "is_order_type_direct__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_order_type_indirect__c": {"name": "is_order_type_indirect__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunity_billing_address_for_template__c": {"name": "opportunity_billing_address_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunity_shippingaddress_for_template__c": {"name": "opportunity_shippingaddress_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type__c": {"name": "order_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "override_account_name_on_order_form__c": {"name": "override_account_name_on_order_form__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_manager_id__c": {"name": "owner_manager_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_billing_address_for_template__c": {"name": "partner_billing_address_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_name_for_template__c": {"name": "partner_name_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reasons_for_approval__c": {"name": "reasons_for_approval__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recordtypeid": {"name": "recordtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_rep_email_for_template__c": {"name": "sales_rep_email_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_rep_name_for_template__c": {"name": "sales_rep_name_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__account__c": {"name": "sbqq__account__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__additionaldiscountamount__c": {"name": "sbqq__additionaldiscountamount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__averagecustomerdiscount__c": {"name": "sbqq__averagecustomerdiscount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__averagepartnerdiscount__c": {"name": "sbqq__averagepartnerdiscount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__billingcity__c": {"name": "sbqq__billingcity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__billingcountry__c": {"name": "sbqq__billingcountry__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__billingfrequency__c": {"name": "sbqq__billingfrequency__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__billingname__c": {"name": "sbqq__billingname__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__billingpostalcode__c": {"name": "sbqq__billingpostalcode__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__billingstate__c": {"name": "sbqq__billingstate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__billingstreet__c": {"name": "sbqq__billingstreet__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__consumptionrateoverride__c": {"name": "sbqq__consumptionrateoverride__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__contractingmethod__c": {"name": "sbqq__contractingmethod__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__customeramount__c": {"name": "sbqq__customeramount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__customerdiscount__c": {"name": "sbqq__customerdiscount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__daysquoteopen__c": {"name": "sbqq__daysquoteopen__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__enddate__c": {"name": "sbqq__enddate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__expirationdate__c": {"name": "sbqq__expirationdate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__lastcalculatedon__c": {"name": "sbqq__lastcalculatedon__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__lastsavedon__c": {"name": "sbqq__lastsavedon__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__lineitemcount__c": {"name": "sbqq__lineitemcount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__lineitemsgrouped__c": {"name": "sbqq__lineitemsgrouped__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__lineitemsprinted__c": {"name": "sbqq__lineitemsprinted__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__listamount__c": {"name": "sbqq__listamount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__mastercontract__c": {"name": "sbqq__mastercontract__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__netamount__c": {"name": "sbqq__netamount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__opportunity2__c": {"name": "sbqq__opportunity2__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__orderbyquotelinegroup__c": {"name": "sbqq__orderbyquotelinegroup__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__ordered__c": {"name": "sbqq__ordered__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__papersize__c": {"name": "sbqq__papersize__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__partnerdiscount__c": {"name": "sbqq__partnerdiscount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__partner__c": {"name": "sbqq__partner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__paymentterms__c": {"name": "sbqq__paymentterms__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__pricebookid__c": {"name": "sbqq__pricebookid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__pricebook__c": {"name": "sbqq__pricebook__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__primarycontact__c": {"name": "sbqq__primarycontact__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__primary__c": {"name": "sbqq__primary__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__regularamount__c": {"name": "sbqq__regularamount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__renewalterm__c": {"name": "sbqq__renewalterm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__salesrep__c": {"name": "sbqq__salesrep__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__shippingcity__c": {"name": "sbqq__shippingcity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__shippingcountry__c": {"name": "sbqq__shippingcountry__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__shippingname__c": {"name": "sbqq__shippingname__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__shippingpostalcode__c": {"name": "sbqq__shippingpostalcode__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__shippingstate__c": {"name": "sbqq__shippingstate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__shippingstreet__c": {"name": "sbqq__shippingstreet__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__source__c": {"name": "sbqq__source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__startdate__c": {"name": "sbqq__startdate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__status__c": {"name": "sbqq__status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__subscriptionterm__c": {"name": "sbqq__subscriptionterm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__targetcustomeramount__c": {"name": "sbqq__targetcustomeramount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__totalcustomerdiscountamount__c": {"name": "sbqq__totalcustomerdiscountamount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__type__c": {"name": "sbqq__type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__uncalculated__c": {"name": "sbqq__uncalculated__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__unopened__c": {"name": "sbqq__unopened__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__watermarkshown__c": {"name": "sbqq__watermarkshown__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "show_start_end_dates__c": {"name": "show_start_end_dates__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "show_total_quote_discount__c": {"name": "show_total_quote_discount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "submitteddate__c": {"name": "submitteddate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_administrator_email_for_templa__c": {"name": "technical_administrator_email_for_templa__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_administrator_name_for_templat__c": {"name": "technical_administrator_name_for_templat__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_administrator_phone_for_templa__c": {"name": "technical_administrator_phone_for_templa__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_evaluator_account_name__c": {"name": "technical_evaluator_account_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_evaluator_email__c": {"name": "technical_evaluator_email__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_evaluator_name__c": {"name": "technical_evaluator_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_evaluator_phone__c": {"name": "technical_evaluator_phone__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_number_of_segments__c": {"name": "total_number_of_segments__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_until_for_template__c": {"name": "valid_until_for_template__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"sbqq__quote__c\"", "created_at": 1699414207.6748421}, "source.mattermost_analytics.salesforce.sbqq__quoteline__c": {"database": "analytics", "schema": "orgm_raw", "name": "sbqq__quoteline__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.sbqq__quoteline__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "sbqq__quoteline__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "sbqq__quoteline__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"calculated_total_discount__c": {"name": "calculated_total_discount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "docusign_list_price__c": {"name": "docusign_list_price__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "docusign_net_total__c": {"name": "docusign_net_total__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exit_year_arr__c": {"name": "exit_year_arr__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_enterprise_product__c": {"name": "is_enterprise_product__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_line_type__c": {"name": "product_line_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prorated_list_price_netsuite2__c": {"name": "prorated_list_price_netsuite2__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quote_partner_discount__c": {"name": "quote_partner_discount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__additionaldiscountamount__c": {"name": "sbqq__additionaldiscountamount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__additionaldiscount__c": {"name": "sbqq__additionaldiscount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__allowassetrefund__c": {"name": "sbqq__allowassetrefund__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__billingfrequency__c": {"name": "sbqq__billingfrequency__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__bundledquantity__c": {"name": "sbqq__bundledquantity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__bundled__c": {"name": "sbqq__bundled__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__bundle__c": {"name": "sbqq__bundle__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__carryoverline__c": {"name": "sbqq__carryoverline__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__componentcost__c": {"name": "sbqq__componentcost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__componentdiscountedbypackage__c": {"name": "sbqq__componentdiscountedbypackage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__componentlisttotal__c": {"name": "sbqq__componentlisttotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__componenttotal__c": {"name": "sbqq__componenttotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__componentupliftedbypackage__c": {"name": "sbqq__componentupliftedbypackage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__configurationrequired__c": {"name": "sbqq__configurationrequired__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__costeditable__c": {"name": "sbqq__costeditable__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__customerprice__c": {"name": "sbqq__customerprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__customertotal__c": {"name": "sbqq__customertotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__defaultsubscriptionterm__c": {"name": "sbqq__defaultsubscriptionterm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__description__c": {"name": "sbqq__description__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__dimension__c": {"name": "sbqq__dimension__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__discount__c": {"name": "sbqq__discount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__dynamicoptionid__c": {"name": "sbqq__dynamicoptionid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__earliestvalidamendmentstartdate__c": {"name": "sbqq__earliestvalidamendmentstartdate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__effectiveenddate__c": {"name": "sbqq__effectiveenddate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__effectivequantity__c": {"name": "sbqq__effectivequantity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__effectivestartdate__c": {"name": "sbqq__effectivestartdate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__effectivesubscriptionterm__c": {"name": "sbqq__effectivesubscriptionterm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__enddate__c": {"name": "sbqq__enddate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__existing__c": {"name": "sbqq__existing__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__group__c": {"name": "sbqq__group__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__hasconsumptionschedule__c": {"name": "sbqq__hasconsumptionschedule__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__hidden__c": {"name": "sbqq__hidden__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__incomplete__c": {"name": "sbqq__incomplete__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__listprice__c": {"name": "sbqq__listprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__listtotal__c": {"name": "sbqq__listtotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__markup__c": {"name": "sbqq__markup__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__netprice__c": {"name": "sbqq__netprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__nettotal__c": {"name": "sbqq__nettotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__nondiscountable__c": {"name": "sbqq__nondiscountable__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__nonpartnerdiscountable__c": {"name": "sbqq__nonpartnerdiscountable__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__number__c": {"name": "sbqq__number__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__optional__c": {"name": "sbqq__optional__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__optionlevel__c": {"name": "sbqq__optionlevel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__optiontype__c": {"name": "sbqq__optiontype__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__originalprice__c": {"name": "sbqq__originalprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__packagecost__c": {"name": "sbqq__packagecost__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__packagelisttotal__c": {"name": "sbqq__packagelisttotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__packagetotal__c": {"name": "sbqq__packagetotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__partnerprice__c": {"name": "sbqq__partnerprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__partnertotal__c": {"name": "sbqq__partnertotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__previoussegmentprice__c": {"name": "sbqq__previoussegmentprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__previoussegmentuplift__c": {"name": "sbqq__previoussegmentuplift__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__pricebookentryid__c": {"name": "sbqq__pricebookentryid__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__priceeditable__c": {"name": "sbqq__priceeditable__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__pricingmethodeditable__c": {"name": "sbqq__pricingmethodeditable__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__pricingmethod__c": {"name": "sbqq__pricingmethod__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__priorquantity__c": {"name": "sbqq__priorquantity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__productcode__c": {"name": "sbqq__productcode__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__productfamily__c": {"name": "sbqq__productfamily__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__productname__c": {"name": "sbqq__productname__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__productoption__c": {"name": "sbqq__productoption__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__productsubscriptiontype__c": {"name": "sbqq__productsubscriptiontype__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__product__c": {"name": "sbqq__product__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__proratedlistprice__c": {"name": "sbqq__proratedlistprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__proratedprice__c": {"name": "sbqq__proratedprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__proratemultiplier__c": {"name": "sbqq__proratemultiplier__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__quantity__c": {"name": "sbqq__quantity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__quote__c": {"name": "sbqq__quote__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__regularprice__c": {"name": "sbqq__regularprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__regulartotal__c": {"name": "sbqq__regulartotal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__renewal__c": {"name": "sbqq__renewal__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__renewedsubscription__c": {"name": "sbqq__renewedsubscription__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__requiredby__c": {"name": "sbqq__requiredby__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__segmentindex__c": {"name": "sbqq__segmentindex__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__segmentkey__c": {"name": "sbqq__segmentkey__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__segmentlabel__c": {"name": "sbqq__segmentlabel__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__source__c": {"name": "sbqq__source__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__specialprice__c": {"name": "sbqq__specialprice__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__startdate__c": {"name": "sbqq__startdate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__subscriptionbase__c": {"name": "sbqq__subscriptionbase__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__subscriptionpricing__c": {"name": "sbqq__subscriptionpricing__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__subscriptionscope__c": {"name": "sbqq__subscriptionscope__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__subscriptiontype__c": {"name": "sbqq__subscriptiontype__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__taxable__c": {"name": "sbqq__taxable__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__totaldiscountamount__c": {"name": "sbqq__totaldiscountamount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__totaldiscountrate__c": {"name": "sbqq__totaldiscountrate__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__upgradedsubscription__c": {"name": "sbqq__upgradedsubscription__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__upliftamount__c": {"name": "sbqq__upliftamount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__uplift__c": {"name": "sbqq__uplift__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_amount__c": {"name": "target_amount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_discount_with_partner__c": {"name": "total_discount_with_partner__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sbqq__partnerdiscount__c": {"name": "sbqq__partnerdiscount__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"sbqq__quoteline__c\"", "created_at": 1699414207.675058}, "source.mattermost_analytics.salesforce.task": {"database": "analytics", "schema": "orgm_raw", "name": "task", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.task", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "task"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "task", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"accountid": {"name": "accountid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activitydate": {"name": "activitydate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "calldisposition": {"name": "calldisposition", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "calldurationinseconds": {"name": "calldurationinseconds", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "calltype": {"name": "calltype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isarchived": {"name": "isarchived", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isclosed": {"name": "isclosed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ishighpriority": {"name": "ishighpriority", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isrecurrence": {"name": "isrecurrence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isreminderset": {"name": "isreminderset", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outreach_auto_reply_status__c": {"name": "outreach_auto_reply_status__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "priority": {"name": "priority", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recordtypeid": {"name": "recordtypeid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subject": {"name": "subject", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type__c": {"name": "sub_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tasksubtype": {"name": "tasksubtype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "whatcount": {"name": "whatcount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "whatid": {"name": "whatid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "whocount": {"name": "whocount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "whoid": {"name": "whoid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "completeddatetime": {"name": "completeddatetime", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"task\"", "created_at": 1699414207.675173}, "source.mattermost_analytics.salesforce.territory_mapping__c": {"database": "analytics", "schema": "orgm_raw", "name": "territory_mapping__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.territory_mapping__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "territory_mapping__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "territory_mapping__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"area__c": {"name": "area__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "commercial_csm__c": {"name": "commercial_csm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "commercial_rep__c": {"name": "commercial_rep__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country_code__c": {"name": "country_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country_name__c": {"name": "country_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "domain__c": {"name": "domain__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enterprise_csm__c": {"name": "enterprise_csm__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "enterprise_rep__c": {"name": "enterprise_rep__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "geo__c": {"name": "geo__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mapping_type__c": {"name": "mapping_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ownerid": {"name": "ownerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region__c": {"name": "region__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rvp__c": {"name": "rvp__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "state_code__c": {"name": "state_code__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "state_name__c": {"name": "state_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_segment_minor__c": {"name": "territory_segment_minor__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory_segment__c": {"name": "territory_segment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"territory_mapping__c\"", "created_at": 1699414207.6752799}, "source.mattermost_analytics.salesforce.true_up_reports__c": {"database": "analytics", "schema": "orgm_raw", "name": "true_up_reports__c", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.true_up_reports__c", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "true_up_reports__c"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "true_up_reports__c", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"account_type__c": {"name": "account_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "calendar_year__c": {"name": "calendar_year__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contract_name__c": {"name": "contract_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contract__c": {"name": "contract__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid": {"name": "createdbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isdeleted": {"name": "isdeleted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunity_stage__c": {"name": "opportunity_stage__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunity__c": {"name": "opportunity__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paid_of_users__c": {"name": "paid_of_users__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quarter_last_dayf__c": {"name": "quarter_last_dayf__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quarter__c": {"name": "quarter__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reported_of_users__c": {"name": "reported_of_users__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "screenshot_date__c": {"name": "screenshot_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "true_up_report_name__c": {"name": "true_up_report_name__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastreferenceddate": {"name": "lastreferenceddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastvieweddate": {"name": "lastvieweddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"true_up_reports__c\"", "created_at": 1699414207.6753979}, "source.mattermost_analytics.salesforce.user": {"database": "analytics", "schema": "orgm_raw", "name": "user", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.user", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "user"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"createddate": {"name": "createddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "department": {"name": "department", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "division": {"name": "division", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dwh_external_id__c": {"name": "dwh_external_id__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employeenumber": {"name": "employeenumber", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "federationidentifier": {"name": "federationidentifier", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "firstname": {"name": "firstname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "isactive": {"name": "isactive", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastname": {"name": "lastname", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "managerid": {"name": "managerid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mattermost_handle__c": {"name": "mattermost_handle__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_type__c": {"name": "owner_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "profileid": {"name": "profileid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_ops__c": {"name": "sales_ops__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_segment__c": {"name": "sales_segment__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_date__c": {"name": "start_date__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_type__c": {"name": "system_type__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "territory__c": {"name": "territory__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "title": {"name": "title", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "userroleid": {"name": "userroleid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "usertype": {"name": "usertype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "validation_exempt__c": {"name": "validation_exempt__c", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"user\"", "created_at": 1699414207.6755068}, "source.mattermost_analytics.salesforce.userrole": {"database": "analytics", "schema": "orgm_raw", "name": "userrole", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/salesforce/_salesforce__sources.yml", "original_file_path": "models/staging/salesforce/_salesforce__sources.yml", "unique_id": "source.mattermost_analytics.salesforce.userrole", "fqn": ["mattermost_analytics", "staging", "salesforce", "salesforce", "userrole"], "source_name": "salesforce", "source_description": "Salesforce entities replicated to data warehouse.\n", "loader": "Stitch", "identifier": "userrole", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"caseaccessforaccountowner": {"name": "caseaccessforaccountowner", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactaccessforaccountowner": {"name": "contactaccessforaccountowner", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "developername": {"name": "developername", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifiedbyid": {"name": "lastmodifiedbyid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastmodifieddate": {"name": "lastmodifieddate", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mayforecastmanagershare": {"name": "mayforecastmanagershare", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opportunityaccessforaccountowner": {"name": "opportunityaccessforaccountowner", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parentroleid": {"name": "parentroleid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "portaltype": {"name": "portaltype", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rollupdescription": {"name": "rollupdescription", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "systemmodstamp": {"name": "systemmodstamp", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"analytics\".\"orgm_raw\".\"userrole\"", "created_at": 1699414207.6755998}, "source.mattermost_analytics.mattermost.version_release_dates": {"database": "ANALYTICS", "schema": "mattermost", "name": "version_release_dates", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost/_mattermost__sources.yml", "original_file_path": "models/staging/mattermost/_mattermost__sources.yml", "unique_id": "source.mattermost_analytics.mattermost.version_release_dates", "fqn": ["mattermost_analytics", "staging", "mattermost", "mattermost", "version_release_dates"], "source_name": "mattermost", "source_description": "Seeds from Snowflake-DBT project.\n", "loader": "snowflake-dbt", "identifier": "version_release_dates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"version": {"name": "version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "release_date": {"name": "release_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supported": {"name": "supported", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "release_number": {"name": "release_number", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["snowflake-dbt"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"mattermost\".\"version_release_dates\"", "created_at": 1699414207.6775491}, "source.mattermost_analytics.mattermost2.activity": {"database": "RAW", "schema": "mattermost2", "name": "activity", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.activity", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "activity"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "activity", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"activity\"", "created_at": 1699414207.6776261}, "source.mattermost_analytics.mattermost2.channel_moderation": {"database": "RAW", "schema": "mattermost2", "name": "channel_moderation", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.channel_moderation", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "channel_moderation"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "channel_moderation", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"channel_moderation\"", "created_at": 1699414207.677699}, "source.mattermost_analytics.mattermost2.config_analytics": {"database": "RAW", "schema": "mattermost2", "name": "config_analytics", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_analytics", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_analytics"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_analytics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_analytics\"", "created_at": 1699414207.67777}, "source.mattermost_analytics.mattermost2.config_announcement": {"database": "RAW", "schema": "mattermost2", "name": "config_announcement", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_announcement", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_announcement"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_announcement", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_announcement\"", "created_at": 1699414207.677839}, "source.mattermost_analytics.mattermost2.config_audit": {"database": "RAW", "schema": "mattermost2", "name": "config_audit", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_audit", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_audit"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_audit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_audit\"", "created_at": 1699414207.677907}, "source.mattermost_analytics.mattermost2.config_bleve": {"database": "RAW", "schema": "mattermost2", "name": "config_bleve", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_bleve", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_bleve"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_bleve", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_bleve\"", "created_at": 1699414207.677975}, "source.mattermost_analytics.mattermost2.config_client_requirements": {"database": "RAW", "schema": "mattermost2", "name": "config_client_requirements", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_client_requirements", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_client_requirements"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_client_requirements", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_client_requirements\"", "created_at": 1699414207.6780438}, "source.mattermost_analytics.mattermost2.config_cluster": {"database": "RAW", "schema": "mattermost2", "name": "config_cluster", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_cluster", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_cluster"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_cluster", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_cluster\"", "created_at": 1699414207.678112}, "source.mattermost_analytics.mattermost2.config_compliance": {"database": "RAW", "schema": "mattermost2", "name": "config_compliance", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_compliance", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_compliance"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_compliance", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_compliance\"", "created_at": 1699414207.678179}, "source.mattermost_analytics.mattermost2.config_data_retention": {"database": "RAW", "schema": "mattermost2", "name": "config_data_retention", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_data_retention", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_data_retention"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_data_retention", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_data_retention\"", "created_at": 1699414207.6782458}, "source.mattermost_analytics.mattermost2.config_display": {"database": "RAW", "schema": "mattermost2", "name": "config_display", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_display", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_display"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_display", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_display\"", "created_at": 1699414207.6783109}, "source.mattermost_analytics.mattermost2.config_elasticsearch": {"database": "RAW", "schema": "mattermost2", "name": "config_elasticsearch", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_elasticsearch", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_elasticsearch"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_elasticsearch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_elasticsearch\"", "created_at": 1699414207.678377}, "source.mattermost_analytics.mattermost2.config_email": {"database": "RAW", "schema": "mattermost2", "name": "config_email", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_email", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_email"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_email", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_email\"", "created_at": 1699414207.678442}, "source.mattermost_analytics.mattermost2.config_experimental": {"database": "RAW", "schema": "mattermost2", "name": "config_experimental", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_experimental", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_experimental"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_experimental", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_experimental\"", "created_at": 1699414207.678507}, "source.mattermost_analytics.mattermost2.config_extension": {"database": "RAW", "schema": "mattermost2", "name": "config_extension", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_extension", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_extension"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_extension", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_extension\"", "created_at": 1699414207.6785731}, "source.mattermost_analytics.mattermost2.config_file": {"database": "RAW", "schema": "mattermost2", "name": "config_file", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_file", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_file"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_file", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_file\"", "created_at": 1699414207.678636}, "source.mattermost_analytics.mattermost2.config_guest_accounts": {"database": "RAW", "schema": "mattermost2", "name": "config_guest_accounts", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_guest_accounts", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_guest_accounts"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_guest_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_guest_accounts\"", "created_at": 1699414207.6787012}, "source.mattermost_analytics.mattermost2.config_image_proxy": {"database": "RAW", "schema": "mattermost2", "name": "config_image_proxy", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_image_proxy", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_image_proxy"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_image_proxy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_image_proxy\"", "created_at": 1699414207.6787689}, "source.mattermost_analytics.mattermost2.config_ldap": {"database": "RAW", "schema": "mattermost2", "name": "config_ldap", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_ldap", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_ldap"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_ldap", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_ldap\"", "created_at": 1699414207.678833}, "source.mattermost_analytics.mattermost2.config_localization": {"database": "RAW", "schema": "mattermost2", "name": "config_localization", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_localization", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_localization"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_localization", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_localization\"", "created_at": 1699414207.6788979}, "source.mattermost_analytics.mattermost2.config_log": {"database": "RAW", "schema": "mattermost2", "name": "config_log", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_log", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_log"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_log\"", "created_at": 1699414207.678963}, "source.mattermost_analytics.mattermost2.config_message_export": {"database": "RAW", "schema": "mattermost2", "name": "config_message_export", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_message_export", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_message_export"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_message_export", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_message_export\"", "created_at": 1699414207.6790268}, "source.mattermost_analytics.mattermost2.config_metrics": {"database": "RAW", "schema": "mattermost2", "name": "config_metrics", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_metrics", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_metrics"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_metrics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_metrics\"", "created_at": 1699414207.67909}, "source.mattermost_analytics.mattermost2.config_nativeapp": {"database": "RAW", "schema": "mattermost2", "name": "config_nativeapp", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_nativeapp", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_nativeapp"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_nativeapp", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_nativeapp\"", "created_at": 1699414207.679156}, "source.mattermost_analytics.mattermost2.config_notifications_log": {"database": "RAW", "schema": "mattermost2", "name": "config_notifications_log", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_notifications_log", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_notifications_log"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_notifications_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_notifications_log\"", "created_at": 1699414207.679221}, "source.mattermost_analytics.mattermost2.config_oauth": {"database": "RAW", "schema": "mattermost2", "name": "config_oauth", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_oauth", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_oauth"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_oauth", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_oauth\"", "created_at": 1699414207.679285}, "source.mattermost_analytics.mattermost2.config_password": {"database": "RAW", "schema": "mattermost2", "name": "config_password", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_password", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_password"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_password", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_password\"", "created_at": 1699414207.67935}, "source.mattermost_analytics.mattermost2.config_plugin": {"database": "RAW", "schema": "mattermost2", "name": "config_plugin", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_plugin", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_plugin"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_plugin", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_plugin\"", "created_at": 1699414207.6794171}, "source.mattermost_analytics.mattermost2.config_privacy": {"database": "RAW", "schema": "mattermost2", "name": "config_privacy", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_privacy", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_privacy"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_privacy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_privacy\"", "created_at": 1699414207.6794822}, "source.mattermost_analytics.mattermost2.config_rate": {"database": "RAW", "schema": "mattermost2", "name": "config_rate", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_rate", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_rate"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_rate", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_rate\"", "created_at": 1699414207.679546}, "source.mattermost_analytics.mattermost2.config_rupport": {"database": "RAW", "schema": "mattermost2", "name": "config_rupport", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_rupport", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_rupport"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_rupport", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_rupport\"", "created_at": 1699414207.67961}, "source.mattermost_analytics.mattermost2.config_saml": {"database": "RAW", "schema": "mattermost2", "name": "config_saml", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_saml", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_saml"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_saml", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_saml\"", "created_at": 1699414207.6796741}, "source.mattermost_analytics.mattermost2.config_service": {"database": "RAW", "schema": "mattermost2", "name": "config_service", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_service", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_service"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_service", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_service\"", "created_at": 1699414207.679738}, "source.mattermost_analytics.mattermost2.config_sql": {"database": "RAW", "schema": "mattermost2", "name": "config_sql", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_sql", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_sql"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_sql", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_sql\"", "created_at": 1699414207.6798022}, "source.mattermost_analytics.mattermost2.config_support": {"database": "RAW", "schema": "mattermost2", "name": "config_support", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_support", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_support"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_support", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_support\"", "created_at": 1699414207.679873}, "source.mattermost_analytics.mattermost2.config_team": {"database": "RAW", "schema": "mattermost2", "name": "config_team", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_team", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_team"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_team", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_team\"", "created_at": 1699414207.6799371}, "source.mattermost_analytics.mattermost2.config_theme": {"database": "RAW", "schema": "mattermost2", "name": "config_theme", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_theme", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_theme"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_theme", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_theme\"", "created_at": 1699414207.680002}, "source.mattermost_analytics.mattermost2.config_timezone": {"database": "RAW", "schema": "mattermost2", "name": "config_timezone", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_timezone", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_timezone"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_timezone", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_timezone\"", "created_at": 1699414207.680068}, "source.mattermost_analytics.mattermost2.config_webrtc": {"database": "RAW", "schema": "mattermost2", "name": "config_webrtc", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.config_webrtc", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "config_webrtc"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "config_webrtc", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"config_webrtc\"", "created_at": 1699414207.680131}, "source.mattermost_analytics.mattermost2.elasticsearch": {"database": "RAW", "schema": "mattermost2", "name": "elasticsearch", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.elasticsearch", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "elasticsearch"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "elasticsearch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"elasticsearch\"", "created_at": 1699414207.680195}, "source.mattermost_analytics.mattermost2.event": {"database": "RAW", "schema": "mattermost2", "name": "event", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.event", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "event"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "event", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"event\"", "created_at": 1699414207.680512}, "source.mattermost_analytics.mattermost2.event_mobile": {"database": "RAW", "schema": "mattermost2", "name": "event_mobile", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.event_mobile", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "event_mobile"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "event_mobile", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"event_mobile\"", "created_at": 1699414207.680583}, "source.mattermost_analytics.mattermost2.groups": {"database": "RAW", "schema": "mattermost2", "name": "groups", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.groups", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "groups"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "groups", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"groups\"", "created_at": 1699414207.680651}, "source.mattermost_analytics.mattermost2.identifies": {"database": "RAW", "schema": "mattermost2", "name": "identifies", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.identifies", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "identifies"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"identifies\"", "created_at": 1699414207.680716}, "source.mattermost_analytics.mattermost2.license": {"database": "RAW", "schema": "mattermost2", "name": "license", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.license", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "license"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "license", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"license\"", "created_at": 1699414207.680783}, "source.mattermost_analytics.mattermost2.pages": {"database": "RAW", "schema": "mattermost2", "name": "pages", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.pages", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "pages"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "pages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"pages\"", "created_at": 1699414207.68085}, "source.mattermost_analytics.mattermost2.permissions_general": {"database": "RAW", "schema": "mattermost2", "name": "permissions_general", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.permissions_general", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "permissions_general"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "permissions_general", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"permissions_general\"", "created_at": 1699414207.6809149}, "source.mattermost_analytics.mattermost2.permissions_system_scheme": {"database": "RAW", "schema": "mattermost2", "name": "permissions_system_scheme", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.permissions_system_scheme", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "permissions_system_scheme"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "permissions_system_scheme", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"permissions_system_scheme\"", "created_at": 1699414207.680982}, "source.mattermost_analytics.mattermost2.permissions_team_schemes": {"database": "RAW", "schema": "mattermost2", "name": "permissions_team_schemes", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.permissions_team_schemes", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "permissions_team_schemes"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "permissions_team_schemes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"permissions_team_schemes\"", "created_at": 1699414207.681045}, "source.mattermost_analytics.mattermost2.plugins": {"database": "RAW", "schema": "mattermost2", "name": "plugins", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.plugins", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "plugins"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "plugins", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"plugins\"", "created_at": 1699414207.68111}, "source.mattermost_analytics.mattermost2.server": {"database": "RAW", "schema": "mattermost2", "name": "server", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.server", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "server"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "server", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"server\"", "created_at": 1699414207.681175}, "source.mattermost_analytics.mattermost2.tracks": {"database": "RAW", "schema": "mattermost2", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.tracks", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "tracks"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"tracks\"", "created_at": 1699414207.681238}, "source.mattermost_analytics.mattermost2.users": {"database": "RAW", "schema": "mattermost2", "name": "users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermost2/_mattermost2__sources.yml", "original_file_path": "models/staging/mattermost2/_mattermost2__sources.yml", "unique_id": "source.mattermost_analytics.mattermost2.users", "fqn": ["mattermost_analytics", "staging", "mattermost2", "mattermost2", "users"], "source_name": "mattermost2", "source_description": "Product telemetry data. \nTelemetry for older versions of Mattermost (up to 5.x). Telemetry is pushed via Segment\n(see [source](https://app.segment.com/smarttotem/sources/mattermost2/settings/sql)).\n", "loader": "Segment", "identifier": "users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["segment"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermost2\".\"users\"", "created_at": 1699414207.681303}, "source.mattermost_analytics.mm_telemetry_prod._groups": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "_groups", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod._groups", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "_groups"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "_groups", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw server-level group data as a single row per server per timestamp.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"_groups\"", "created_at": 1699414207.681373}, "source.mattermost_analytics.mm_telemetry_prod.activity": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "activity", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.activity", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "activity"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "activity", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw server-level activity at a given point in time/on a specific date. Includes number of posts, channels, slash commands, api calls, bot accounts, etc.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"activity\"", "created_at": 1699414207.68144}, "source.mattermost_analytics.mm_telemetry_prod.blocks": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "blocks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.blocks", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "blocks"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "blocks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"blocks\"", "created_at": 1699414207.681504}, "source.mattermost_analytics.mm_telemetry_prod.boards": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "boards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.boards", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "boards"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "boards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"boards\"", "created_at": 1699414207.68157}, "source.mattermost_analytics.mm_telemetry_prod.channel_moderation": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "channel_moderation", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.channel_moderation", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "channel_moderation"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "channel_moderation", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw server-level channel data as a single row per server per timestamp.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"channel_moderation\"", "created_at": 1699414207.6816351}, "source.mattermost_analytics.mm_telemetry_prod.config": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config\"", "created_at": 1699414207.6817}, "source.mattermost_analytics.mm_telemetry_prod.config_analytics": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_analytics", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_analytics", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_analytics"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_analytics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server analytics configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_analytics\"", "created_at": 1699414207.6817658}, "source.mattermost_analytics.mm_telemetry_prod.config_announcement": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_announcement", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_announcement", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_announcement"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_announcement", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server announcements configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_announcement\"", "created_at": 1699414207.68183}, "source.mattermost_analytics.mm_telemetry_prod.config_audit": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_audit", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_audit", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_audit"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_audit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server Audit configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_audit\"", "created_at": 1699414207.6818938}, "source.mattermost_analytics.mm_telemetry_prod.config_bleve": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_bleve", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_bleve", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_bleve"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_bleve", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server Bleve configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_bleve\"", "created_at": 1699414207.681961}, "source.mattermost_analytics.mm_telemetry_prod.config_client_requirements": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_client_requirements", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_client_requirements", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_client_requirements"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_client_requirements", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server client requirements configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_client_requirements\"", "created_at": 1699414207.682026}, "source.mattermost_analytics.mm_telemetry_prod.config_cluster": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_cluster", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_cluster", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_cluster"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_cluster", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server cluster configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_cluster\"", "created_at": 1699414207.68209}, "source.mattermost_analytics.mm_telemetry_prod.config_compliance": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_compliance", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_compliance", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_compliance"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_compliance", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server compliance configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_compliance\"", "created_at": 1699414207.682157}, "source.mattermost_analytics.mm_telemetry_prod.config_data_retention": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_data_retention", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_data_retention", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_data_retention"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_data_retention", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server data retention configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_data_retention\"", "created_at": 1699414207.682224}, "source.mattermost_analytics.mm_telemetry_prod.config_display": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_display", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_display", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_display"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_display", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server disply configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_display\"", "created_at": 1699414207.6822872}, "source.mattermost_analytics.mm_telemetry_prod.config_elasticsearch": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_elasticsearch", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_elasticsearch", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_elasticsearch"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_elasticsearch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server ElasticSearch configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_elasticsearch\"", "created_at": 1699414207.6823528}, "source.mattermost_analytics.mm_telemetry_prod.config_email": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_email", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_email", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_email"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_email", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server email configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_email\"", "created_at": 1699414207.6824179}, "source.mattermost_analytics.mm_telemetry_prod.config_experimental": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_experimental", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_experimental", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_experimental"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_experimental", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server experimental configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_experimental\"", "created_at": 1699414207.682484}, "source.mattermost_analytics.mm_telemetry_prod.config_export": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_export", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_export", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_export"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_export", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server export configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_export\"", "created_at": 1699414207.682548}, "source.mattermost_analytics.mm_telemetry_prod.config_feature_flags": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_feature_flags", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_feature_flags", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_feature_flags"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_feature_flags", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw server-level split.io feature flag data as a single row per server per timestamp.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_feature_flags\"", "created_at": 1699414207.6826172}, "source.mattermost_analytics.mm_telemetry_prod.config_file": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_file", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_file", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_file"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_file", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server file configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_file\"", "created_at": 1699414207.6826801}, "source.mattermost_analytics.mm_telemetry_prod.config_guest_accounts": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_guest_accounts", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_guest_accounts", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_guest_accounts"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_guest_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server guest account configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_guest_accounts\"", "created_at": 1699414207.682744}, "source.mattermost_analytics.mm_telemetry_prod.config_image_proxy": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_image_proxy", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_image_proxy", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_image_proxy"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_image_proxy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server image proxy configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_image_proxy\"", "created_at": 1699414207.682809}, "source.mattermost_analytics.mm_telemetry_prod.config_ldap": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_ldap", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_ldap", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_ldap"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_ldap", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server LDAP configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_ldap\"", "created_at": 1699414207.6828759}, "source.mattermost_analytics.mm_telemetry_prod.config_localization": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_localization", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_localization", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_localization"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_localization", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server localization configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_localization\"", "created_at": 1699414207.682941}, "source.mattermost_analytics.mm_telemetry_prod.config_log": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_log", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_log", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_log"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server log configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_log\"", "created_at": 1699414207.683006}, "source.mattermost_analytics.mm_telemetry_prod.config_message_export": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_message_export", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_message_export", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_message_export"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_message_export", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server message export configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_message_export\"", "created_at": 1699414207.683072}, "source.mattermost_analytics.mm_telemetry_prod.config_metrics": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_metrics", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_metrics", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_metrics"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_metrics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server metrics configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_metrics\"", "created_at": 1699414207.683136}, "source.mattermost_analytics.mm_telemetry_prod.config_nativeapp": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_nativeapp", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_nativeapp", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_nativeapp"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_nativeapp", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server Native App configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_nativeapp\"", "created_at": 1699414207.6832}, "source.mattermost_analytics.mm_telemetry_prod.config_notifications_log": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_notifications_log", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_notifications_log", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_notifications_log"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_notifications_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server notifications log configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_notifications_log\"", "created_at": 1699414207.68328}, "source.mattermost_analytics.mm_telemetry_prod.config_oauth": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_oauth", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_oauth", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_oauth"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_oauth", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server OAuth configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_oauth\"", "created_at": 1699414207.683346}, "source.mattermost_analytics.mm_telemetry_prod.config_password": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_password", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_password", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_password"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_password", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server password configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_password\"", "created_at": 1699414207.683412}, "source.mattermost_analytics.mm_telemetry_prod.config_plugin": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_plugin", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_plugin", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_plugin"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_plugin", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server plugin configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_plugin\"", "created_at": 1699414207.683476}, "source.mattermost_analytics.mm_telemetry_prod.config_privacy": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_privacy", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_privacy", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_privacy"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_privacy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server privacy configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_privacy\"", "created_at": 1699414207.6835399}, "source.mattermost_analytics.mm_telemetry_prod.config_rate": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_rate", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_rate", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_rate"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_rate", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server rate configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_rate\"", "created_at": 1699414207.683605}, "source.mattermost_analytics.mm_telemetry_prod.config_saml": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_saml", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_saml", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_saml"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_saml", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server SAML configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_saml\"", "created_at": 1699414207.683668}, "source.mattermost_analytics.mm_telemetry_prod.config_service": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_service", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_service", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_service"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_service", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server service configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_service\"", "created_at": 1699414207.683736}, "source.mattermost_analytics.mm_telemetry_prod.config_sql": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_sql", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_sql", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_sql"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_sql", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server sql configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_sql\"", "created_at": 1699414207.6838028}, "source.mattermost_analytics.mm_telemetry_prod.config_support": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_support", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_support", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_support"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_support", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server support configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_support\"", "created_at": 1699414207.683867}, "source.mattermost_analytics.mm_telemetry_prod.config_team": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_team", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_team", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_team"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_team", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server team configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_team\"", "created_at": 1699414207.6839318}, "source.mattermost_analytics.mm_telemetry_prod.config_theme": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "config_theme", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.config_theme", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "config_theme"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "config_theme", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The raw Server theme configuration data sent to Mattermost by Telemetry-Enabled Servers.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"config_theme\"", "created_at": 1699414207.683997}, "source.mattermost_analytics.mm_telemetry_prod.elasticsearch": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "elasticsearch", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.elasticsearch", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "elasticsearch"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "elasticsearch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw server-level ElasticSearch data as a single row per server per timestamp.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"elasticsearch\"", "created_at": 1699414207.6840599}, "source.mattermost_analytics.mm_telemetry_prod.event": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "event", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.event", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "event"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "event", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw user-level event data as a single row per event. Source is mattermost webapp ([code](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts#L35))\n", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["mattermost-webapp", "rudderstack", "tracks"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"event\"", "created_at": 1699414207.684126}, "source.mattermost_analytics.mm_telemetry_prod.identifies": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "identifies", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.identifies", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "identifies"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw user-level data from rudderstack identifies method.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"identifies\"", "created_at": 1699414207.684191}, "source.mattermost_analytics.mm_telemetry_prod.inactive_server": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "inactive_server", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.inactive_server", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "inactive_server"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "inactive_server", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Tracks inactive servers if inactivity job is enabled at the servers. Populated via Rudderstack `track`.\nNote that in order for inactivity check to take place, the following conditions must apply:\n\n- Server **MUST NOT** be in developer mode.\n- Inactivity email **MUST** be enabled.\n- `EnableInactivityCheckJob` feature flag **MUST** be enabled.\nSource is mattermost server ([code](https://github.com/mattermost/mattermost-server/blob/master/app/server_inactivity.go#L81))\n", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["mattermost-server", "rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"inactive_server\"", "created_at": 1699414207.684254}, "source.mattermost_analytics.mm_telemetry_prod.inactive_server_emails_sent": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "inactive_server_emails_sent", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.inactive_server_emails_sent", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "inactive_server_emails_sent"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "inactive_server_emails_sent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Tracks whether email has been sent to the admin for notifying them of server inactivity. Populated via\nRudderstack `track`. The same rules as in `inactive_server` apply for events to be sent via Rudderstack. \nSource is mattermost server ([code](https://github.com/mattermost/mattermost-server/blob/master/app/server_inactivity.go#L118)).\n", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["mattermost-server", "rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"inactive_server_emails_sent\"", "created_at": 1699414207.684319}, "source.mattermost_analytics.mm_telemetry_prod.license": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "license", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.license", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "license"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "license", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Daily license data", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"license\"", "created_at": 1699414207.684384}, "source.mattermost_analytics.mm_telemetry_prod.pages": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "pages", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.pages", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "pages"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "pages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw user-level data from rudderstack pages method.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"pages\"", "created_at": 1699414207.684449}, "source.mattermost_analytics.mm_telemetry_prod.permissions_general": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "permissions_general", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.permissions_general", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "permissions_general"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "permissions_general", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains the raw general permissions for each server at a given point in time/on a specific date.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"permissions_general\"", "created_at": 1699414207.684515}, "source.mattermost_analytics.mm_telemetry_prod.permissions_system_scheme": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "permissions_system_scheme", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.permissions_system_scheme", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "permissions_system_scheme"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "permissions_system_scheme", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains the raw system scheme permissions for each server's user type at a given point in time/on a specific date - system admin, team guest user, system user, team admin, channel admin, channel guest, and channel user", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"permissions_system_scheme\"", "created_at": 1699414207.68458}, "source.mattermost_analytics.mm_telemetry_prod.permissions_team_schemes": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "permissions_team_schemes", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.permissions_team_schemes", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "permissions_team_schemes"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "permissions_team_schemes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains the raw team scheme permissions for each server's user type at a given point in time/on a specific date - team guest, channel admin, channel user, team admin, channel guest, and team user.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"permissions_team_schemes\"", "created_at": 1699414207.6846452}, "source.mattermost_analytics.mm_telemetry_prod.plugins": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "plugins", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.plugins", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "plugins"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "plugins", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains the raw plugin configurations of a server at a given point in time. Represented by integer counts. No plugin names or details provided.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"plugins\"", "created_at": 1699414207.6847098}, "source.mattermost_analytics.mm_telemetry_prod.products": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "products", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.products", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "products"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"products\"", "created_at": 1699414207.6847749}, "source.mattermost_analytics.mm_telemetry_prod.rudder_discards": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.rudder_discards", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "rudder_discards"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"rudder_discards\"", "created_at": 1699414207.68484}, "source.mattermost_analytics.mm_telemetry_prod.server": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "server", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.server", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "server"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "server", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Daily server data", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"server\"", "created_at": 1699414207.684906}, "source.mattermost_analytics.mm_telemetry_prod.teams": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "teams", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.teams", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "teams"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "teams", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"teams\"", "created_at": 1699414207.684971}, "source.mattermost_analytics.mm_telemetry_prod.track_invite_email_resend": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "track_invite_email_resend", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.track_invite_email_resend", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "track_invite_email_resend"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "track_invite_email_resend", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"track_invite_email_resend\"", "created_at": 1699414207.685036}, "source.mattermost_analytics.mm_telemetry_prod.tracks": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.tracks", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "tracks"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw user-level data from rudderstack track method. Note that for every `track` call, RudderStack creates a record in both the `tracks` and `<event_name>` tables.\n", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"tracks\"", "created_at": 1699414207.6851032}, "source.mattermost_analytics.mm_telemetry_prod.users": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.users", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "users"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"users\"", "created_at": 1699414207.685168}, "source.mattermost_analytics.mm_telemetry_prod.warn_metrics": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "warn_metrics", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.warn_metrics", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "warn_metrics"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "warn_metrics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Contains raw server-level warn metrics data as a single row per server per timestamp. Warn metrics are banner notifications when servers are reaching registered user thresholds.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"warn_metrics\"", "created_at": 1699414207.6852312}, "source.mattermost_analytics.mm_telemetry_prod.welcome_message_sent": {"database": "RAW", "schema": "mm_telemetry_prod", "name": "welcome_message_sent", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "original_file_path": "models/staging/mm_telemetry_prod/_mm_telemetry_prod__sources.yml", "unique_id": "source.mattermost_analytics.mm_telemetry_prod.welcome_message_sent", "fqn": ["mattermost_analytics", "staging", "mm_telemetry_prod", "mm_telemetry_prod", "welcome_message_sent"], "source_name": "mm_telemetry_prod", "source_description": "Mattermost server and webapp telemetry data. Stored using Rudderstack. Rudderstack documentations offers an\nin-depth documentation of the [warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/).\n\nThis schema contains production data.\n\n[Server source](https://github.com/mattermost/mattermost-server/blob/master/services/telemetry/telemetry.go)\n[Webapp source](https://github.com/mattermost/mattermost-webapp/blob/master/packages/mattermost-redux/src/client/rudder.ts)\n", "loader": "Rudderstack", "identifier": "welcome_message_sent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mm_telemetry_prod\".\"welcome_message_sent\"", "created_at": 1699414207.685296}, "source.mattermost_analytics.mattermostcom.aliases": {"database": "RAW", "schema": "mattermostcom", "name": "aliases", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.aliases", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "aliases"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "aliases", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"aliases\"", "created_at": 1699414207.685363}, "source.mattermost_analytics.mattermostcom.pages": {"database": "RAW", "schema": "mattermostcom", "name": "pages", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.pages", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "pages"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "pages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "The Integrations & WWW Mattermost Web Property User-Level Page Views.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"pages\"", "created_at": 1699414207.685429}, "source.mattermost_analytics.mattermostcom.identifies": {"database": "RAW", "schema": "mattermostcom", "name": "identifies", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.identifies", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "identifies"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "User identifying information from users visiting Integrations & WWW Mattermost Web Property.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"identifies\"", "created_at": 1699414207.685494}, "source.mattermost_analytics.mattermostcom.users": {"database": "RAW", "schema": "mattermostcom", "name": "users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.users", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "users"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Information pertaining to the user and purchased license (subscription_id) for users that successfully purchased a license via the Mattermost Customer Portal (customers.mattermost.com).", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"users\"", "created_at": 1699414207.68556}, "source.mattermost_analytics.mattermostcom.marketo_form_submit": {"database": "RAW", "schema": "mattermostcom", "name": "marketo_form_submit", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.marketo_form_submit", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "marketo_form_submit"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "marketo_form_submit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Raw Marketo Form Submit data.", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"marketo_form_submit\"", "created_at": 1699414207.685623}, "source.mattermost_analytics.mattermostcom.tracks": {"database": "RAW", "schema": "mattermostcom", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.tracks", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "tracks"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"tracks\"", "created_at": 1699414207.685688}, "source.mattermost_analytics.mattermostcom.groups": {"database": "RAW", "schema": "mattermostcom", "name": "groups", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.groups", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "groups"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "groups", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"groups\"", "created_at": 1699414207.6857522}, "source.mattermost_analytics.mattermostcom.free_trial_clicked": {"database": "RAW", "schema": "mattermostcom", "name": "free_trial_clicked", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.free_trial_clicked", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "free_trial_clicked"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "free_trial_clicked", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"free_trial_clicked\"", "created_at": 1699414207.685817}, "source.mattermost_analytics.mattermostcom.rudder_discards": {"database": "RAW", "schema": "mattermostcom", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.rudder_discards", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "rudder_discards"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"rudder_discards\"", "created_at": 1699414207.685882}, "source.mattermost_analytics.mattermostcom.screens": {"database": "RAW", "schema": "mattermostcom", "name": "screens", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "original_file_path": "models/staging/mattermostcom/_mattermostcom__sources.yml", "unique_id": "source.mattermost_analytics.mattermostcom.screens", "fqn": ["mattermost_analytics", "staging", "mattermostcom", "mattermostcom", "screens"], "source_name": "mattermostcom", "source_description": "Mattermost.com events captured using Rudderstack's JS framework.\n", "loader": "Rudderstack", "identifier": "screens", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"mattermostcom\".\"screens\"", "created_at": 1699414207.68596}, "source.mattermost_analytics.hacktoberboard_prod.activity": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "activity", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.activity", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "activity"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "activity", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"activity\"", "created_at": 1699414207.686025}, "source.mattermost_analytics.hacktoberboard_prod.blocks": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "blocks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.blocks", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "blocks"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "blocks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"blocks\"", "created_at": 1699414207.6861}, "source.mattermost_analytics.hacktoberboard_prod.boards": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "boards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.boards", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "boards"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "boards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"boards\"", "created_at": 1699414207.686165}, "source.mattermost_analytics.hacktoberboard_prod.config": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "config", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.config", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "config"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "config", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"config\"", "created_at": 1699414207.6862311}, "source.mattermost_analytics.hacktoberboard_prod.event": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "event", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.event", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "event"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "event", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"event\"", "created_at": 1699414207.686296}, "source.mattermost_analytics.hacktoberboard_prod.identifies": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "identifies", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.identifies", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "identifies"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"identifies\"", "created_at": 1699414207.686362}, "source.mattermost_analytics.hacktoberboard_prod.pages": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "pages", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.pages", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "pages"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "pages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"pages\"", "created_at": 1699414207.6864262}, "source.mattermost_analytics.hacktoberboard_prod.rudder_discards": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "rudder_discards", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.rudder_discards", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "rudder_discards"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "rudder_discards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"rudder_discards\"", "created_at": 1699414207.6864908}, "source.mattermost_analytics.hacktoberboard_prod.server": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "server", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.server", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "server"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "server", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"server\"", "created_at": 1699414207.686558}, "source.mattermost_analytics.hacktoberboard_prod.teams": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "teams", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.teams", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "teams"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "teams", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"teams\"", "created_at": 1699414207.6866229}, "source.mattermost_analytics.hacktoberboard_prod.tracks": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "tracks", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.tracks", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "tracks"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "tracks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"tracks\"", "created_at": 1699414207.6866891}, "source.mattermost_analytics.hacktoberboard_prod.users": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "users", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.users", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "users"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"users\"", "created_at": 1699414207.686754}, "source.mattermost_analytics.hacktoberboard_prod.workspaces": {"database": "RAW", "schema": "hacktoberboard_prod", "name": "workspaces", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "original_file_path": "models/staging/hacktoberboard_prod/_hacktoberboard_prod__sources.yml", "unique_id": "source.mattermost_analytics.hacktoberboard_prod.workspaces", "fqn": ["mattermost_analytics", "staging", "hacktoberboard_prod", "hacktoberboard_prod", "workspaces"], "source_name": "hacktoberboard_prod", "source_description": "Focalboard telemetry data, pushed via Rudderstack.\n\n[Source code](https://github.com/mattermost/focalboard/blob/main/server/services/telemetry/telemetry.go)\n", "loader": "Rudderstack", "identifier": "workspaces", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["rudderstack"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"RAW\".\"hacktoberboard_prod\".\"workspaces\"", "created_at": 1699414207.686819}, "source.mattermost_analytics.stripe._sdc_rejected": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "_sdc_rejected", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe._sdc_rejected", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "_sdc_rejected"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "_sdc_rejected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"record": {"name": "record", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "table_name": {"name": "table_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_rejected_at": {"name": "_sdc_rejected_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"_sdc_rejected\"", "created_at": 1699414207.6868968}, "source.mattermost_analytics.stripe.balance_transactions": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "balance_transactions", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.balance_transactions", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "balance_transactions"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "balance_transactions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "available_on": {"name": "available_on", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fee": {"name": "fee", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fee_details": {"name": "fee_details", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "net": {"name": "net", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"balance_transactions\"", "created_at": 1699414207.686993}, "source.mattermost_analytics.stripe.charges": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "charges", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.charges", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "charges"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "charges", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_captured": {"name": "amount_captured", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_refunded": {"name": "amount_refunded", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "balance_transaction": {"name": "balance_transaction", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_details": {"name": "billing_details", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "calculated_statement_descriptor": {"name": "calculated_statement_descriptor", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "captured": {"name": "captured", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "card": {"name": "card", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer": {"name": "customer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dispute": {"name": "dispute", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "disputed": {"name": "disputed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "failure_code": {"name": "failure_code", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "failure_message": {"name": "failure_message", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fraud_details": {"name": "fraud_details", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice": {"name": "invoice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outcome": {"name": "outcome", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paid": {"name": "paid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_intent": {"name": "payment_intent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method_details": {"name": "payment_method_details", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receipt_number": {"name": "receipt_number", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receipt_url": {"name": "receipt_url", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "refunded": {"name": "refunded", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "refunds": {"name": "refunds", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"charges\"", "created_at": 1699414207.687121}, "source.mattermost_analytics.stripe.coupons": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "coupons", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.coupons", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "coupons"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "coupons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duration": {"name": "duration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duration_in_months": {"name": "duration_in_months", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "percent_off": {"name": "percent_off", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "percent_off_precise": {"name": "percent_off_precise", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "times_redeemed": {"name": "times_redeemed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid": {"name": "valid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"coupons\"", "created_at": 1699414207.687216}, "source.mattermost_analytics.stripe.customers": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "customers", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.customers", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "customers"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "customers", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"account_balance": {"name": "account_balance", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "balance": {"name": "balance", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cards": {"name": "cards", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delinquent": {"name": "delinquent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_prefix": {"name": "invoice_prefix", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_settings": {"name": "invoice_settings", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "next_invoice_sequence": {"name": "next_invoice_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preferred_locales": {"name": "preferred_locales", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sources": {"name": "sources", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscriptions": {"name": "subscriptions", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_exempt": {"name": "tax_exempt", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default_source": {"name": "default_source", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_ids": {"name": "tax_ids", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default_card": {"name": "default_card", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"customers\"", "created_at": 1699414207.68735}, "source.mattermost_analytics.stripe.disputes": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "disputes", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.disputes", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "disputes"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "disputes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "balance_transactions": {"name": "balance_transactions", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "charge": {"name": "charge", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "evidence_details": {"name": "evidence_details", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_charge_refundable": {"name": "is_charge_refundable", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason": {"name": "reason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "evidence": {"name": "evidence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"disputes\"", "created_at": 1699414207.687445}, "source.mattermost_analytics.stripe.invoice_items": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "invoice_items", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.invoice_items", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "invoice_items"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "invoice_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer": {"name": "customer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discountable": {"name": "discountable", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discounts": {"name": "discounts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice": {"name": "invoice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period": {"name": "period", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plan": {"name": "plan", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proration": {"name": "proration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription": {"name": "subscription", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription_item": {"name": "subscription_item", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_rates": {"name": "tax_rates", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unit_amount": {"name": "unit_amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unit_amount_decimal": {"name": "unit_amount_decimal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"invoice_items\"", "created_at": 1699414207.687552}, "source.mattermost_analytics.stripe.invoice_line_items": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "invoice_line_items", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.invoice_line_items", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "invoice_line_items"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "invoice_line_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discountable": {"name": "discountable", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discounts": {"name": "discounts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_amounts": {"name": "discount_amounts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice": {"name": "invoice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_item": {"name": "invoice_item", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period": {"name": "period", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plan": {"name": "plan", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proration": {"name": "proration", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proration_details": {"name": "proration_details", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription": {"name": "subscription", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription_item": {"name": "subscription_item", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_amounts": {"name": "tax_amounts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_rates": {"name": "tax_rates", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"invoice_line_items\"", "created_at": 1699414207.687655}, "source.mattermost_analytics.stripe.invoices": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "invoices", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.invoices", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "invoices"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "invoices", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"account_country": {"name": "account_country", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_name": {"name": "account_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_due": {"name": "amount_due", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_paid": {"name": "amount_paid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_remaining": {"name": "amount_remaining", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attempted": {"name": "attempted", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attempt_count": {"name": "attempt_count", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "automatic_tax": {"name": "automatic_tax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "auto_advance": {"name": "auto_advance", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_reason": {"name": "billing_reason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "charge": {"name": "charge", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "collection_method": {"name": "collection_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer": {"name": "customer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_address": {"name": "customer_address", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_email": {"name": "customer_email", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_shipping": {"name": "customer_shipping", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_tax_exempt": {"name": "customer_tax_exempt", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_tax_ids": {"name": "customer_tax_ids", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default_tax_rates": {"name": "default_tax_rates", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discounts": {"name": "discounts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "due_date": {"name": "due_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ending_balance": {"name": "ending_balance", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "footer": {"name": "footer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hosted_invoice_url": {"name": "hosted_invoice_url", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_pdf": {"name": "invoice_pdf", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lines": {"name": "lines", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number": {"name": "number", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paid": {"name": "paid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paid_out_of_band": {"name": "paid_out_of_band", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_intent": {"name": "payment_intent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_settings": {"name": "payment_settings", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period_end": {"name": "period_end", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period_start": {"name": "period_start", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_payment_credit_notes_amount": {"name": "post_payment_credit_notes_amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pre_payment_credit_notes_amount": {"name": "pre_payment_credit_notes_amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receipt_number": {"name": "receipt_number", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "starting_balance": {"name": "starting_balance", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_transitions": {"name": "status_transitions", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription": {"name": "subscription", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax": {"name": "tax", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_discount_amounts": {"name": "total_discount_amounts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_tax_amounts": {"name": "total_tax_amounts", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "webhooks_delivered_at": {"name": "webhooks_delivered_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "next_payment_attempt": {"name": "next_payment_attempt", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment": {"name": "payment", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forgiven": {"name": "forgiven", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing": {"name": "billing", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_percent": {"name": "tax_percent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finalized_at": {"name": "finalized_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "closed": {"name": "closed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"invoices\"", "created_at": 1699414207.6878111}, "source.mattermost_analytics.stripe.payment_intents": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "payment_intents", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.payment_intents", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "payment_intents"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "payment_intents", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_capturable": {"name": "amount_capturable", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_received": {"name": "amount_received", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "canceled_at": {"name": "canceled_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cancellation_reason": {"name": "cancellation_reason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "capture_method": {"name": "capture_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "charges": {"name": "charges", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "client_secret": {"name": "client_secret", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "confirmation_method": {"name": "confirmation_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer": {"name": "customer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice": {"name": "invoice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_payment_error": {"name": "last_payment_error", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method_options": {"name": "payment_method_options", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method_types": {"name": "payment_method_types", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "review": {"name": "review", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "setup_future_usage": {"name": "setup_future_usage", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "next_action": {"name": "next_action", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"payment_intents\"", "created_at": 1699414207.687938}, "source.mattermost_analytics.stripe.payout_transactions": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "payout_transactions", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.payout_transactions", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "payout_transactions"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "payout_transactions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payout_id": {"name": "payout_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"payout_transactions\"", "created_at": 1699414207.688016}, "source.mattermost_analytics.stripe.payouts": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "payouts", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.payouts", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "payouts"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "payouts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"amount": {"name": "amount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_reversed": {"name": "amount_reversed", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "arrival_date": {"name": "arrival_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "automatic": {"name": "automatic", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "balance_transaction": {"name": "balance_transaction", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bank_account": {"name": "bank_account", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "destination": {"name": "destination", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "method": {"name": "method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_type": {"name": "source_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"payouts\"", "created_at": 1699414207.688117}, "source.mattermost_analytics.stripe.products": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "products", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.products", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "products"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"active": {"name": "active", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributes": {"name": "attributes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "images": {"name": "images", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shippable": {"name": "shippable", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unit_label": {"name": "unit_label", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deactivate_on": {"name": "deactivate_on", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"products\"", "created_at": 1699414207.688211}, "source.mattermost_analytics.stripe.subscription_items": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "subscription_items", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.subscription_items", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "subscription_items"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "subscription_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plan": {"name": "plan", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscription": {"name": "subscription", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_rates": {"name": "tax_rates", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"subscription_items\"", "created_at": 1699414207.6882958}, "source.mattermost_analytics.stripe.subscriptions": {"database": "ANALYTICS", "schema": "stripe_raw", "name": "subscriptions", "resource_type": "source", "package_name": "mattermost_analytics", "path": "models/staging/stripe/_stripe__sources.yml", "original_file_path": "models/staging/stripe/_stripe__sources.yml", "unique_id": "source.mattermost_analytics.stripe.subscriptions", "fqn": ["mattermost_analytics", "staging", "stripe", "stripe", "subscriptions"], "source_name": "stripe", "source_description": "Copy of Stripe raw data.\n", "loader": "Stitch", "identifier": "subscriptions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"billing": {"name": "billing", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_cycle_anchor": {"name": "billing_cycle_anchor", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cancel_at_period_end": {"name": "cancel_at_period_end", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "collection_method": {"name": "collection_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_period_end": {"name": "current_period_end", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_period_start": {"name": "current_period_start", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer": {"name": "customer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_customer_balance_settings": {"name": "invoice_customer_balance_settings", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "items": {"name": "items", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "latest_invoice": {"name": "latest_invoice", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "livemode": {"name": "livemode", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "metadata": {"name": "metadata", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "object": {"name": "object", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pending_setup_intent": {"name": "pending_setup_intent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "plan": {"name": "plan", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start": {"name": "start", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_date": {"name": "start_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated": {"name": "updated", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_batched_at": {"name": "_sdc_batched_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_extracted_at": {"name": "_sdc_extracted_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_received_at": {"name": "_sdc_received_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_sequence": {"name": "_sdc_sequence", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_sdc_table_version": {"name": "_sdc_table_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_start": {"name": "trial_start", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_percent": {"name": "tax_percent", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ended_at": {"name": "ended_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trial_end": {"name": "trial_end", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "canceled_at": {"name": "canceled_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_event_type": {"name": "updated_by_event_type", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default_payment_method": {"name": "default_payment_method", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cancel_at": {"name": "cancel_at", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pause_collection": {"name": "pause_collection", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "days_until_due": {"name": "days_until_due", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["stitch"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"ANALYTICS\".\"stripe_raw\".\"subscriptions\"", "created_at": 1699414207.688411}}, "macros": {"macro.mattermost_analytics.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/generate_schema_name.sql", "original_file_path": "macros/generate_schema_name.sql", "unique_id": "macro.mattermost_analytics.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n    {{ generate_schema_name_for_env(custom_schema_name, node) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.generate_schema_name_for_env"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.379841, "supported_languages": null}, "macro.mattermost_analytics.join_tracks_event_tables": {"name": "join_tracks_event_tables", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/rudderstack/join_tracks_event_tables.sql", "original_file_path": "macros/rudderstack/join_tracks_event_tables.sql", "unique_id": "macro.mattermost_analytics.join_tracks_event_tables", "macro_sql": "{% macro join_tracks_event_tables(schema, columns=[]) -%}\n    {%-\n        set rudderstack_tables = ['IDENTIFIES', 'USERS', 'TRACKS', 'PAGES', 'SCREENS', 'GROUPS', 'ALIASES', 'RUDDER_DISCARDS']\n    -%}\n    {%- set all_relations = dbt_utils.get_relations_by_pattern(schema, '%', database='RAW') | list -%}\n    {%- set relations = all_relations | rejectattr('identifier', 'in', rudderstack_tables) | list -%}\n    {%- set include = get_base_event_columns() -%}\n\n    {%- if columns -%}\n        {# If user defined columns to keep, filter them #}\n        {{\n            dbt_utils.union_relations(\n                relations=relations,\n                include=columns,\n                source_column_name=None\n            )\n        }}\n    {%- else -%}\n        {# Keep all columns #}\n        {{\n            dbt_utils.union_relations(\n                relations=relations,\n                source_column_name=None\n            )\n        }}\n    {%- endif -%}\n\n{%- endmacro%}", "depends_on": {"macros": ["macro.dbt_utils.get_relations_by_pattern", "macro.mattermost_analytics.get_base_event_columns", "macro.dbt_utils.union_relations"]}, "description": "A macro that joins event tables to a single table, keeping the extra columns. \n\nRudderstack stores one row in two tables for each event. \n- `tracks`, which holds generic information about the event, and\n- `event_name`, which holds the extra user defined properties. \n\nThis macro joins all tables except the default tables defined in\n[warehouse schema](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema). It also\nallows for filtering which columns to keep. This can be useful in scenarios where events share properties (i.e. \nindicating event hierarchy, A/B test allocations etc).\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://macros/rudderstack/_rudderstack_schema.yml", "arguments": [{"name": "schema", "type": "string", "description": "The schema that contains the event tables."}, {"name": "columns", "type": "list", "description": "The list of columns to keep."}], "created_at": 1699414207.559663, "supported_languages": null}, "macro.mattermost_analytics.get_base_event_columns": {"name": "get_base_event_columns", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/rudderstack/get_base_event_columns.sql", "original_file_path": "macros/rudderstack/get_base_event_columns.sql", "unique_id": "macro.mattermost_analytics.get_base_event_columns", "macro_sql": "{% macro get_base_event_columns() -%}\n    {{ return(['ID', 'RECEIVED_AT', 'EVENT', 'EVENT_TEXT', 'CATEGORY', 'TYPE', 'USER_ID', 'USER_ACTUAL_ID', 'TIMESTAMP']) }}\n{%- endmacro%}", "depends_on": {"macros": []}, "description": "Returns the list of columns to use from rudderstack tables. This list contains columns that are expected to be\nin [every event table](https://www.rudderstack.com/docs/destinations/warehouse-destinations/warehouse-schema/#standard-rudderstack-properties", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://macros/rudderstack/_rudderstack_schema.yml", "arguments": [], "created_at": 1699414207.5612109, "supported_languages": null}, "macro.mattermost_analytics.get_potential_event_tables": {"name": "get_potential_event_tables", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/rudderstack/get_event_relations.sql", "original_file_path": "macros/rudderstack/get_event_relations.sql", "unique_id": "macro.mattermost_analytics.get_potential_event_tables", "macro_sql": "{% macro get_potential_event_tables(schema_pattern, min_rows=100, database=target.database) %}\n    -- Load potential event table by applying heuristics (schema name and minimum number or rows) .\n    -- Based on https://github.com/dbt-labs/dbt-utils/blob/main/macros/sql/get_tables_by_pattern_sql.sql\n    SELECT DISTINCT\n        table_schema AS {{ adapter.quote('table_schema') }},\n        table_name AS {{ adapter.quote('table_name') }},\n        {{ dbt_utils.get_table_types_sql() }}\n    FROM\n        {{ database }}.information_schema.tables\n    WHERE\n        table_schema ILIKE '{{ schema_pattern }}'\n        AND row_count >= {{min_rows}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.382178, "supported_languages": null}, "macro.mattermost_analytics.get_event_relations": {"name": "get_event_relations", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/rudderstack/get_event_relations.sql", "original_file_path": "macros/rudderstack/get_event_relations.sql", "unique_id": "macro.mattermost_analytics.get_event_relations", "macro_sql": "{% macro get_event_relations(schema_pattern, min_rows=100, database=target.database) -%}\n    -- Based on https://github.com/dbt-labs/dbt-utils/blob/main/macros/sql/get_relations_by_pattern.sql.\n    {%- call statement('get_tables', fetch_result=True) %}\n\n        {{ get_potential_event_tables(schema_pattern, min_rows=min_rows, database=database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n    {%-\n        set rudderstack_tables = ['IDENTIFIES', 'USERS', 'TRACKS', 'PAGES', 'SCREENS', 'GROUPS', 'ALIASES', 'RUDDER_DISCARDS']\n    -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- if row.table_name.upper() not in rudderstack_tables -%}\n                {%- set tbl_relation = api.Relation.create(\n                    database=database,\n                    schema=row.table_schema,\n                    identifier=row.table_name,\n                    type=row.table_type\n                ) -%}\n                {%- do tbl_relations.append(tbl_relation) -%}\n            {%- endif -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n{%- endmacro%}", "depends_on": {"macros": ["macro.dbt.statement", "macro.mattermost_analytics.get_potential_event_tables"]}, "description": "Returns a list of tables from the given schema that might be Rudderstack events. Offers functionality for \nfiltering out tables with too few rows.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://macros/rudderstack/_rudderstack_schema.yml", "arguments": [{"name": "schema", "type": "string", "description": "The schema that contains the event tables."}, {"name": "min_rows", "type": "integer", "description": "Keep only tables with rows greater or equal to this value (default 100)."}, {"name": "database", "type": "string", "description": "The database that contains the schema provided as the first argument."}], "created_at": 1699414207.560374, "supported_languages": null}, "macro.mattermost_analytics.get_rudderstack_columns": {"name": "get_rudderstack_columns", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/rudderstack/get_rudderstack_columns.sql", "original_file_path": "macros/rudderstack/get_rudderstack_columns.sql", "unique_id": "macro.mattermost_analytics.get_rudderstack_columns", "macro_sql": "{% macro get_rudderstack_columns() %}\n\n   {%-\n        set rudderstack_columns = ['id', 'anonymous_id', 'received_at', 'sent_at', 'original_timestamp', 'timestamp', \n        'context_ip', 'event', 'event_text']\n    -%}\n\n    {% for column in rudderstack_columns %}\n        {{ column }} AS {{ column }}\n        {% if not loop.last %},{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Returns a list of columns that are default to all rudderstack tables.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://macros/rudderstack/_rudderstack_schema.yml", "arguments": [], "created_at": 1699414207.520461, "supported_languages": null}, "macro.mattermost_analytics.rudder_daily_event_count": {"name": "rudder_daily_event_count", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/rudderstack/rudder_daily_event_count.sql", "original_file_path": "macros/rudderstack/rudder_daily_event_count.sql", "unique_id": "macro.mattermost_analytics.rudder_daily_event_count", "macro_sql": "{% macro rudder_daily_event_count(relation, by_columns=['event_table', 'event_text'], source_name=None) -%}\n\nWITH tmp AS (\n    SELECT\n        -- Surrogate key required as it's both a good practice, as well as allows merge incremental strategy.\n        CAST(received_at AS date) AS received_at_date\n        {% for column_name in by_columns %}\n        , {{ column_name }}\n        {% endfor %}\n        , COUNT(*) AS event_count\n        {% if source_name %}\n        , '{{ source_name }}' AS source\n        {% else %}\n        , '{{ relation.identifier }}' AS source\n        {% endif %}\n    FROM\n        {{ relation }}\n    WHERE\n       received_at <= CURRENT_TIMESTAMP\n{% if is_incremental() %}\n       -- this filter will only be applied on an incremental run\n      AND received_at >= (SELECT MAX(received_at_date) FROM {{ this }})\n{% endif %}\n    GROUP BY received_at_date, {{ ', '.join(by_columns) }}\n    ORDER BY received_at_date, {{ by_columns[0] }}\n)\nSELECT\n    -- Surrogate key required as it's both a good practice, as well as allows merge incremental strategy.\n    {{ dbt_utils.generate_surrogate_key(['received_at_date', 'source'] + by_columns ) }} AS daily_event_id\n    , {{ dbt_utils.generate_surrogate_key(['source'] + by_columns ) }} AS event_id\n    , received_at_date\n    , source\n    {% for column_name in by_columns %}\n    , {{ column_name }}\n    {% endfor %}\n    , event_count\nFROM\n    tmp\n{%- endmacro%}", "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.generate_surrogate_key"]}, "description": "Summarizes a table containing events by grouping and counting them. Grouping is done by date and user \ndefined fields.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://macros/rudderstack/_rudderstack_schema.yml", "arguments": [{"name": "relation", "type": "string", "description": "The relation containing events that will be summarized."}, {"name": "by_columns", "type": "list", "description": "An optional list of the names of additional columns to be used for summarizing events. Default value\nis ['event_table', 'event_text'].\n"}, {"name": "source_name", "type": "string", "description": "An optional name for the source table. If not defined, the name of the relation will be used."}], "created_at": 1699414207.561027, "supported_languages": null}, "macro.mattermost_analytics.create_parse_qs_udf": {"name": "create_parse_qs_udf", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/udf/parse_qs.sql", "original_file_path": "macros/udf/parse_qs.sql", "unique_id": "macro.mattermost_analytics.create_parse_qs_udf", "macro_sql": "{% macro create_parse_qs_udf() %}\n\ncreate function if not exists {{target.schema}}.parse_qs(value varchar)\nreturns object\nlanguage python\nruntime_version = '3.8'\nhandler = 'parse_query_string'\nas\n\n$$\nfrom urllib.parse import parse_qs\n\ndef parse_query_string(value):\n    return { k: v[0] if v else None for k, v in parse_qs(value, keep_blank_values=True).items()}\n$$\n;\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Creates a new UDF called `parse_qs`. This UDF accepts a query string as input and returns an object with all\nthe query parameters. Note that current implementation returns only the first value in case there are multiple\nvalues for the same query parameter.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://macros/udf/_udf_schema.yml", "arguments": [], "created_at": 1699414207.5614982, "supported_languages": null}, "macro.mattermost_analytics.validate_email": {"name": "validate_email", "resource_type": "macro", "package_name": "mattermost_analytics", "path": "macros/validation/validate_email.sql", "original_file_path": "macros/validation/validate_email.sql", "unique_id": "macro.mattermost_analytics.validate_email", "macro_sql": "{% macro validate_email(column) -%}\n    {%-\n        set invalid_chars = ['\\\\\\\\', '/', '(', ')', '&', '$', '^', '&', '!']\n    -%}\n    {{ column }} LIKE '%_@__%.__%' and {{ column }} not like '%@%@%'\n    {% for char in invalid_chars %}\n        and {{ column }} not like '%{{char}}%'\n    {%- endfor %}\n{%- endmacro%}", "depends_on": {"macros": []}, "description": "Basic validation for email addresses. Checks that email address:\n- Contains username followed by `@` and a domain-like string.\n- Contains only a single `@`.\n- Special characters like `\\/()&$^&!` do not exist.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "mattermost_analytics://macros/validation/_validation_schema.yml", "arguments": [{"name": "email", "type": "string", "description": "The column containing email addresses."}], "created_at": 1699414207.561766, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_binding_char": {"name": "duckdb__get_binding_char", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/seed.sql", "original_file_path": "macros/seed.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_binding_char", "macro_sql": "{% macro duckdb__get_binding_char() %}\n  {{ return(adapter.get_binding_char()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.387084, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_batch_size": {"name": "duckdb__get_batch_size", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/seed.sql", "original_file_path": "macros/seed.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_batch_size", "macro_sql": "{% macro duckdb__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.387198, "supported_languages": null}, "macro.dbt_duckdb.duckdb__load_csv_rows": {"name": "duckdb__load_csv_rows", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/seed.sql", "original_file_path": "macros/seed.sql", "unique_id": "macro.dbt_duckdb.duckdb__load_csv_rows", "macro_sql": "{% macro duckdb__load_csv_rows(model, agate_table) %}\n    {% if config.get('fast', true) %}\n        {% set seed_file_path = adapter.get_seed_file_path(model) %}\n        {% set delimiter = config.get('delimiter', ',') %}\n        {% set sql %}\n          COPY {{ this.render() }} FROM '{{ seed_file_path }}' (FORMAT CSV, HEADER TRUE, DELIMITER '{{ delimiter }}')\n        {% endset %}\n        {% do adapter.add_query(sql, abridge_sql_log=True) %}\n        {{ return(sql) }}\n    {% endif %}\n\n    {% set batch_size = get_batch_size() %}\n    {% set agate_table = adapter.convert_datetimes_to_strs(agate_table) %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    {{ get_binding_char() }}\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.3889642, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_merge_sql": {"name": "duckdb__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/snapshot_helper.sql", "original_file_path": "macros/snapshot_helper.sql", "unique_id": "macro.dbt_duckdb.duckdb__snapshot_merge_sql", "macro_sql": "{% macro duckdb__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }} as DBT_INTERNAL_TARGET\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and DBT_INTERNAL_TARGET.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.389806, "supported_languages": null}, "macro.dbt_duckdb.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/snapshot_helper.sql", "original_file_path": "macros/snapshot_helper.sql", "unique_id": "macro.dbt_duckdb.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(False, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.39024, "supported_languages": null}, "macro.dbt_duckdb.duckdb__post_snapshot": {"name": "duckdb__post_snapshot", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/snapshot_helper.sql", "original_file_path": "macros/snapshot_helper.sql", "unique_id": "macro.dbt_duckdb.duckdb__post_snapshot", "macro_sql": "{% macro duckdb__post_snapshot(staging_relation) %}\n    {% do return(drop_relation(staging_relation)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.3904, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_catalog": {"name": "duckdb__get_catalog", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_catalog", "macro_sql": "{% macro duckdb__get_catalog(information_schema, schemas) -%}\n  {%- call statement('catalog', fetch_result=True) -%}\n    select\n        '{{ database }}' as table_database,\n        t.table_schema,\n        t.table_name,\n        t.table_type,\n        '' as table_comment,\n        c.column_name,\n        c.ordinal_position as column_index,\n        c.data_type column_type,\n        '' as column_comment,\n        '' as table_owner\n    FROM information_schema.tables t JOIN information_schema.columns c ON t.table_schema = c.table_schema AND t.table_name = c.table_name\n    WHERE (\n        {%- for schema in schemas -%}\n          upper(t.table_schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n    AND t.table_type IN ('BASE TABLE', 'VIEW')\n    ORDER BY\n        t.table_schema,\n        t.table_name,\n        c.ordinal_position\n  {%- endcall -%}\n  {{ return(load_result('catalog').table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.39102, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_schema": {"name": "duckdb__create_schema", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__create_schema", "macro_sql": "{% macro duckdb__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.397526, "supported_languages": null}, "macro.dbt_duckdb.duckdb__drop_schema": {"name": "duckdb__drop_schema", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__drop_schema", "macro_sql": "{% macro duckdb__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.397696, "supported_languages": null}, "macro.dbt_duckdb.duckdb__list_schemas": {"name": "duckdb__list_schemas", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__list_schemas", "macro_sql": "{% macro duckdb__list_schemas(database) -%}\n  {% set sql %}\n    select schema_name\n    from system.information_schema.schemata\n    {% if database is not none %}\n    where catalog_name = '{{ database }}'\n    {% endif %}\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.397964, "supported_languages": null}, "macro.dbt_duckdb.duckdb__check_schema_exists": {"name": "duckdb__check_schema_exists", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__check_schema_exists", "macro_sql": "{% macro duckdb__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from system.information_schema.schemata\n        where schema_name = '{{ schema }}'\n        and catalog_name = '{{ information_schema.database }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.398201, "supported_languages": null}, "macro.dbt_duckdb.get_column_names": {"name": "get_column_names", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.get_column_names", "macro_sql": "{% macro get_column_names() %}\n  {# loop through user_provided_columns to get column names #}\n    {%- set user_provided_columns = model['columns'] -%}\n    (\n    {% for i in user_provided_columns %}\n      {% set col = user_provided_columns[i] %}\n      {{ col['name'] }} {{ \",\" if not loop.last }}\n    {% endfor %}\n  )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.39854, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_table_as": {"name": "duckdb__create_table_as", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__create_table_as", "macro_sql": "{% macro duckdb__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {%- if language == 'sql' -%}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(compiled_code) }}\n    {% endif %}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none }}\n\n    create {% if temporary: -%}temporary{%- endif %} table\n      {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% if contract_config.enforced and not temporary %}\n    {#-- DuckDB doesnt support constraints on temp tables --#}\n    {{ get_table_columns_and_constraints() }} ;\n    insert into {{ relation }} {{ get_column_names() }} (\n      {{ get_select_subquery(compiled_code) }}\n    );\n  {% else %}\n    as (\n      {{ compiled_code }}\n    );\n  {% endif %}\n  {%- elif language == 'python' -%}\n    {{ py_write_table(temporary=temporary, relation=relation, compiled_code=compiled_code) }}\n  {%- else -%}\n      {% do exceptions.raise_compiler_error(\"duckdb__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt_duckdb.get_column_names", "macro.dbt.get_select_subquery", "macro.dbt_duckdb.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.3995469, "supported_languages": null}, "macro.dbt_duckdb.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.py_write_table", "macro_sql": "{% macro py_write_table(temporary, relation, compiled_code) -%}\n{{ compiled_code }}\n\ndef materialize(df, con):\n    try:\n        import pyarrow\n        pyarrow_available = True\n    except ImportError:\n        pyarrow_available = False\n    finally:\n        if pyarrow_available and isinstance(df, pyarrow.Table):\n            # https://github.com/duckdb/duckdb/issues/6584\n            import pyarrow.dataset\n    con.execute('create table {{ relation }} as select * from df')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.39971, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_view_as": {"name": "duckdb__create_view_as", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__create_view_as", "macro_sql": "{% macro duckdb__create_view_as(relation, sql) -%}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced %}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.400105, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_columns_in_relation": {"name": "duckdb__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_columns_in_relation", "macro_sql": "{% macro duckdb__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from system.information_schema.columns\n      where table_name = '{{ relation.identifier }}'\n      {% if relation.schema %}\n      and table_schema = '{{ relation.schema }}'\n      {% endif %}\n      {% if relation.database %}\n      and table_catalog = '{{ relation.database }}'\n      {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.400587, "supported_languages": null}, "macro.dbt_duckdb.duckdb__list_relations_without_caching": {"name": "duckdb__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__list_relations_without_caching", "macro_sql": "{% macro duckdb__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      table_name as name,\n      table_schema as schema,\n      CASE table_type\n        WHEN 'BASE TABLE' THEN 'table'\n        WHEN 'VIEW' THEN 'view'\n        WHEN 'LOCAL TEMPORARY' THEN 'table'\n        END as type\n    from system.information_schema.tables\n    where table_schema = '{{ schema_relation.schema }}'\n    and table_catalog = '{{ schema_relation.database }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4009159, "supported_languages": null}, "macro.dbt_duckdb.duckdb__drop_relation": {"name": "duckdb__drop_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__drop_relation", "macro_sql": "{% macro duckdb__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4011252, "supported_languages": null}, "macro.dbt_duckdb.duckdb__rename_relation": {"name": "duckdb__rename_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__rename_relation", "macro_sql": "{% macro duckdb__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter {{ to_relation.type }} {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.401414, "supported_languages": null}, "macro.dbt_duckdb.duckdb__make_temp_relation": {"name": "duckdb__make_temp_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__make_temp_relation", "macro_sql": "{% macro duckdb__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix ~ py_current_timestring() %}\n    {% do return(base_relation.incorporate(\n                                  path={\n                                    \"identifier\": tmp_identifier,\n                                    \"schema\": none,\n                                    \"database\": none\n                                  })) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.py_current_timestring"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.401803, "supported_languages": null}, "macro.dbt_duckdb.duckdb__current_timestamp": {"name": "duckdb__current_timestamp", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__current_timestamp", "macro_sql": "{% macro duckdb__current_timestamp() -%}\n  now()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.401877, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_string_as_time": {"name": "duckdb__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__snapshot_string_as_time", "macro_sql": "{% macro duckdb__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4020429, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_get_time": {"name": "duckdb__snapshot_get_time", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__snapshot_get_time", "macro_sql": "{% macro duckdb__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.402139, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_incremental_default_sql": {"name": "duckdb__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_incremental_default_sql", "macro_sql": "{% macro duckdb__get_incremental_default_sql(arg_dict) %}\n  {% do return(get_incremental_delete_insert_sql(arg_dict)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.402279, "supported_languages": null}, "macro.dbt_duckdb.location_exists": {"name": "location_exists", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.location_exists", "macro_sql": "{% macro location_exists(location) -%}\n  {% do return(adapter.location_exists(location)) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.402427, "supported_languages": null}, "macro.dbt_duckdb.write_to_file": {"name": "write_to_file", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.write_to_file", "macro_sql": "{% macro write_to_file(relation, location, options) -%}\n  {% call statement('write_to_file') -%}\n    copy {{ relation }} to '{{ location }}' ({{ options }})\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.402635, "supported_languages": null}, "macro.dbt_duckdb.store_relation": {"name": "store_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.store_relation", "macro_sql": "{% macro store_relation(plugin, relation, location, format, config) -%}\n  {%- set column_list = adapter.get_columns_in_relation(relation) -%}\n  {% do adapter.store_relation(plugin, relation, column_list, location, format, config) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.402922, "supported_languages": null}, "macro.dbt_duckdb.render_write_options": {"name": "render_write_options", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.render_write_options", "macro_sql": "{% macro render_write_options(config) -%}\n  {% set options = config.get('options', {}) %}\n  {% if options is not mapping %}\n    {% do exceptions.raise_compiler_error(\"The options argument must be a dictionary\") %}\n  {% endif %}\n\n  {% for k in options %}\n    {% set _ = options.update({k: render(options[k])}) %}\n  {% endfor %}\n\n  {# legacy top-level write options #}\n  {% if config.get('format') %}\n    {% set _ = options.update({'format': render(config.get('format'))}) %}\n  {% endif %}\n  {% if config.get('delimiter') %}\n    {% set _ = options.update({'delimiter': render(config.get('delimiter'))}) %}\n  {% endif %}\n\n  {% do return(options) %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.403844, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_delete_insert_merge_sql": {"name": "duckdb__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/incremental_helper.sql", "original_file_path": "macros/incremental_helper.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_delete_insert_merge_sql", "macro_sql": "{% macro duckdb__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }} as DBT_INCREMENTAL_TARGET\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = DBT_INCREMENTAL_TARGET.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.405748, "supported_languages": null}, "macro.dbt_duckdb.duckdb__alter_relation_add_remove_columns": {"name": "duckdb__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/columns.sql", "original_file_path": "macros/columns.sql", "unique_id": "macro.dbt_duckdb.duckdb__alter_relation_add_remove_columns", "macro_sql": "{% macro duckdb__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns %}\n    {% for column in add_columns %}\n      {% set sql -%}\n         alter {{ relation.type }} {{ relation }} add column\n           {{ column.name }} {{ column.data_type }}\n      {%- endset -%}\n      {% do run_query(sql) %}\n    {% endfor %}\n  {% endif %}\n\n  {% if remove_columns %}\n    {% for column in remove_columns %}\n      {% set sql -%}\n        alter {{ relation.type }} {{ relation }} drop column\n          {{ column.name }}\n      {%- endset -%}\n      {% do run_query(sql) %}\n    {% endfor %}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.406671, "supported_languages": null}, "macro.dbt_duckdb.materialization_table_duckdb": {"name": "materialization_table_duckdb", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_duckdb.materialization_table_duckdb", "macro_sql": "{% materialization table, adapter=\"duckdb\", supported_languages=['sql', 'python'] %}\n\n  {%- set language = model['language'] -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main', language=language) -%}\n    {{- create_table_as(False, intermediate_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4092622, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.materialization_external_duckdb": {"name": "materialization_external_duckdb", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/materializations/external.sql", "original_file_path": "macros/materializations/external.sql", "unique_id": "macro.dbt_duckdb.materialization_external_duckdb", "macro_sql": "{% materialization external, adapter=\"duckdb\", supported_languages=['sql', 'python'] %}\n\n  {%- set location = render(config.get('location', default=external_location(this, config))) -%})\n  {%- set rendered_options = render_write_options(config) -%}\n  {%- set format = config.get('format', 'parquet') -%}\n  {%- set write_options = adapter.external_write_options(location, rendered_options) -%}\n  {%- set read_location = adapter.external_read_location(location, rendered_options) -%}\n\n  -- set language - python or sql\n  {%- set language = model['language'] -%}\n\n  {%- set target_relation = this.incorporate(type='view') %}\n\n  -- Continue as normal materialization\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set temp_relation =  make_intermediate_relation(this.incorporate(type='table'), suffix='__dbt_tmp') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation, suffix='__dbt_int') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_temp_relation = load_cached_relation(temp_relation) -%}\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_temp_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('create_table', language=language) -%}\n    {{- create_table_as(False, temp_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  -- write an temp relation into file\n  {{ write_to_file(temp_relation, location, write_options) }}\n  -- create a view on top of the location\n  {% call statement('main', language='sql') -%}\n    create or replace view {{ intermediate_relation }} as (\n        select * from '{{ read_location }}'\n    );\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n  {{ drop_relation_if_exists(temp_relation) }}\n\n  -- register table into glue\n  {%- set plugin_name = config.get('plugin') -%}\n  {%- set glue_register = config.get('glue_register', default=false) -%}\n  {% if plugin_name is not none or glue_register is true %}\n    {% if glue_register %}\n      {# legacy hack to set the glue database name, deprecate this #}\n      {%- set plugin_name = 'glue|' ~ config.get('glue_database', 'default') -%}\n    {% endif %}\n    {% do store_relation(plugin_name, target_relation, location, format, config) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_duckdb.external_location", "macro.dbt_duckdb.render_write_options", "macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_duckdb.write_to_file", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_duckdb.store_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.414019, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.materialization_incremental_duckdb": {"name": "materialization_incremental_duckdb", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_duckdb.materialization_incremental_duckdb", "macro_sql": "{% materialization incremental, adapter=\"duckdb\", supported_languages=['sql', 'python'] -%}\n\n  {%- set language = model['language'] -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n    {% set build_sql = create_table_as(False, target_relation, compiled_code, language) %}\n  {% elif full_refresh_mode %}\n    {% set build_sql = create_table_as(False, intermediate_relation, compiled_code, language) %}\n    {% set need_swap = true %}\n  {% else %}\n    {% if language == 'python' %}\n      {% set build_python = create_table_as(False, temp_relation, compiled_code, language) %}\n      {% call statement(\"pre\", language=language) %}\n        {{- build_python }}\n      {% endcall %}\n    {% else %} {# SQL #}\n      {% do run_query(create_table_as(True, temp_relation, compiled_code, language)) %}\n    {% endif %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n    {% set language = \"sql\" %}\n\n  {% endif %}\n\n  {% call statement(\"main\", language=language) %}\n      {{- build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.statement", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4192681, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.duckdb__dateadd": {"name": "duckdb__dateadd", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt_duckdb.duckdb__dateadd", "macro_sql": "{% macro duckdb__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.419498, "supported_languages": null}, "macro.dbt_duckdb.duckdb__listagg": {"name": "duckdb__listagg", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt_duckdb.duckdb__listagg", "macro_sql": "{% macro duckdb__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n    {% if limit_num -%}\n    list_aggr(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        'string_agg',\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.420075, "supported_languages": null}, "macro.dbt_duckdb.duckdb__datediff": {"name": "duckdb__datediff", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt_duckdb.duckdb__datediff", "macro_sql": "{% macro duckdb__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4230359, "supported_languages": null}, "macro.dbt_duckdb.duckdb__any_value": {"name": "duckdb__any_value", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt_duckdb.duckdb__any_value", "macro_sql": "{% macro duckdb__any_value(expression) -%}\n\n    arbitrary({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.423177, "supported_languages": null}, "macro.dbt_duckdb.register_upstream_external_models": {"name": "register_upstream_external_models", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/upstream.sql", "original_file_path": "macros/utils/upstream.sql", "unique_id": "macro.dbt_duckdb.register_upstream_external_models", "macro_sql": "{%- macro register_upstream_external_models() -%}\n{% if execute %}\n{% set upstream_nodes = {} %}\n{% set upstream_schemas = {} %}\n{% for node in selected_resources %}\n  {% for upstream_node in graph['nodes'][node]['depends_on']['nodes'] %}\n    {% if upstream_node not in upstream_nodes and upstream_node not in selected_resources %}\n      {% do upstream_nodes.update({upstream_node: None}) %}\n      {% set upstream = graph['nodes'].get(upstream_node) %}\n      {% if upstream\n         and upstream.resource_type in ('model', 'seed')\n         and upstream.config.materialized=='external'\n      %}\n        {%- set upstream_rel = api.Relation.create(\n          database=upstream['database'],\n          schema=upstream['schema'],\n          identifier=upstream['alias']\n        ) -%}\n        {%- set location = upstream.config.get('location', external_location(upstream_rel, upstream.config)) -%}\n        {%- set rendered_options = render_write_options(upstream.config) -%}\n        {%- set upstream_location = adapter.external_read_location(location, rendered_options) -%}\n        {% if upstream_rel.schema not in upstream_schemas %}\n          {% call statement('main', language='sql') -%}\n            create schema if not exists {{ upstream_rel.schema }}\n          {%- endcall %}\n          {% do upstream_schemas.update({upstream_rel.schema: None}) %}\n        {% endif %}\n        {% call statement('main', language='sql') -%}\n          create or replace view {{ upstream_rel }} as (\n            select * from '{{ upstream_location }}'\n          );\n        {%- endcall %}\n      {%- endif %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n{% do adapter.commit() %}\n{% endif %}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_duckdb.external_location", "macro.dbt_duckdb.render_write_options", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.425486, "supported_languages": null}, "macro.dbt_duckdb.duckdb__split_part": {"name": "duckdb__split_part", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/splitpart.sql", "original_file_path": "macros/utils/splitpart.sql", "unique_id": "macro.dbt_duckdb.duckdb__split_part", "macro_sql": "{% macro duckdb__split_part(string_text, delimiter_text, part_number) %}\n    string_split({{ string_text }}, {{ delimiter_text }})[ {{ part_number }} ]\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.425699, "supported_languages": null}, "macro.dbt_duckdb.duckdb__last_day": {"name": "duckdb__last_day", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/lastday.sql", "original_file_path": "macros/utils/lastday.sql", "unique_id": "macro.dbt_duckdb.duckdb__last_day", "macro_sql": "{% macro duckdb__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- duckdb dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.42617, "supported_languages": null}, "macro.dbt_duckdb.external_location": {"name": "external_location", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/external_location.sql", "original_file_path": "macros/utils/external_location.sql", "unique_id": "macro.dbt_duckdb.external_location", "macro_sql": "{%- macro external_location(relation, config) -%}\n  {%- if config.get('options', {}).get('partition_by') is none -%}\n    {%- set format = config.get('format', 'parquet') -%}\n    {{- adapter.external_root() }}/{{ relation.identifier }}.{{ format }}\n  {%- else -%}\n    {{- adapter.external_root() }}/{{ relation.identifier }}\n  {%- endif -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.426694, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.427707, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4278982, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4280362, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4281752, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4283168, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.428659, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.428952, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4292421, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.429643, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4299011, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4331279, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.43329, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4334981, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4341838, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.434344, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.43451, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4358468, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.437141, "supported_languages": null}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4406831, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4409559, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.441115, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.441199, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4413388, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.441447, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.441644, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.442486, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4426692, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.44291, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.443323, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.448855, "supported_languages": ["sql"]}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n    {% set store_failures_as = config.get('store_failures_as') %}\n    -- if `--store-failures` is invoked via command line and `store_failures_as` is not set,\n    -- config.get('store_failures_as', 'table') returns None, not 'table'\n    {% if store_failures_as == none %}{% set store_failures_as = 'table' %}{% endif %}\n    {% if store_failures_as not in ['table', 'view'] %}\n        {{ exceptions.raise_compiler_error(\n            \"'\" ~ store_failures_as ~ \"' is not a valid value for `store_failures_as`. \"\n            \"Accepted values are: ['ephemeral', 'table', 'view']\"\n        ) }}\n    {% endif %}\n\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type=store_failures_as) -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ get_create_sql(target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.get_create_sql", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.451374, "supported_languages": ["sql"]}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.451797, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4520938, "supported_languages": null}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.452437, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.452801, "supported_languages": null}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.457074, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.457449, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.457696, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.458928, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.459151, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4597828, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view.sql", "original_file_path": "macros/materializations/models/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.462476, "supported_languages": ["sql"]}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table.sql", "original_file_path": "macros/materializations/models/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4651158, "supported_languages": ["sql"]}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4665549, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.467078, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.467728, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.467959, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4686542, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.474081, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.475601, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4758542, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4768121, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.47707, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.477688, "supported_languages": null}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4782872, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.479083, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.479319, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4795032, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.479786, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4800189, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.480306, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.4804878, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.480741, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.48092, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.481063, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.48133, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.485954, "supported_languages": ["sql"]}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.490766, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.491931, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.493078, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.493887, "supported_languages": null}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.494116, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.494226, "supported_languages": null}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.494503, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation }} clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.494634, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {% if target_relation and defer_relation and target_relation == defer_relation %}\n              {{ log(\"Target relation and defer relation are the same, skipping clone for relation: \" ~ target_relation) }}\n          {% else %}\n              {{ create_or_replace_clone(target_relation, defer_relation) }}\n          {% endif %}\n\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.497959, "supported_languages": ["sql"]}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.500938, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5052218, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.506089, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5063198, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.506786, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.506973, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.507099, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.507232, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.507346, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.507503, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.507616, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.508068, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.508246, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.509543, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.509939, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5103, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.510779, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5110269, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.511301, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5116642, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.511905, "supported_languages": null}, "macro.dbt.get_drop_sql": {"name": "get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.get_drop_sql", "macro_sql": "{%- macro get_drop_sql(relation) -%}\n    {{- log('Applying DROP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.512544, "supported_languages": null}, "macro.dbt.default__get_drop_sql": {"name": "default__get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__get_drop_sql", "macro_sql": "{%- macro default__get_drop_sql(relation) -%}\n\n    {%- if relation.is_view -%}\n        {{ drop_view(relation) }}\n\n    {%- elif relation.is_table -%}\n        {{ drop_table(relation) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ drop_materialized_view(relation) }}\n\n    {%- else -%}\n        drop {{ relation.type }} if exists {{ relation }} cascade\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.drop_view", "macro.dbt.drop_table", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.512901, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.513079, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {{ get_drop_sql(relation) }}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.513271, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.513458, "supported_languages": null}, "macro.dbt.get_replace_sql": {"name": "get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.get_replace_sql", "macro_sql": "{% macro get_replace_sql(existing_relation, target_relation, sql) %}\n    {{- log('Applying REPLACE to: ' ~ existing_relation) -}}\n    {{- adapter.dispatch('get_replace_sql', 'dbt')(existing_relation, target_relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.514179, "supported_languages": null}, "macro.dbt.default__get_replace_sql": {"name": "default__get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.default__get_replace_sql", "macro_sql": "{% macro default__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {# /* use a create or replace statement if possible */ #}\n\n    {% set is_replaceable = existing_relation.type == target_relation_type and existing_relation.can_be_replaced %}\n\n    {% if is_replaceable and existing_relation.is_view %}\n        {{ get_replace_view_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_table %}\n        {{ get_replace_table_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_materialized_view %}\n        {{ get_replace_materialized_view_sql(target_relation, sql) }}\n\n    {# /* a create or replace statement is not possible, so try to stage and/or backup to be safe */ #}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one using a backup */ #}\n    {%- elif target_relation.can_be_renamed and existing_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one without using a backup */ #}\n    {%- elif target_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }}\n\n    {# /* create target_relation in place by first backing up the existing relation */ #}\n    {%- elif existing_relation.can_be_renamed -%}\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* no renaming is allowed, so just drop and create */ #}\n    {%- else -%}\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_view_sql", "macro.dbt.get_replace_table_sql", "macro.dbt.get_replace_materialized_view_sql", "macro.dbt.get_create_intermediate_sql", "macro.dbt.get_create_backup_sql", "macro.dbt.get_rename_intermediate_sql", "macro.dbt.get_drop_backup_sql", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.515393, "supported_languages": null}, "macro.dbt.get_create_intermediate_sql": {"name": "get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.get_create_intermediate_sql", "macro_sql": "{%- macro get_create_intermediate_sql(relation, sql) -%}\n    {{- log('Applying CREATE INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_intermediate_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.515747, "supported_languages": null}, "macro.dbt.default__get_create_intermediate_sql": {"name": "default__get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.default__get_create_intermediate_sql", "macro_sql": "{%- macro default__get_create_intermediate_sql(relation, sql) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- drop any pre-existing intermediate\n    {{ get_drop_sql(intermediate_relation) }};\n\n    {{ get_create_sql(intermediate_relation, sql) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.51599, "supported_languages": null}, "macro.dbt.get_drop_backup_sql": {"name": "get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.get_drop_backup_sql", "macro_sql": "{%- macro get_drop_backup_sql(relation) -%}\n    {{- log('Applying DROP BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.51629, "supported_languages": null}, "macro.dbt.default__get_drop_backup_sql": {"name": "default__get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.default__get_drop_backup_sql", "macro_sql": "{%- macro default__get_drop_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    {{ get_drop_sql(backup_relation) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.516491, "supported_languages": null}, "macro.dbt.get_rename_sql": {"name": "get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.get_rename_sql", "macro_sql": "{%- macro get_rename_sql(relation, new_name) -%}\n    {{- log('Applying RENAME to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_sql', 'dbt')(relation, new_name) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5171258, "supported_languages": null}, "macro.dbt.default__get_rename_sql": {"name": "default__get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__get_rename_sql", "macro_sql": "{%- macro default__get_rename_sql(relation, new_name) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_rename_view_sql(relation, new_name) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_rename_table_sql(relation, new_name) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_rename_materialized_view_sql(relation, new_name) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_rename_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.get_rename_view_sql", "macro.dbt.get_rename_table_sql", "macro.dbt.get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.517538, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.51774, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.518013, "supported_languages": null}, "macro.dbt.get_create_backup_sql": {"name": "get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.get_create_backup_sql", "macro_sql": "{%- macro get_create_backup_sql(relation) -%}\n    {{- log('Applying CREATE BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.51834, "supported_languages": null}, "macro.dbt.default__get_create_backup_sql": {"name": "default__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.default__get_create_backup_sql", "macro_sql": "{%- macro default__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    {{ get_rename_sql(relation, backup_relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5186, "supported_languages": null}, "macro.dbt.get_create_sql": {"name": "get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.get_create_sql", "macro_sql": "{%- macro get_create_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.51903, "supported_languages": null}, "macro.dbt.default__get_create_sql": {"name": "default__get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.default__get_create_sql", "macro_sql": "{%- macro default__get_create_sql(relation, sql) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_create_view_as_sql(relation, sql) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_create_table_as_sql(False, relation, sql) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_create_materialized_view_as_sql(relation, sql) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_create_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.get_create_view_as_sql", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.519455, "supported_languages": null}, "macro.dbt.get_rename_intermediate_sql": {"name": "get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.get_rename_intermediate_sql", "macro_sql": "{%- macro get_rename_intermediate_sql(relation) -%}\n    {{- log('Applying RENAME INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_intermediate_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5197608, "supported_languages": null}, "macro.dbt.default__get_rename_intermediate_sql": {"name": "default__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.default__get_rename_intermediate_sql", "macro_sql": "{%- macro default__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    {{ get_rename_sql(intermediate_relation, relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.519961, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n    {{ return(adapter.dispatch('drop_materialized_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.520214, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5203142, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_sql": {"name": "get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.get_replace_materialized_view_sql", "macro_sql": "{% macro get_replace_materialized_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_materialized_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.520571, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_sql": {"name": "default__get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_sql", "macro_sql": "{% macro default__get_replace_materialized_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.520715, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5210052, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"`refresh_materialized_view` has not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5211961, "supported_languages": null}, "macro.dbt.get_rename_materialized_view_sql": {"name": "get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.get_rename_materialized_view_sql", "macro_sql": "{% macro get_rename_materialized_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_materialized_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.52145, "supported_languages": null}, "macro.dbt.default__get_rename_materialized_view_sql": {"name": "default__get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.default__get_rename_materialized_view_sql", "macro_sql": "{% macro default__get_rename_materialized_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5215921, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.52216, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.522337, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.52261, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.522752, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.523009, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\n        \"`get_create_materialized_view_as_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.523147, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.524056, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.524171, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.52468, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.524838, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.524972, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.526247, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.526616, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.526944, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n    {{ return(adapter.dispatch('drop_table', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.527201, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5273018, "supported_languages": null}, "macro.dbt.get_replace_table_sql": {"name": "get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.get_replace_table_sql", "macro_sql": "{% macro get_replace_table_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_table_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5275562, "supported_languages": null}, "macro.dbt.default__get_replace_table_sql": {"name": "default__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.default__get_replace_table_sql", "macro_sql": "{% macro default__get_replace_table_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.527696, "supported_languages": null}, "macro.dbt.get_rename_table_sql": {"name": "get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.get_rename_table_sql", "macro_sql": "{% macro get_rename_table_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_table_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5279481, "supported_languages": null}, "macro.dbt.default__get_rename_table_sql": {"name": "default__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.default__get_rename_table_sql", "macro_sql": "{% macro default__get_rename_table_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.528089, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.528867, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.529046, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5294561, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5301208, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.530577, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.530754, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.get_column_names", "macro.dbt.default__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.530923, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n    {{ return(adapter.dispatch('drop_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5311732, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.531275, "supported_languages": null}, "macro.dbt.get_replace_view_sql": {"name": "get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.get_replace_view_sql", "macro_sql": "{% macro get_replace_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.532044, "supported_languages": null}, "macro.dbt.default__get_replace_view_sql": {"name": "default__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__get_replace_view_sql", "macro_sql": "{% macro default__get_replace_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.532186, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.533337, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.533532, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.533746, "supported_languages": null}, "macro.dbt.get_rename_view_sql": {"name": "get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.get_rename_view_sql", "macro_sql": "{% macro get_rename_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.534003, "supported_languages": null}, "macro.dbt.default__get_rename_view_sql": {"name": "default__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.default__get_rename_view_sql", "macro_sql": "{% macro default__get_rename_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.534144, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5345259, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5346859, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.534861, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.535271, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5356002, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.535882, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.536116, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5366468, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.538017, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5385652, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.538847, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.540469, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partition start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.541683, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.542419, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.542644, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5428748, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.542955, "supported_languages": null}, "macro.dbt.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.543662, "supported_languages": null}, "macro.dbt.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5442328, "supported_languages": null}, "macro.dbt.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.544457, "supported_languages": null}, "macro.dbt.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n    {# call as follows:\n\n    date_spine(\n        \"day\",\n        \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n        \"dbt.dateadd(week, 1, current_date)\"\n    ) #}\n\n\n    with rawdata as (\n\n        {{dbt.generate_series(\n            dbt.get_intervals_between(start_date, end_date, datepart)\n        )}}\n\n    ),\n\n    all_periods as (\n\n        select (\n            {{\n                dbt.dateadd(\n                    datepart,\n                    \"row_number() over (order by 1) - 1\",\n                    start_date\n                )\n            }}\n        ) as date_{{datepart}}\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_{{datepart}} <= {{ end_date }}\n\n    )\n\n    select * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.generate_series", "macro.dbt.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5448089, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.545127, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.545281, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5455139, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.545632, "supported_languages": null}, "macro.dbt.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.546376, "supported_languages": null}, "macro.dbt.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5467808, "supported_languages": null}, "macro.dbt.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.546964, "supported_languages": null}, "macro.dbt.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.547458, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5477, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5478022, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.548116, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5482738, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5484958, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5486379, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5488992, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.549043, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.549321, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5494568, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.550098, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.550538, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5508869, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.551053, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.551337, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.551478, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.551745, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5519, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.552137, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.552289, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5525298, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.552632, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.552904, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.553041, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5532749, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.553441, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.554305, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5544598, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.554621, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5547678, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.554923, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.55507, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.555228, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5554051, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.555563, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.555708, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.555866, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.556004, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.55616, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.556297, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5565639, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.556695, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.556931, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.557034, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.557357, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.557674, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.557817, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5583, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5584588, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.558677, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.558938, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.559065, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.559419, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5596511, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.559919, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.56005, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5603998, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5605812, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.560738, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5609138, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.561355, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.561501, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5616362, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.561735, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.561898, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.56197, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.562195, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt.default__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.562361, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.563114, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5632482, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.563402, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5638, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5639858, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.564117, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.564269, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.56439, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.566155, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.566317, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.56653, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.566813, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5670478, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5673542, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.56753, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.567683, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.567925, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.568523, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.568748, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5688891, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5692768, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.569668, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.569935, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5701592, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.571682, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.571795, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5719569, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5720682, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.572402, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.57258, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.572681, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.572902, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5730839, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.573306, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.573484, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.573705, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.574427, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.574611, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5748448, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.575066, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.576152, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header -%}\n  {{ sql_header }}\n  {%- endif -%}\n  {%- if limit is not none -%}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n  {%- else -%}\n  {{ compiled_code }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.576642, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "{% macro get_limit_subquery_sql(sql, limit) %}\n  {{ adapter.dispatch('get_limit_subquery_sql', 'dbt')(sql, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.576832, "supported_languages": null}, "macro.dbt.default__get_limit_subquery_sql": {"name": "default__get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_subquery_sql", "macro_sql": "{% macro default__get_limit_subquery_sql(sql, limit) %}\n    select *\n    from (\n        {{ sql }}\n    ) as model_limit_subq\n    limit {{ limit }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.576962, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.577569, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.577733, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.577933, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5780952, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.578354, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.578818, "supported_languages": null}, "macro.dbt.get_catalog_relations": {"name": "get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_relations", "macro_sql": "{% macro get_catalog_relations(information_schema, relations) -%}\n  {{ return(adapter.dispatch('get_catalog_relations', 'dbt')(information_schema, relations)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_catalog_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.581293, "supported_languages": null}, "macro.dbt.default__get_catalog_relations": {"name": "default__get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_relations", "macro_sql": "{% macro default__get_catalog_relations(information_schema, relations) -%}\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog_relations not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.581544, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.581743, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.581991, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.582171, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.582319, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.582496, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.582946, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.583144, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.583433, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5836139, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5837681, "supported_languages": null}, "macro.dbt.get_relations": {"name": "get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relations", "macro_sql": "{% macro get_relations() %}\n  {{ return(adapter.dispatch('get_relations', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.583925, "supported_languages": null}, "macro.dbt.default__get_relations": {"name": "default__get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relations", "macro_sql": "{% macro default__get_relations() %}\n  {{ exceptions.raise_not_implemented(\n    'get_relations macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.584071, "supported_languages": null}, "macro.dbt.get_relation_last_modified": {"name": "get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relation_last_modified", "macro_sql": "{% macro get_relation_last_modified(information_schema, relations) %}\n  {{ return(adapter.dispatch('get_relation_last_modified', 'dbt')(information_schema, relations)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relation_last_modified"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.58427, "supported_languages": null}, "macro.dbt.default__get_relation_last_modified": {"name": "default__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relation_last_modified", "macro_sql": "{% macro default__get_relation_last_modified(information_schema, relations) %}\n  {{ exceptions.raise_not_implemented(\n    'get_relation_last_modified macro not implemented for adapter ' + adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.584439, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5864131, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5865679, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.586865, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.587072, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5872698, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.587444, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {%- set col_naked_numeric = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {%- do col_err.append(col['name']) -%}\n      {#-- If this column's type is just 'numeric' then it is missing precision/scale, raise a warning --#}\n      {%- elif col['data_type'].strip().lower() in ('numeric', 'decimal', 'number') -%}\n        {%- do col_naked_numeric.append(col['name']) -%}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      cast(null as {{ col['data_type'] }}) as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- elif (col_naked_numeric | length) > 0 -%}\n      {{ exceptions.warn(\"Detected columns with numeric type and unspecified precision/scale, this can lead to unintended rounding: \" ~ col_naked_numeric ~ \"`\") }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5886168, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5889542, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.589131, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5894651, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.589685, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5902588, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.590505, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.59125, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.592698, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.592855, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.593686, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5941062, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.594709, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5951848, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.595259, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.595767, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.59599, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.59627, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.596534, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"name": "get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5968618, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"name": "default__get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt.split_part(\n        dbt.split_part(\n            dbt.replace(\n                dbt.replace(\n                    dbt.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt.safe_cast(\n        parsed,\n        dbt.type_string()\n        )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part", "macro.dbt.replace", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.597331, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"name": "get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.597769, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"name": "default__get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url =\n        dbt.replace(\n            dbt.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{ dbt.position(\"'/'\", stripped_url) }}, 0),\n            {{ dbt.position(\"'?'\", stripped_url) }} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt.split_part(\n            dbt.right(\n                stripped_url,\n                dbt.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ),\n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt.safe_cast(\n        parsed_path,\n        dbt.type_string()\n    )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.position", "macro.dbt.split_part", "macro.dbt.right", "macro.dbt.length", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.598468, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"name": "get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.598766, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"name": "default__get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt.split_part(dbt.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.5990798, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"name": "test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6000562, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"name": "default__test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model, group_by_columns) %}\n\n{{ config(fail_calc = 'sum(coalesce(row_count_delta, 0))') }}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in equal_rowcount. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_fewer_rows_than'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_our_model \n    from {{ model }}\n    {{ groupby_gb_cols }}\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_comparison_model \n    from {{ compare_model }}\n    {{ groupby_gb_cols }}\n\n),\ncounts as (\n\n    select\n\n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_our_model,\n        count_comparison_model\n    from a\n    full join b on \n    a.id_dbtutils_test_fewer_rows_than = b.id_dbtutils_test_fewer_rows_than\n    {{ join_gb_cols }}\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.601034, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"name": "test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6018188, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"name": "default__test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model, group_by_columns) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'sum(coalesce(diff_count, 0))') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(', ') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in fewer_rows_than. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_equal_rowcount'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from {{ model }}\n    {{groupby_gb_cols}}\n\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from {{ compare_model }}\n    {{groupby_gb_cols}}\n\n),\nfinal as (\n\n    select\n    \n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    {{join_gb_cols}}\n\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.602852, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"name": "test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6034718, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"name": "default__test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.603801, "supported_languages": null}, "macro.dbt_utils.test_recency": {"name": "test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.test_recency", "macro_sql": "{% test recency(model, field, datepart, interval, ignore_time_component=False, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval, ignore_time_component, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.604473, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"name": "default__test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval, ignore_time_component, group_by_columns) %}\n\n{% set threshold = 'cast(' ~ dbt.dateadd(datepart, interval * -1, dbt.current_timestamp()) ~ ' as ' ~ ('date' if ignore_time_component else dbt.type_timestamp()) ~ ')'  %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nwith recency as (\n\n    select \n\n      {{ select_gb_cols }}\n      {% if ignore_time_component %}\n        cast(max({{ field }}) as date) as most_recent\n      {%- else %}\n        max({{ field }}) as most_recent\n      {%- endif %}\n\n    from {{ model }}\n\n    {{ groupby_gb_cols }}\n\n)\n\nselect\n\n    {{ select_gb_cols }}\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.current_timestamp", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.60528, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"name": "test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.test_not_constant", "macro_sql": "{% test not_constant(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6057, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"name": "default__test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name, group_by_columns) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    {{select_gb_cols}}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\n  {{groupby_gb_cols}}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.606147, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"name": "test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.606709, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"name": "default__test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.607162, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"name": "test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6076648, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"name": "default__test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6080372, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"name": "test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.608641, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"name": "default__test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name, group_by_columns) %}\n\n{% set pruned_cols = [column_name] %}\n\n{% if group_by_columns|length() > 0 %}\n\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n  {% set pruned_cols = group_by_columns %}\n\n  {% if column_name not in pruned_cols %}\n    {% do pruned_cols.append(column_name) %}\n  {% endif %}\n\n{% endif %}\n\n{% set select_pruned_cols = pruned_cols|join(' ,') %}\n\nselect *\nfrom (\n    with pruned_rows as (\n      select\n        {{ select_pruned_cols }}\n      from {{ model }}\n      where {{ column_name }} is not null\n      limit 1\n    )\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      {{select_gb_cols}}\n      count({{ column_name }}) as filler_column\n\n    from pruned_rows\n\n    {{groupby_gb_cols}}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.609466, "supported_languages": null}, "macro.dbt_utils.test_unique_combination_of_columns": {"name": "test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.610045, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"name": "default__test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.610666, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"name": "test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.611187, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"name": "default__test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6115189, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None) %}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.611899, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"name": "default__test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else \"1\" %}\n\nselect\n    {{ column_list }}\nfrom {{ model }}\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.612247, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"name": "test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, group_by_columns, **kwargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.61284, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"name": "default__test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model, group_by_columns) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith validation as (\n  select\n    {{select_gb_cols}}\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n  {{groupby_gb_cols}}\n),\nvalidation_errors as (\n  select\n    {{select_gb_cols}}\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.613628, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"name": "test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart, group_by_columns)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.614458, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"name": "default__test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(',') + ', ' %}\n  {% set partition_gb_cols = 'partition by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith windowed as (\n\n    select\n        {{ select_gb_cols }}\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            {{partition_gb_cols}}\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt.type_timestamp() }})= cast({{ dbt.dateadd(datepart, interval, previous_column_name) }} as {{ dbt.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt.type_timestamp", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6153321, "supported_languages": null}, "macro.dbt_utils.test_equality": {"name": "test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6160388, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"name": "default__test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.616929, "supported_languages": null}, "macro.dbt_utils.test_not_empty_string": {"name": "test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.test_not_empty_string", "macro_sql": "{% test not_empty_string(model, column_name, trim_whitespace=true) %}\n\n  {{ return(adapter.dispatch('test_not_empty_string', 'dbt_utils')(model, column_name, trim_whitespace)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6174011, "supported_languages": null}, "macro.dbt_utils.default__test_not_empty_string": {"name": "default__test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.default__test_not_empty_string", "macro_sql": "{% macro default__test_not_empty_string(model, column_name, trim_whitespace=true) %}\n\n    with\n    \n    all_values as (\n\n        select \n\n\n            {% if trim_whitespace == true -%}\n\n                trim({{ column_name }}) as {{ column_name }}\n\n            {%- else -%}\n\n                {{ column_name }}\n\n            {%- endif %}\n            \n        from {{ model }}\n\n    ),\n\n    errors as (\n\n        select * from all_values\n        where {{ column_name }} = ''\n\n    )\n\n    select * from errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6176882, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"name": "test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6207428, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"name": "default__test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}, {{ upper_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc, {{ upper_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions more cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.622271, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"name": "pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.622536, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"name": "default__pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6227012, "supported_languages": null}, "macro.dbt_utils._is_relation": {"name": "_is_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_relation.sql", "original_file_path": "macros/jinja_helpers/_is_relation.sql", "unique_id": "macro.dbt_utils._is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.623127, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"name": "pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.623391, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"name": "default__pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.623582, "supported_languages": null}, "macro.dbt_utils.log_info": {"name": "log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6238248, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"name": "default__log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.623994, "supported_languages": null}, "macro.dbt_utils.slugify": {"name": "slugify", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "unique_id": "macro.dbt_utils.slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n{#- Prepends \"_\" if string begins with a number -#}\n{% set string = modules.re.sub('^[0-9]', '_' + string[0], string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.624581, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"name": "_is_ephemeral", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_ephemeral.sql", "original_file_path": "macros/jinja_helpers/_is_ephemeral.sql", "unique_id": "macro.dbt_utils._is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6253572, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.625996, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6265652, "supported_languages": null}, "macro.dbt_utils.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.626807, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.627159, "supported_languages": null}, "macro.dbt_utils.safe_subtract": {"name": "safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.safe_subtract", "macro_sql": "{%- macro safe_subtract(field_list) -%}\n    {{ return(adapter.dispatch('safe_subtract', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_subtract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.627518, "supported_languages": null}, "macro.dbt_utils.default__safe_subtract": {"name": "default__safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.default__safe_subtract", "macro_sql": "\n\n{%- macro default__safe_subtract(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_subtract` macro takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' -\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.628043, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"name": "nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.628337, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"name": "default__nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.62867, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"name": "get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.629291, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"name": "default__get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.630163, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6309319, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6313322, "supported_languages": null}, "macro.dbt_utils.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.631517, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.632013, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"name": "get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.63263, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"name": "default__get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6334531, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"name": "get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.633836, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"name": "default__get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.634113, "supported_languages": null}, "macro.dbt_utils.star": {"name": "star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix, quote_identifiers)) }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.635234, "supported_languages": null}, "macro.dbt_utils.default__star": {"name": "default__star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {%- do dbt_utils._is_relation(from, 'star') -%}\r\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\r\n\r\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\r\n    {%- if not execute -%}\r\n        {% do return('*') %}\r\n    {%- endif -%}\r\n\r\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\r\n\r\n    {%- if cols|length <= 0 -%}\r\n        {% if flags.WHICH == 'compile' %}\r\n            {% set response %}\r\n*\r\n/* No columns were returned. Maybe the relation doesn't exist yet \r\nor all columns were excluded. This star is only output during  \r\ndbt compile, and exists to keep SQLFluff happy. */\r\n            {% endset %}\r\n            {% do return(response) %}\r\n        {% else %}\r\n            {% do return(\"/* no columns returned from star() macro */\") %}\r\n        {% endif %}\r\n    {%- else -%}\r\n        {%- for col in cols %}\r\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}\r\n                {%- if quote_identifiers -%}\r\n                    {{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {%- else -%}\r\n                    {{ col|trim }} {%- if prefix!='' or suffix!='' %} as {{ (prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {% endif %}\r\n            {%- if not loop.last %},{{ '\\n  ' }}{%- endif -%}\r\n        {%- endfor -%}\r\n    {% endif %}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.636579, "supported_languages": null}, "macro.dbt_utils.unpivot": {"name": "unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.637783, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"name": "default__unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n\n    {% if not relation %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_string", "macro.dbt.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.639366, "supported_languages": null}, "macro.dbt_utils.safe_divide": {"name": "safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.safe_divide", "macro_sql": "{% macro safe_divide(numerator, denominator) -%}\n  {{ return(adapter.dispatch('safe_divide', 'dbt_utils')(numerator, denominator)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_divide"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.639647, "supported_languages": null}, "macro.dbt_utils.default__safe_divide": {"name": "default__safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.default__safe_divide", "macro_sql": "{% macro default__safe_divide(numerator, denominator) %}\n    ( {{ numerator }} ) / nullif( ( {{ denominator }} ), 0)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.63978, "supported_languages": null}, "macro.dbt_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.642571, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"name": "default__union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n    {%- set all_excludes = [] -%}\n    {%- set all_includes = [] -%}\n\n    {%- if exclude -%}\n        {%- for exc in exclude -%}\n            {%- do all_excludes.append(exc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- if include -%}\n        {%- for inc in include -%}\n            {%- do all_includes.append(inc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column | lower in all_excludes -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column | lower not in all_includes -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                {%- if source_column_name is not none %}\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {%- endif %}\n\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.645896, "supported_languages": null}, "macro.dbt_utils.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.646185, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.646432, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"name": "deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by) -%}\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.64713, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"name": "default__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.647341, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"name": "redshift__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    {{ return(dbt_utils.default__deduplicate(relation, partition_by, order_by=order_by)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.647535, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"name": "postgres__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.647722, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"name": "snowflake__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.647881, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"name": "bigquery__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6480489, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"name": "surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.64841, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"name": "default__surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- set error_message = '\nWarning: `dbt_utils.surrogate_key` has been replaced by \\\n`dbt_utils.generate_surrogate_key`. The new macro treats null values \\\ndifferently to empty strings. To restore the behaviour of the original \\\nmacro, add a global variable in dbt_project.yml called \\\n`surrogate_key_treat_nulls_as_empty_strings` to your \\\ndbt_project.yml file with a value of True. \\\nThe {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.648639, "supported_languages": null}, "macro.dbt_utils.safe_add": {"name": "safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.safe_add", "macro_sql": "{%- macro safe_add(field_list) -%}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.648989, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"name": "default__safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_add` macro now takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.64951, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"name": "nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6498291, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"name": "default__nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6501482, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"name": "get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6516428, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"name": "default__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6519911, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"name": "bigquery__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.652744, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"name": "_bigquery__get_matching_schemata", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.65324, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"name": "get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.654279, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"name": "default__get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6557271, "supported_languages": null}, "macro.dbt_utils.pivot": {"name": "pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.656702, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"name": "default__pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.657513, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.657944, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"name": "default__get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.658647, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"name": "width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6593542, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"name": "default__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt.safe_cast(expr, dbt.type_numeric() ) }},\n                    {{ dbt.safe_cast(bin_size, dbt.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.safe_cast", "macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.659801, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"name": "snowflake__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6599889, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"name": "get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.660347, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"name": "default__get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.660915, "supported_languages": null}, "macro.dbt_utils.generate_surrogate_key": {"name": "generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.generate_surrogate_key", "macro_sql": "{%- macro generate_surrogate_key(field_list) -%}\n    {{ return(adapter.dispatch('generate_surrogate_key', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.661334, "supported_languages": null}, "macro.dbt_utils.default__generate_surrogate_key": {"name": "default__generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.default__generate_surrogate_key", "macro_sql": "\n\n{%- macro default__generate_surrogate_key(field_list) -%}\n\n{%- if var('surrogate_key_treat_nulls_as_empty_strings', False) -%}\n    {%- set default_null_value = \"\" -%}\n{%- else -%}\n    {%- set default_null_value = '_dbt_utils_surrogate_key_null_' -%}\n{%- endif -%}\n\n{%- set fields = [] -%}\n\n{%- for field in field_list -%}\n\n    {%- do fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt.type_string() ~ \"), '\" ~ default_null_value  ~\"')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- do fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{ dbt.hash(dbt.concat(fields)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.hash", "macro.dbt.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.661937, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"name": "get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils.default__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.662422, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"name": "default__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6625621, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"name": "postgres__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.662693, "supported_languages": null}, "macro.dbt_utils.databricks__get_table_types_sql": {"name": "databricks__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.databricks__get_table_types_sql", "macro_sql": "{% macro databricks__get_table_types_sql() %}\n            case table_type\n                when 'MANAGED' then 'table'\n                when 'BASE TABLE' then 'table'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.662827, "supported_languages": null}, "macro.dbt_utils.get_single_value": {"name": "get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.get_single_value", "macro_sql": "{% macro get_single_value(query, default=none) %}\n    {{ return(adapter.dispatch('get_single_value', 'dbt_utils')(query, default)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_single_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.663296, "supported_languages": null}, "macro.dbt_utils.default__get_single_value": {"name": "default__get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.default__get_single_value", "macro_sql": "{% macro default__get_single_value(query, default) %}\n\n{# This macro returns the (0, 0) record in a query, i.e. the first row of the first column #}\n\n    {%- call statement('get_query_result', fetch_result=True, auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {%- if execute -%}\n\n        {% set r = load_result('get_query_result').table.columns[0].values() %}\n        {% if r | length == 0 %}\n            {% do print('Query `' ~ query ~ '` returned no rows. Using the default value: ' ~ default) %}\n            {% set sql_result = default %}\n        {% else %}\n            {% set sql_result = r[0] %}\n        {% endif %}\n        \n    {%- else -%}\n    \n        {% set sql_result = default %}\n    \n    {%- endif -%}\n\n    {% do return(sql_result) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6640599, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"name": "degrees_to_radians", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6650188, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"name": "haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.665287, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"name": "default__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.665816, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"name": "bigquery__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6666062, "supported_languages": null}, "macro.codegen.generate_model_import_ctes": {"name": "generate_model_import_ctes", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_import_ctes.sql", "original_file_path": "macros/generate_model_import_ctes.sql", "unique_id": "macro.codegen.generate_model_import_ctes", "macro_sql": "{% macro generate_model_import_ctes(model_name, leading_commas = false) %}\n\n    {%- if execute -%}\n    {%- set nodes = graph.nodes.values() -%}\n\n    {%- set model = (nodes\n        | selectattr('name', 'equalto', model_name) \n        | selectattr('resource_type', 'equalto', 'model')\n        | list).pop() -%}\n\n    {%- set model_raw_sql = model.raw_sql or model.raw_code -%}\n    {%- else -%}\n    {%- set model_raw_sql = '' -%}\n    {%- endif -%}\n\n    {#-\n\n        REGEX Explanations\n\n        # with_regex\n        - matches (start of file followed by anything then whitespace\n        or whitespace\n        or a comma) followed by the word with then a space   \n\n        # from_ref \n        - matches (from or join) followed by some spaces and then {{ref(<something>)}}\n\n        # from_source \n        - matches (from or join) followed by some spaces and then {{source(<something>,<something_else>)}}\n\n        # from_var_1\n        - matches (from or join) followed by some spaces and then {{var(<something>)}}\n\n        # from_var_2\n        - matches (from or join) followed by some spaces and then {{var(<something>,<something_else>)}}\n\n        # from_table_1\n        - matches (from or join) followed by some spaces and then <something>.<something_else>\n          where each <something> is enclosed by (` or [ or \" or ' or nothing)\n\n        # from_table_2\n        - matches (from or join) followed by some spaces and then <something>.<something_else>.<something_different>\n          where each <something> is enclosed by (` or [ or \" or ' or nothing)\n\n        # from_table_3\n        - matches (from or join) followed by some spaces and then <something>\n          where <something> is enclosed by (` or [ or \" or ')\n\n        # config block\n        - matches the start of the file followed by anything and then {{config(<something>)}}\n\n    -#}\n\n    {%- set re = modules.re -%}\n\n    {%- set with_regex = '(?i)(?s)(^.*\\s*|\\s+|,)with\\s' -%}\n    {%- set does_raw_sql_contain_cte = re.search(with_regex, model_raw_sql) -%}\n\n    {%- set from_regexes = {\n        'from_ref':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), ref, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*ref\\s*\\(\\s*[\\'\\\"]?)\n            \n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n            \n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n        \n            ',\n        'from_source':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), source, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*source\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a comma\n            (,)\n\n            # sixth matching group\n            # 0 or more whitespace character(s), 1 or 0 quotation mark\n            (\\s*[\\'\\\"]?)\n\n            # seventh matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # eighth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # ninth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n\n            ',\n        'from_var_1':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n            \n            ',\n        'from_var_2':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n            \n            # second matching group\n            # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark            \n            ([^)\\'\\\"]+)\n            \n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a comma\n            (,)\n\n            # sixth matching group\n            # 0 or more whitespace character(s), 1 or 0 quotation mark            \n            (\\s*[\\'\\\"]?)\n\n            # seventh matching group\n            # at least 1 of anything except a parenthesis or quotation mark            \n            ([^)\\'\\\"]+)\n\n            # eighth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)            \n            ([\\'\\\"]?\\s*)\n\n            # ninth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}            \n            (\\)\\s*}})\n            \n            ',\n        'from_table_1':\n            '(?ix)\n            \n            # first matching group\n            # from or join followed by at least 1 whitespace character            \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n            \n            # third matching group\n            # at least 1 word character\n            (\\w+)\n            \n            # fouth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)\n            ([\\]`\\\"\\']?)\n            \n            # fifth matching group\n            # a period\n            (\\.)\n            \n            # sixth matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n            \n            # seventh matching group\n            # at least 1 word character\n            (\\w+)\n            \n            # eighth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\']?)(?=\\s|$)\n            \n            ',\n        'from_table_2':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n            ([\\[`\\\"\\']?)\n            \n            # third matching group\n            # at least 1 word character\n            (\\w+)\n\n            # fouth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)            \n            ([\\]`\\\"\\']?)\n            \n            # fifth matching group\n            # a period            \n            (\\.)\n            \n            # sixth matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n\n            # seventh matching group\n            # at least 1 word character            \n            (\\w+)\n            \n            # eighth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) \n            ([\\]`\\\"\\']?)\n            \n            # ninth matching group\n            # a period             \n            (\\.)\n            \n            # tenth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)             \n            ([\\[`\\\"\\']?)\n            \n            # eleventh matching group\n            # at least 1 word character   \n            (\\w+)\n\n            # twelfth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\']?)(?=\\s|$)\n            \n            ',\n        'from_table_3':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character             \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n            ([\\[`\\\"\\'])\n            \n            # third matching group\n            # at least 1 word character or space \n            ([\\w ]+)\n\n            # fourth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\'])(?=\\s|$)\n            \n            ',\n        'config_block':'(?i)(?s)^.*{{\\s*config\\s*\\([^)]+\\)\\s*}}'\n    } -%}\n\n    {%- set from_list = [] -%}\n    {%- set config_list = [] -%}\n    {%- set ns = namespace(model_sql = model_raw_sql) -%}\n\n    {%- for regex_name, regex_pattern in from_regexes.items() -%}\n\n        {%- set all_regex_matches = re.findall(regex_pattern, model_raw_sql) -%}\n\n        {%- for match in all_regex_matches -%}\n\n            {%- if regex_name == 'config_block' -%}\n                {%- set match_tuple = (match|trim, regex_name) -%}\n                {%- do config_list.append(match_tuple) -%}\n            {%- elif regex_name == 'from_source' -%}    \n                {%- set full_from_clause = match[1:]|join|trim -%}\n                {%- set cte_name = 'source_' + match[6]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%} \n            {%- elif regex_name == 'from_table_1' -%}\n                {%- set full_from_clause = match[1:]|join()|trim -%}\n                {%- set cte_name = match[2]|lower + '_' + match[6]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}   \n            {%- elif regex_name == 'from_table_2' -%}\n                {%- set full_from_clause = match[1:]|join()|trim -%}\n                {%- set cte_name = match[2]|lower + '_' + match[6]|lower + '_' + match[10]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}                     \n            {%- else -%}\n                {%- set full_from_clause = match[1:]|join|trim -%}\n                {%- set cte_name = match[2]|trim|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}\n            {%- endif -%}\n\n        {%- endfor -%}\n\n        {%- if regex_name == 'config_block' -%}\n        {%- elif regex_name == 'from_source' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> source_\\g<7>', ns.model_sql) -%}            \n        {%- elif regex_name == 'from_table_1' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>_\\g<7>', ns.model_sql) -%}     \n        {%- elif regex_name == 'from_table_2' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>_\\g<7>_\\g<11>', ns.model_sql) -%} \n        {%- else -%}   \n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>', ns.model_sql) -%}         \n        {% endif %}\n\n    {%- endfor -%}\n\n{%- if from_list|length > 0 -%}\n\n{%- set model_import_ctes -%}\n\n    {%- for config_obj in config_list -%}\n\n    {%- set ns.model_sql = ns.model_sql|replace(config_obj[0], '') -%}\n\n{{ config_obj[0] }}\n\n{% endfor -%}\n\n    {%- for from_obj in from_list|unique|sort -%}\n\n{%- if loop.first -%}with {% else -%}{%- if leading_commas -%},{%- endif -%}{%- endif -%}{{ from_obj[0] }} as (\n\n    select * from {{ from_obj[1] }}\n    {%- if from_obj[2] == 'from_source' and from_list|length > 1 %} \n    -- CAUTION: It's best practice to create staging layer for raw sources\n    {%- elif from_obj[2] == 'from_table_1' or from_obj[2] == 'from_table_2' or from_obj[2] == 'from_table_3' %}\n    -- CAUTION: It's best practice to use the ref or source function instead of a direct reference\n    {%- elif from_obj[2] == 'from_var_1' or from_obj[2] == 'from_var_2' %}\n    -- CAUTION: It's best practice to use the ref or source function instead of a var\n    {%- endif %}\n  \n){%- if ((loop.last and does_raw_sql_contain_cte) or (not loop.last)) and not leading_commas -%},{%- endif %}\n\n{% endfor -%}\n\n{%- if does_raw_sql_contain_cte -%}\n    {%- if leading_commas -%}\n        {%- set replace_with = '\\g<1>,' -%}\n    {%- else -%}\n        {%- set replace_with = '\\g<1>' -%}\n    {%- endif -%}\n{{ re.sub(with_regex, replace_with, ns.model_sql, 1)|trim }}\n{%- else -%}\n{{ ns.model_sql|trim }}\n{%- endif -%}\n\n{%- endset -%}\n\n{%- else -%}\n\n{% set model_import_ctes = model_raw_sql %}\n\n{%- endif -%}\n\n{%- if execute -%}\n\n{{ log(model_import_ctes, info=True) }}\n{% do return(model_import_ctes) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6771, "supported_languages": null}, "macro.codegen.generate_column_yaml": {"name": "generate_column_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_yaml.sql", "original_file_path": "macros/generate_model_yaml.sql", "unique_id": "macro.codegen.generate_column_yaml", "macro_sql": "{% macro generate_column_yaml(column, model_yaml, column_desc_dict, parent_column_name=\"\") %}\n    {% if parent_column_name %}\n        {% set column_name = parent_column_name ~ \".\" ~ column.name %}\n    {% else %}\n        {% set column_name = column.name %}\n    {% endif %}\n\n    {% do model_yaml.append('      - name: ' ~ column_name  | lower ) %}\n    {% do model_yaml.append('        description: \"' ~ column_desc_dict.get(column.name | lower,'') ~ '\"') %}\n    {% do model_yaml.append('') %}\n\n    {% if column.fields|length > 0 %}\n        {% for child_column in column.fields %}\n            {% set model_yaml = codegen.generate_column_yaml(child_column, model_yaml, column_desc_dict, parent_column_name=column_name) %}\n        {% endfor %}\n    {% endif %}\n    {% do return(model_yaml) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.679115, "supported_languages": null}, "macro.codegen.generate_model_yaml": {"name": "generate_model_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_yaml.sql", "original_file_path": "macros/generate_model_yaml.sql", "unique_id": "macro.codegen.generate_model_yaml", "macro_sql": "{% macro generate_model_yaml(model_names=[], upstream_descriptions=False) %}\n\n    {% set model_yaml=[] %}\n\n    {% do model_yaml.append('version: 2') %}\n    {% do model_yaml.append('') %}\n    {% do model_yaml.append('models:') %}\n\n    {% if model_names is string %}\n        {{ exceptions.raise_compiler_error(\"The `model_names` argument must always be a list, even if there is only one model.\") }}\n    {% else %}\n        {% for model in model_names %}\n            {% do model_yaml.append('  - name: ' ~ model | lower) %}\n            {% do model_yaml.append('    description: \"\"') %}\n            {% do model_yaml.append('    columns:') %}\n\n            {% set relation=ref(model) %}\n            {%- set columns = adapter.get_columns_in_relation(relation) -%}\n            {% set column_desc_dict =  codegen.build_dict_column_descriptions(model) if upstream_descriptions else {} %}\n\n            {% for column in columns %}\n                {% set model_yaml = codegen.generate_column_yaml(column, model_yaml, column_desc_dict) %}\n            {% endfor %}\n        {% endfor %}\n    {% endif %}\n\n{% if execute %}\n\n    {% set joined = model_yaml | join ('\\n') %}\n    {{ log(joined, info=True) }}\n    {% do return(joined) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.build_dict_column_descriptions", "macro.codegen.generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6803572, "supported_languages": null}, "macro.codegen.create_base_models": {"name": "create_base_models", "resource_type": "macro", "package_name": "codegen", "path": "macros/create_base_models.sql", "original_file_path": "macros/create_base_models.sql", "unique_id": "macro.codegen.create_base_models", "macro_sql": "{% macro create_base_models(source_name, tables) %}\n\n{% set source_name = \"\"~ source_name ~\"\" %}\n\n{% set zsh_command_models = \"source dbt_packages/codegen/bash_scripts/base_model_creation.sh \"\"\"~ source_name ~\"\"\" \" %}\n\n{%- set models_array = [] -%}\n\n{% for t in tables %}\n    {% set help_command = zsh_command_models + t %}\n    {{ models_array.append(help_command) }}\n{% endfor %}\n\n{{ log(\"Run these commands in your shell to generate the models:\\n\" ~ models_array|join(' && \\n'), info=True) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.680991, "supported_languages": null}, "macro.codegen.generate_base_model": {"name": "generate_base_model", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_base_model.sql", "original_file_path": "macros/generate_base_model.sql", "unique_id": "macro.codegen.generate_base_model", "macro_sql": "{% macro generate_base_model(source_name, table_name, leading_commas=False, case_sensitive_cols=False, materialized=None) %}\n\n{%- set source_relation = source(source_name, table_name) -%}\n\n{%- set columns = adapter.get_columns_in_relation(source_relation) -%}\n{% set column_names=columns | map(attribute='name') %}\n{% set base_model_sql %}\n\n{%- if materialized is not none -%}\n    {{ \"{{ config(materialized='\" ~ materialized ~ \"') }}\" }}\n{%- endif %}\n\nwith source as (\n\n    select * from {% raw %}{{ source({% endraw %}'{{ source_name }}', '{{ table_name }}'{% raw %}) }}{% endraw %}\n\n),\n\nrenamed as (\n\n    select\n        {%- if leading_commas -%}\n        {%- for column in column_names %}\n        {{\", \" if not loop.first}}{% if not case_sensitive_cols %}{{ column | lower }}{% elif target.type == \"bigquery\" %}{{ column }}{% else %}{{ \"\\\"\" ~ column ~ \"\\\"\" }}{% endif %}\n        {%- endfor %}\n        {%- else -%}\n        {%- for column in column_names %}\n        {% if not case_sensitive_cols %}{{ column | lower }}{% elif target.type == \"bigquery\" %}{{ column }}{% else %}{{ \"\\\"\" ~ column ~ \"\\\"\" }}{% endif %}{{\",\" if not loop.last}}\n        {%- endfor -%}\n        {%- endif %}\n\n    from source\n\n)\n\nselect * from renamed\n{% endset %}\n\n{% if execute %}\n\n{{ log(base_model_sql, info=True) }}\n{% do return(base_model_sql) %}\n\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.68294, "supported_languages": null}, "macro.codegen.get_tables_in_schema": {"name": "get_tables_in_schema", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_source.sql", "original_file_path": "macros/generate_source.sql", "unique_id": "macro.codegen.get_tables_in_schema", "macro_sql": "{% macro get_tables_in_schema(schema_name, database_name=target.database, table_pattern='%', exclude='') %}\n    \n    {% set tables=dbt_utils.get_relations_by_pattern(\n        schema_pattern=schema_name,\n        database=database_name,\n        table_pattern=table_pattern,\n        exclude=exclude\n    ) %}\n\n    {% set table_list= tables | map(attribute='identifier') %}\n\n    {{ return(table_list | sort) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6850162, "supported_languages": null}, "macro.codegen.generate_source": {"name": "generate_source", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_source.sql", "original_file_path": "macros/generate_source.sql", "unique_id": "macro.codegen.generate_source", "macro_sql": "{% macro generate_source(schema_name, database_name=target.database, generate_columns=False, include_descriptions=False, include_data_types=False, table_pattern='%', exclude='', name=schema_name, table_names=None, include_database=False, include_schema=False) %}\n\n{% set sources_yaml=[] %}\n{% do sources_yaml.append('version: 2') %}\n{% do sources_yaml.append('') %}\n{% do sources_yaml.append('sources:') %}\n{% do sources_yaml.append('  - name: ' ~ name | lower) %}\n\n{% if include_descriptions %}\n    {% do sources_yaml.append('    description: \"\"' ) %}\n{% endif %}\n\n{% if database_name != target.database or include_database %}\n{% do sources_yaml.append('    database: ' ~ database_name | lower) %}\n{% endif %}\n\n{% if schema_name != name or include_schema %}\n{% do sources_yaml.append('    schema: ' ~ schema_name | lower) %}\n{% endif %}\n\n{% do sources_yaml.append('    tables:') %}\n\n{% if table_names is none %}\n{% set tables=codegen.get_tables_in_schema(schema_name, database_name, table_pattern, exclude) %}\n{% else %}\n{% set tables = table_names %}\n{% endif %}\n\n{% for table in tables %}\n    {% do sources_yaml.append('      - name: ' ~ table | lower ) %}\n    {% if include_descriptions %}\n        {% do sources_yaml.append('        description: \"\"' ) %}\n    {% endif %}\n    {% if generate_columns %}\n    {% do sources_yaml.append('        columns:') %}\n\n        {% set table_relation=api.Relation.create(\n            database=database_name,\n            schema=schema_name,\n            identifier=table\n        ) %}\n\n        {% set columns=adapter.get_columns_in_relation(table_relation) %}\n\n        {% for column in columns %}\n            {% do sources_yaml.append('          - name: ' ~ column.name | lower ) %}\n            {% if include_data_types %}\n                {% do sources_yaml.append('            data_type: ' ~ (column.data_type | upper ) ) %}\n            {% endif %}\n            {% if include_descriptions %}\n                {% do sources_yaml.append('            description: \"\"' ) %}\n            {% endif %}\n        {% endfor %}\n            {% do sources_yaml.append('') %}\n\n    {% endif %}\n\n{% endfor %}\n\n{% if execute %}\n\n    {% set joined = sources_yaml | join ('\\n') %}\n    {{ log(joined, info=True) }}\n    {% do return(joined) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.get_tables_in_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.687434, "supported_languages": null}, "macro.codegen.get_model_dependencies": {"name": "get_model_dependencies", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.get_model_dependencies", "macro_sql": "{% macro get_model_dependencies(model_name) %}\n    {% for node in graph.nodes.values() | selectattr('name', \"equalto\", model_name) %}\n        {{ return(node.depends_on.nodes) }}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6884968, "supported_languages": null}, "macro.codegen.add_model_column_descriptions_to_dict": {"name": "add_model_column_descriptions_to_dict", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.add_model_column_descriptions_to_dict", "macro_sql": "{% macro add_model_column_descriptions_to_dict(model_name,dict_with_descriptions={}) %}\n    {% for node in graph.nodes.values() | selectattr('name', \"equalto\", model_name) %}\n        {% for col_name, col_values in node.columns.items() %}\n            {% do dict_with_descriptions.update( {col_name: col_values.description} ) %}\n        {% endfor %}\n    {% endfor %}\n    {{ return(dict_with_descriptions) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.68896, "supported_languages": null}, "macro.codegen.build_dict_column_descriptions": {"name": "build_dict_column_descriptions", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.build_dict_column_descriptions", "macro_sql": "{% macro build_dict_column_descriptions(model_name) %}\n    {% if execute %}\n        {% set glob_dict = {} %}\n        {% for full_model in codegen.get_model_dependencies(model_name) %}\n            {% do codegen.add_model_column_descriptions_to_dict(full_model.split('.')[-1],glob_dict) %}\n        {% endfor %}\n        {{ return(glob_dict) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.get_model_dependencies", "macro.codegen.add_model_column_descriptions_to_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.689376, "supported_languages": null}, "macro.codegen.get_models": {"name": "get_models", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.get_models", "macro_sql": "{% macro get_models(directory=None, prefix=None) %}\n    {% set model_names=[] %}\n    {% set models = graph.nodes.values() | selectattr('resource_type', \"equalto\", 'model') %}\n    {% if directory and prefix %}\n        {% for model in models %}\n            {% set model_path = \"/\".join(model.path.split(\"/\")[:-1]) %}\n            {% if model_path == directory and model.name.startswith(prefix) %}\n                {% do model_names.append(model.name) %}\n            {% endif %} \n        {% endfor %}\n    {% elif directory %}\n        {% for model in models %}\n            {% set model_path = \"/\".join(model.path.split(\"/\")[:-1]) %}\n            {% if model_path == directory %}\n                {% do model_names.append(model.name) %}\n            {% endif %}\n        {% endfor %}\n    {% elif prefix %}\n        {% for model in models if model.name.startswith(prefix) %}\n            {% do model_names.append(model.name) %}\n        {% endfor %}\n    {% else %}\n        {% for model in models %}\n            {% do model_names.append(model.name) %}\n        {% endfor %}\n    {% endif %}\n    {{ return(model_names) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.690748, "supported_languages": null}, "macro.dbt_project_evaluator.check_model_is_table": {"name": "check_model_is_table", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/check_model_is_table.sql", "original_file_path": "macros/check_model_is_table.sql", "unique_id": "macro.dbt_project_evaluator.check_model_is_table", "macro_sql": "{%- macro check_model_is_table(model) -%}\n    {%- if model.config.materialized != 'table' -%}\n        {%- do exceptions.raise_compiler_error(\n            \"Model must use the table materialization. Please check any model overrides.\"\n        ) -%}\n    {%- endif -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.691013, "supported_languages": null}, "macro.dbt_project_evaluator.recursive_dag": {"name": "recursive_dag", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/recursive_dag.sql", "original_file_path": "macros/recursive_dag.sql", "unique_id": "macro.dbt_project_evaluator.recursive_dag", "macro_sql": "{% macro recursive_dag() %}\n    {{ return(adapter.dispatch('recursive_dag', 'dbt_project_evaluator')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__recursive_dag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.694261, "supported_languages": null}, "macro.dbt_project_evaluator.default__recursive_dag": {"name": "default__recursive_dag", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/recursive_dag.sql", "original_file_path": "macros/recursive_dag.sql", "unique_id": "macro.dbt_project_evaluator.default__recursive_dag", "macro_sql": "{% macro default__recursive_dag() %}\n\nwith recursive direct_relationships as (\n    select  \n        *\n    from {{ ref('int_direct_relationships') }}\n    where resource_type <> 'test'\n),\n\n-- should this be a fct_ model?\n\n-- recursive CTE\n-- one record for every resource and each of its downstream children (including itself)\nall_relationships (\n    parent_id,\n    parent,\n    parent_resource_type,\n    parent_model_type,\n    parent_materialized,\n    parent_source_name,\n    parent_file_path,\n    parent_directory_path,\n    parent_file_name,\n    parent_is_excluded,\n    child_id,\n    child,\n    child_resource_type,\n    child_model_type,\n    child_materialized,\n    child_source_name,\n    child_file_path,\n    child_directory_path,\n    child_file_name,\n    child_is_excluded,\n    distance,\n    path,\n    is_dependent_on_chain_of_views\n) as (\n    -- anchor \n    select distinct\n        resource_id as parent_id,\n        resource_name as parent,\n        resource_type as parent_resource_type,\n        model_type as parent_model_type,\n        materialized as parent_materialized,\n        source_name as parent_source_name,\n        file_path as parent_file_path,\n        directory_path as parent_directory_path,\n        file_name as parent_file_name,\n        is_excluded as parent_is_excluded,\n        resource_id as child_id,\n        resource_name as child,\n        resource_type as child_resource_type,\n        model_type as child_model_type,\n        materialized as child_materialized,\n        source_name as child_source_name,\n        file_path as child_file_path,\n        directory_path as child_directory_path,\n        file_name as child_file_name,\n        is_excluded as child_is_excluded,\n        0 as distance,\n        {{ dbt.array_construct(['resource_name']) }} as path,\n        cast(null as boolean) as is_dependent_on_chain_of_views\n\n    from direct_relationships\n    -- where direct_parent_id is null {# optional lever to change filtering of anchor clause to only include root resources #}\n    \n    union all\n\n    -- recursive clause\n    select  \n        all_relationships.parent_id as parent_id,\n        all_relationships.parent as parent,\n        all_relationships.parent_resource_type as parent_resource_type,\n        all_relationships.parent_model_type as parent_model_type,\n        all_relationships.parent_materialized as parent_materialized,\n        all_relationships.parent_source_name as parent_source_name,\n        all_relationships.parent_file_path as parent_file_path,\n        all_relationships.parent_directory_path as parent_directory_path,\n        all_relationships.parent_file_name as parent_file_name,\n        all_relationships.parent_is_excluded as parent_is_excluded,\n        direct_relationships.resource_id as child_id,\n        direct_relationships.resource_name as child,\n        direct_relationships.resource_type as child_resource_type,\n        direct_relationships.model_type as child_model_type,\n        direct_relationships.materialized as child_materialized,\n        direct_relationships.source_name as child_source_name,\n        direct_relationships.file_path as child_file_path,\n        direct_relationships.directory_path as child_directory_path,\n        direct_relationships.file_name as child_file_name,\n        direct_relationships.is_excluded as child_is_excluded,\n        all_relationships.distance+1 as distance, \n        {{ dbt.array_append('all_relationships.path', 'direct_relationships.resource_name') }} as path,\n        case \n            when \n                all_relationships.child_materialized in ('view', 'ephemeral') \n                and coalesce(all_relationships.is_dependent_on_chain_of_views, true) \n                then true\n            else false\n        end as is_dependent_on_chain_of_views\n\n    from direct_relationships\n    inner join all_relationships\n        on all_relationships.child_id = direct_relationships.direct_parent_id\n\n    {% if var('max_depth_dag') | int > 0 %}\n        {% if var('max_depth_dag') | int < 2 or var('max_depth_dag') | int < var('chained_views_threshold')%}\n            {% do exceptions.raise_compiler_error(\n                'Variable max_depth_dag must be at least 2 and must be greater or equal to than chained_views_threshold.'\n                ) %}\n        {% else %}\n        where distance <= {{ var('max_depth_dag')}}\n        {% endif %}\n    {% endif %}\n\n)\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.array_construct", "macro.dbt.array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.695051, "supported_languages": null}, "macro.dbt_project_evaluator.bigquery__recursive_dag": {"name": "bigquery__recursive_dag", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/recursive_dag.sql", "original_file_path": "macros/recursive_dag.sql", "unique_id": "macro.dbt_project_evaluator.bigquery__recursive_dag", "macro_sql": "{% macro bigquery__recursive_dag() %}\n\n-- as of Feb 2022 BigQuery doesn't support with recursive in the same way as other DWs\n{% set max_depth = var('max_depth_dag') | int %}\n{% if max_depth < 2 or max_depth < var('chained_views_threshold') %}\n    {% do exceptions.raise_compiler_error(\n        'Variable max_depth_dag must be at least 2 and must be greater or equal to than chained_views_threshold.'\n        ) %}\n{% endif %}\n\nwith direct_relationships as (\n    select  \n        *\n    from {{ ref('int_direct_relationships') }}\n    where resource_type <> 'test'\n)\n\n-- must do distinct prior to creating array because BigQuery doesn't support distinct on array type\n, get_distinct as (\n    select distinct\n        resource_id as parent_id,\n        resource_id as child_id,\n        resource_name,\n        materialized as child_materialized,\n        is_excluded as child_is_excluded\n    from direct_relationships\n)\n\n, cte_0 as (\n    select \n        parent_id,\n        child_id,\n        child_materialized,\n        child_is_excluded,\n        0 as distance,\n        {{ dbt.array_construct(['resource_name']) }} as path,\n        cast(null as boolean) as is_dependent_on_chain_of_views\n    from get_distinct\n)\n\n{% for i in range(1,max_depth) %}\n{% set prev_cte_path %}cte_{{ i - 1 }}.path{% endset %}\n, cte_{{i}} as (\n    select \n        cte_{{i - 1}}.parent_id as parent_id,\n        direct_relationships.resource_id as child_id,\n        direct_relationships.materialized as child_materialized,\n        direct_relationships.is_excluded as child_is_excluded,\n        cte_{{i - 1}}.distance+1 as distance, \n        {{ dbt.array_append(prev_cte_path, 'direct_relationships.resource_name') }} as path,\n        case \n            when \n                cte_{{i - 1}}.child_materialized in ('view', 'ephemeral') \n                and coalesce(cte_{{i - 1}}.is_dependent_on_chain_of_views, true) \n                then true\n            else false\n        end as is_dependent_on_chain_of_views\n\n        from direct_relationships\n            inner join cte_{{i - 1}}\n            on cte_{{i - 1}}.child_id = direct_relationships.direct_parent_id\n)\n{% endfor %}\n\n, all_relationships_unioned as (\n    {% for i in range(max_depth) %}\n    select * from cte_{{i}}\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n)\n\n, resource_info as (\n    select * from {{ ref('int_all_graph_resources') }}\n)\n\n\n, all_relationships as (\n    select\n        parent.resource_id as parent_id,\n        parent.resource_name as parent,\n        parent.resource_type as parent_resource_type,\n        parent.model_type as parent_model_type,\n        parent.materialized as parent_materialized,\n        parent.source_name as parent_source_name,\n        parent.file_path as parent_file_path,\n        parent.directory_path as parent_directory_path,\n        parent.file_name as parent_file_name,\n        parent.is_excluded as parent_is_excluded,\n        child.resource_id as child_id,\n        child.resource_name as child,\n        child.resource_type as child_resource_type,\n        child.model_type as child_model_type,\n        child.materialized as child_materialized,\n        child.source_name as child_source_name,\n        child.file_path as child_file_path,\n        child.directory_path as child_directory_path,\n        child.file_name as child_file_name,\n        child.is_excluded as child_is_excluded,\n        all_relationships_unioned.distance,\n        all_relationships_unioned.path,\n        all_relationships_unioned.is_dependent_on_chain_of_views\n\n    from all_relationships_unioned\n    left join resource_info as parent\n        on all_relationships_unioned.parent_id = parent.resource_id\n    left join resource_info as child\n        on all_relationships_unioned.child_id = child.resource_id\n)\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.array_construct", "macro.dbt.array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6962, "supported_languages": null}, "macro.dbt_project_evaluator.spark__recursive_dag": {"name": "spark__recursive_dag", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/recursive_dag.sql", "original_file_path": "macros/recursive_dag.sql", "unique_id": "macro.dbt_project_evaluator.spark__recursive_dag", "macro_sql": "{% macro spark__recursive_dag() %}\n-- as of June 2022 databricks SQL doesn't support \"with recursive\" in the same way as other DWs\n    {{ return(bigquery__recursive_dag()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.bigquery__recursive_dag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.696335, "supported_languages": null}, "macro.dbt_project_evaluator.wrap_string_with_quotes": {"name": "wrap_string_with_quotes", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/wrap_string_with_quotes.sql", "original_file_path": "macros/wrap_string_with_quotes.sql", "unique_id": "macro.dbt_project_evaluator.wrap_string_with_quotes", "macro_sql": "{% macro wrap_string_with_quotes(str) %}\n  {% if not str %}\n    {{ return('cast(NULL as ' ~ dbt.type_string() ~ ')') }}\n  {% else %}\n    {{ return(\"'\" ~ str ~ \"'\") }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.6966898, "supported_languages": null}, "macro.dbt_project_evaluator.loop_vars": {"name": "loop_vars", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/loop_vars.sql", "original_file_path": "macros/loop_vars.sql", "unique_id": "macro.dbt_project_evaluator.loop_vars", "macro_sql": "{% macro loop_vars(vars) %}\n    {{ return(adapter.dispatch('loop_vars', 'dbt_project_evaluator')(vars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__loop_vars"]}, "description": "A macro that loops through variables and returns them as a SQL query to be used in a model", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_project_evaluator://models/staging/variables/variables.yml", "arguments": [{"name": "vars", "type": "list|string", "description": "A list of variables from dbt_project.yml"}], "created_at": 1699414207.5692081, "supported_languages": null}, "macro.dbt_project_evaluator.default__loop_vars": {"name": "default__loop_vars", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/loop_vars.sql", "original_file_path": "macros/loop_vars.sql", "unique_id": "macro.dbt_project_evaluator.default__loop_vars", "macro_sql": "{% macro default__loop_vars(vars) %}\n{%- set sql_query = [] -%}\n{%- for var_name in vars -%}\n    {%- if var(var_name,[]) is not string -%}\n        {%- for var_value in var(var_name,[]) -%}\n            {% set sql_command %}\n            select '{{ var_name }}' as var_name, '{{ var_value }}' as var_value\n            {% endset %}\n            {%- do sql_query.append(sql_command) -%}\n        {%- endfor -%}\n    {%- else -%}\n        {% set sql_command %}\n        select '{{ var_name }}' as var_name, '{{ var(var_name,[]) }}' as var_value\n        {% endset %}\n        {%- do sql_query.append(sql_command) -%}\n    {%- endif -%}\n{%- endfor -%}\n{%- if sql_query -%}\n{{ sql_query | join('union all') }}\n{%- else -%}\nselect '' as var_name, '' as var_value\nlimit 0\n{%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.697977, "supported_languages": null}, "macro.dbt_project_evaluator.set_is_excluded": {"name": "set_is_excluded", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/set_is_excluded.sql", "original_file_path": "macros/set_is_excluded.sql", "unique_id": "macro.dbt_project_evaluator.set_is_excluded", "macro_sql": "{% macro set_is_excluded(resource, resource_type) %}\n    {{ return(adapter.dispatch('set_is_excluded', 'dbt_project_evaluator')(resource, resource_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__set_is_excluded"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.698518, "supported_languages": null}, "macro.dbt_project_evaluator.default__set_is_excluded": {"name": "default__set_is_excluded", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/set_is_excluded.sql", "original_file_path": "macros/set_is_excluded.sql", "unique_id": "macro.dbt_project_evaluator.default__set_is_excluded", "macro_sql": "{% macro default__set_is_excluded(resource, resource_type) %}\n\n    {% set re = modules.re %}\n    {%- set ns = namespace(exclude=false) -%}\n\n    {% if resource_type == 'node' %}\n        {%- set resource_path = resource.original_file_path | replace(\"\\\\\",\"\\\\\\\\\") -%}\n    {% elif resource_type == 'source' %}\n        {%- set resource_path = resource.original_file_path | replace(\"\\\\\",\"\\\\\\\\\") ~ \":\" ~ resource.fqn[-2] ~ \".\" ~ resource.fqn[-1] -%}\n    {% else %}\n        {{ exceptions.raise_compiler_error(\n            \"`set_is_excluded()` macro does not support resource type: \" ~ resource_type\n        ) }}\n    {% endif %}\n    \n\n    {#- we exclude the resource if it is from the current project and matches the pattern -#}\n    {%- for exclude_paths_pattern in var('exclude_paths_from_project',[]) -%}\n        {%- set matched_path = re.search(exclude_paths_pattern, resource_path, re.IGNORECASE) -%}\n        {%- if matched_path and resource.package_name == project_name %}\n            {% set ns.exclude = true %}\n        {%- endif -%}\n    {%- endfor -%}\n\n    {#- we exclude the resource if the package if it is listed in `exclude_packages` or if it is \"all\" -#}\n    {%- if (\n        resource.package_name != project_name) \n        and (resource.package_name in  var('exclude_packages',[]) or 'all' in var('exclude_packages',[])) \n    -%}\n        {% set ns.exclude = true %}\n    {%- endif -%}\n\n    {{ return(ns.exclude) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.699889, "supported_languages": null}, "macro.dbt_project_evaluator.find_all_hard_coded_references": {"name": "find_all_hard_coded_references", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/find_all_hard_coded_references.sql", "original_file_path": "macros/find_all_hard_coded_references.sql", "unique_id": "macro.dbt_project_evaluator.find_all_hard_coded_references", "macro_sql": "{% macro find_all_hard_coded_references(node) %}\n    {{ return(adapter.dispatch('find_all_hard_coded_references', 'dbt_project_evaluator')(node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__find_all_hard_coded_references"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.701045, "supported_languages": null}, "macro.dbt_project_evaluator.default__find_all_hard_coded_references": {"name": "default__find_all_hard_coded_references", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/find_all_hard_coded_references.sql", "original_file_path": "macros/find_all_hard_coded_references.sql", "unique_id": "macro.dbt_project_evaluator.default__find_all_hard_coded_references", "macro_sql": "{% macro default__find_all_hard_coded_references(node) %}\n\n    {%- set all_hard_coded_references_list = [] -%}\n\n    {% if node.resource_type == 'model' %}\n\n        {% if execute %}\n        {%- set model_raw_sql = node.raw_sql or node.raw_code -%}\n        {%- else -%}\n        {%- set model_raw_sql = '' -%}\n        {%- endif -%}\n\n        {#-\n            REGEX Explanations\n            \n            # from_var_1\n            - matches (from or join) followed by some spaces and then {{var(<something>)}}\n            \n            # from_var_2\n            - matches (from or join) followed by some spaces and then {{var(<something>,<something_else>)}}\n            \n            # from_table_1\n            - matches (from or join) followed by some spaces and then <something>.<something_else>\n              where each <something> is enclosed by (` or [ or \" or ' or nothing)\n            \n            # from_table_2\n            - matches (from or join) followed by some spaces and then <something>.<something_else>.<something_different>\n              where each <something> is enclosed by (` or [ or \" or ' or nothing)\n            \n            # from_table_3\n            - matches (from or join) followed by some spaces and then <something>\n              where <something> is enclosed by (` or [ or \" or ')\n\n        -#}\n\n        {%- set re = modules.re -%}\n\n        {%- set from_hard_coded_references = {\n            'from_var_1':\n                '(?ix)\n\n                # first matching group\n                # from or join followed by at least 1 whitespace character\n                (from|join)\\s+\n\n                # second matching group\n                # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n                ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n                # third matching group\n                # at least 1 of anything except a parenthesis or quotation mark\n                ([^)\\'\\\"]+)\n\n                # fourth matching group\n                # 1 or 0 quotation mark, 0 or more whitespace character(s)\n                ([\\'\\\"]?\\s*)\n\n                # fifth matching group\n                # a closing parenthesis, 0 or more whitespace character(s), closing }}\n                (\\)\\s*}})\n\n                ',\n            'from_var_2':\n                '(?ix)\n\n                # first matching group\n                # from or join followed by at least 1 whitespace character\n                (from|join)\\s+\n\n                # second matching group\n                # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n                ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n                # third matching group\n                # at least 1 of anything except a parenthesis or quotation mark            \n                ([^)\\'\\\"]+)\n\n                # fourth matching group\n                # 1 or 0 quotation mark, 0 or more whitespace character(s)\n                ([\\'\\\"]?\\s*)\n\n                # fifth matching group\n                # a comma\n                (,)\n\n                # sixth matching group\n                # 0 or more whitespace character(s), 1 or 0 quotation mark            \n                (\\s*[\\'\\\"]?)\n\n                # seventh matching group\n                # at least 1 of anything except a parenthesis or quotation mark            \n                ([^)\\'\\\"]+)\n\n                # eighth matching group\n                # 1 or 0 quotation mark, 0 or more whitespace character(s)            \n                ([\\'\\\"]?\\s*)\n\n                # ninth matching group\n                # a closing parenthesis, 0 or more whitespace character(s), closing }}            \n                (\\)\\s*}})\n\n                ',\n            'from_table_1':\n                '(?ix)\n\n                # first matching group\n                # from or join followed by at least 1 whitespace character            \n                (from|join)\\s+\n\n                # second matching group\n                # 1 or 0 of (opening bracket, backtick, or quotation mark)\n                ([\\[`\\\"\\']?)\n\n                # third matching group\n                # at least 1 word character\n                (\\w+)\n\n                # fouth matching group\n                # 1 or 0 of (closing bracket, backtick, or quotation mark)\n                ([\\]`\\\"\\']?)\n\n                # fifth matching group\n                # a period\n                (\\.)\n\n                # sixth matching group\n                # 1 or 0 of (opening bracket, backtick, or quotation mark)\n                ([\\[`\\\"\\']?)\n\n                # seventh matching group\n                # at least 1 word character\n                (\\w+)\n\n                # eighth matching group\n                # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n                ([\\]`\\\"\\']?)(?=\\s|$)\n\n                ',\n            'from_table_2':\n                '(?ix)\n\n                # first matching group\n                # from or join followed by at least 1 whitespace character \n                (from|join)\\s+\n\n                # second matching group\n                # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n                ([\\[`\\\"\\']?)\n\n                # third matching group\n                # at least 1 word character\n                (\\w+)\n                # fouth matching group\n                # 1 or 0 of (closing bracket, backtick, or quotation mark)            \n                ([\\]`\\\"\\']?)\n\n                # fifth matching group\n                # a period            \n                (\\.)\n\n                # sixth matching group\n                # 1 or 0 of (opening bracket, backtick, or quotation mark)\n                ([\\[`\\\"\\']?)\n\n                # seventh matching group\n                # at least 1 word character            \n                (\\w+)\n\n                # eighth matching group\n                # 1 or 0 of (closing bracket, backtick, or quotation mark) \n                ([\\]`\\\"\\']?)\n\n                # ninth matching group\n                # a period             \n                (\\.)\n\n                # tenth matching group\n                # 1 or 0 of (closing bracket, backtick, or quotation mark)             \n                ([\\[`\\\"\\']?)\n\n                # eleventh matching group\n                # at least 1 word character   \n                (\\w+)\n\n                # twelfth matching group\n                # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n                ([\\]`\\\"\\']?)(?=\\s|$)\n\n                ',\n            'from_table_3':\n                '(?ix)\n\n                # first matching group\n                # from or join followed by at least 1 whitespace character             \n                (from|join)\\s+\n\n                # second matching group\n                # 1 of (opening bracket, backtick, or quotation mark)            \n                ([\\[`\\\"\\'])\n\n                # third matching group\n                # at least 1 word character or space \n                ([\\w ]+)\n                \n                # fourth matching group\n                # 1 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n                ([\\]`\\\"\\'])(?=\\s|$)\n\n                '\n        } -%}\n\n        {%- for regex_name, regex_pattern in from_hard_coded_references.items() -%}\n\n            {%- set all_regex_matches = re.findall(regex_pattern, model_raw_sql) -%}\n                \n                {%- for match in all_regex_matches -%}\n\n                    {%- set raw_reference = match[1:]|join()|trim -%}\n\n                    {%- do all_hard_coded_references_list.append(raw_reference) -%}\n\n                {%- endfor -%}\n        \n        {%- endfor -%}\n\n    {% endif %}\n    \n    {% set all_hard_coded_references = set(all_hard_coded_references_list)|sort|join(', ')|trim %}\n\n    {{ return(all_hard_coded_references) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.702243, "supported_languages": null}, "macro.dbt_project_evaluator.filter_exceptions": {"name": "filter_exceptions", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/filter_exceptions.sql", "original_file_path": "macros/filter_exceptions.sql", "unique_id": "macro.dbt_project_evaluator.filter_exceptions", "macro_sql": "{% macro filter_exceptions(model_name) -%}\n    {{ return(adapter.dispatch('filter_exceptions', 'dbt_project_evaluator')(model_name)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__filter_exceptions"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.702789, "supported_languages": null}, "macro.dbt_project_evaluator.default__filter_exceptions": {"name": "default__filter_exceptions", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/filter_exceptions.sql", "original_file_path": "macros/filter_exceptions.sql", "unique_id": "macro.dbt_project_evaluator.default__filter_exceptions", "macro_sql": "{% macro default__filter_exceptions(model_name) %}\n\n    {% set query_filters %}\n    select\n        column_name,\n        id_to_exclude\n    from {{ ref('dbt_project_evaluator_exceptions') }}\n    where fct_name = '{{ model_name }}'\n    {% endset %}\n\n    {% if execute %}\n    {% set is_default_seed = 'dbt_project_evaluator' in graph.nodes.values() | \n        selectattr('resource_type', 'equalto', 'seed') | \n        selectattr('name', 'equalto', 'dbt_project_evaluator_exceptions') | \n        map(attribute = 'package_name') | list %}\n\n    {% if not is_default_seed %}\n    \n        {% if flags.WHICH not in ['compile'] %}\n            where 1 = 1\n            {% for row_filter in run_query(query_filters) %}\n                and {{ row_filter[0] }} not like '{{ row_filter[1] }}'\n            {% endfor %}\n        {% endif %}\n    \n    {% endif %}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.703535, "supported_languages": null}, "macro.dbt_project_evaluator.get_directory_pattern": {"name": "get_directory_pattern", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/get_directory_pattern.sql", "original_file_path": "macros/get_directory_pattern.sql", "unique_id": "macro.dbt_project_evaluator.get_directory_pattern", "macro_sql": "{% macro get_directory_pattern() %}\n  {%- set env_var_home_exists = env_var(\"HOME\", \"not_set\") != \"not_set\" -%}\n  {%- set on_mac_or_linux = env_var_home_exists and \"\\\\\\\\\" not in env_var(\"HOME\") -%}\n  {%- if on_mac_or_linux -%}\n    {{ return(\"/\") }}\n  {% else %}\n    {{ return(\"\\\\\\\\\") }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.704275, "supported_languages": null}, "macro.dbt_project_evaluator.get_regexp_directory_pattern": {"name": "get_regexp_directory_pattern", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/get_directory_pattern.sql", "original_file_path": "macros/get_directory_pattern.sql", "unique_id": "macro.dbt_project_evaluator.get_regexp_directory_pattern", "macro_sql": "{% macro get_regexp_directory_pattern() %}\n  {% set regexp_escaped = get_directory_pattern() | replace(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\") %}\n  {% do return(regexp_escaped) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.get_directory_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.7044868, "supported_languages": null}, "macro.dbt_project_evaluator.get_dbtreplace_directory_pattern": {"name": "get_dbtreplace_directory_pattern", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/get_directory_pattern.sql", "original_file_path": "macros/get_directory_pattern.sql", "unique_id": "macro.dbt_project_evaluator.get_dbtreplace_directory_pattern", "macro_sql": "{% macro get_dbtreplace_directory_pattern() %}\n  {%- set env_var_home_exists = env_var(\"HOME\", \"not_set\") != \"not_set\" -%}\n  {%- set on_mac_or_linux = env_var_home_exists and \"\\\\\\\\\" not in env_var(\"HOME\") -%}\n  {%- if on_mac_or_linux -%}\n    {{ dbt.replace(\"file_path\", \"regexp_replace(file_path,'.*/','')\", \"''\") }}\n  {% else %}\n    {{ dbt.replace(\"file_path\", \"regexp_replace(file_path,'.*\\\\\\\\\\\\\\\\','')\", \"''\") }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.704928, "supported_languages": null}, "macro.dbt_project_evaluator.is_not_empty_string": {"name": "is_not_empty_string", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/is_not_empty_string.sql", "original_file_path": "macros/is_not_empty_string.sql", "unique_id": "macro.dbt_project_evaluator.is_not_empty_string", "macro_sql": "{% macro is_not_empty_string(str) %}\n    {{ return(adapter.dispatch('is_not_empty_string', 'dbt_project_evaluator')(str)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__is_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.705198, "supported_languages": null}, "macro.dbt_project_evaluator.default__is_not_empty_string": {"name": "default__is_not_empty_string", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/is_not_empty_string.sql", "original_file_path": "macros/is_not_empty_string.sql", "unique_id": "macro.dbt_project_evaluator.default__is_not_empty_string", "macro_sql": "{% macro default__is_not_empty_string(str) %}\n\n    {% if str %}\n    {{ true }}\n    {% else %}\n    {{ false }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.7053802, "supported_languages": null}, "macro.dbt_project_evaluator.insert_resources_from_graph": {"name": "insert_resources_from_graph", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/insert_resources_from_graph.sql", "original_file_path": "macros/insert_resources_from_graph.sql", "unique_id": "macro.dbt_project_evaluator.insert_resources_from_graph", "macro_sql": "{% macro insert_resources_from_graph(relation, resource_type='nodes', relationships=False, batch_size=var('insert_batch_size') | int) %}\n  {%- set values = get_resource_values(resource_type, relationships) -%}\n  {%- set values_length = values | length -%}\n  {%- set loop_count = (values_length / batch_size) | round(0, 'ceil') | int -%}\n  \n    {%- for loop_number in range(loop_count) -%}\n        {%- set lower_bound = loop.index0 * batch_size -%}\n        {%- set upper_bound = loop.index * batch_size -%}\n        {%- set values_subset = values[lower_bound : upper_bound] %}\n        {%- set values_list_of_strings = [] -%}\n        {%- for indiv_values in values_subset %}\n            {%- do values_list_of_strings.append( indiv_values | join(\", \\n\")) -%}\n        {%- endfor -%}\n        {%- set values_string = '(' ~ values_list_of_strings | join(\"), \\n\\n(\") ~ ')' %}\n        {%- set insert_statement = \"insert into \" ~ relation ~ \" values \\n\" ~  values_string ~ \";\"%}\n        {% call statement('insert') -%}\n            {{ insert_statement }}\n        {%- endcall %}\n    {% endfor %}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.get_resource_values", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.706728, "supported_languages": null}, "macro.dbt_project_evaluator.print_dbt_project_evaluator_issues": {"name": "print_dbt_project_evaluator_issues", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/on-run-end/print_dbt_project_evaluator_issues.sql", "original_file_path": "macros/on-run-end/print_dbt_project_evaluator_issues.sql", "unique_id": "macro.dbt_project_evaluator.print_dbt_project_evaluator_issues", "macro_sql": "{% macro print_dbt_project_evaluator_issues(format='table') %}\n\n  {%- if flags.WHICH in [\"build\",\"test\"] -%}\n    {{ print(\"\\n### List of issues raised by dbt_project_evaluator ###\") }}\n\n    {% for result in results | selectattr('failures') | selectattr('failures', '>', 0) %}\n      \n      {% if result.node.fqn[0] == \"dbt_project_evaluator\" %}\n        \n        {{ print(\"\\n-- \" ~ result.node.alias ~ \" --\") }}\n\n        {% set unique_id_model_checked = result.node.depends_on.nodes[0] %}\n\n        {% set model_details = graph[\"nodes\"][unique_id_model_checked] %}\n        {% set name_model_checked = model_details.alias %}\n        {% set model_schema = model_details.schema %}\n        {% set model_database = model_details.database %}\n        {% set db_schema = model_database ~ \".\" ~ model_schema if model_database else model_schema %}\n\n        {% set sql_statement %}\n        select * from {{db_schema}}.{{name_model_checked}}\n        {% endset %}\n\n        {% set query_results = run_query(sql_statement) %}\n        {% if format == 'table' %}\n          {{ print(query_results.print_table(max_column_width=80, max_rows=1000) or \"\") }}\n        {% elif format == 'csv' %}  \n          {{ print(query_results.print_csv() or \"\") }}\n        {% else %}\n            {%- do exceptions.raise_compiler_error(\"format can only be 'table' or 'csv'\") -%}\n        {% endif %}\n\n\n      {% endif %}\n\n    {% endfor %}\n\n    {{ print(\"\\n\") }}\n  {%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.708778, "supported_languages": null}, "macro.dbt_project_evaluator.duckdb__split_part": {"name": "duckdb__split_part", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/cross_db_shim/duckdb_shims.sql", "original_file_path": "macros/cross_db_shim/duckdb_shims.sql", "unique_id": "macro.dbt_project_evaluator.duckdb__split_part", "macro_sql": "{% macro duckdb__split_part(string_text, delimiter_text, part_number) -%}\n    str_split({{string_text}}, {{delimiter_text}})[{{part_number}}]\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.709086, "supported_languages": null}, "macro.dbt_project_evaluator.duckdb__listagg": {"name": "duckdb__listagg", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/cross_db_shim/duckdb_shims.sql", "original_file_path": "macros/cross_db_shim/duckdb_shims.sql", "unique_id": "macro.dbt_project_evaluator.duckdb__listagg", "macro_sql": "{% macro duckdb__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {# \n        This is not the full support for listagg on DuckDB but it allows tests to pass/fail for this package\n        - order_by_clause does not work, so we need to sort the CTE before calling listagg\n        - support for limit_num was not added\n    #}\n\n    {% if limit_num -%}\n        {%- do exceptions.raise_compiler_error(\"listagg on DuckDB doesn't support limit_num\") -%}\n    {%- endif %}\n\n    string_agg(\n        {{ measure }}\n        , {{ delimiter_text }}\n        {{ order_by_clause }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.709358, "supported_languages": null}, "macro.dbt_project_evaluator.redshift__type_string": {"name": "redshift__type_string", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/cross_db_shim/redshift_shims.sql", "original_file_path": "macros/cross_db_shim/redshift_shims.sql", "unique_id": "macro.dbt_project_evaluator.redshift__type_string", "macro_sql": "{%- macro redshift__type_string() -%}\n  {{ \"VARCHAR(600)\" }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.7094789, "supported_languages": null}, "macro.dbt_project_evaluator.spark__escape_single_quotes": {"name": "spark__escape_single_quotes", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/cross_db_shim/spark_shims.sql", "original_file_path": "macros/cross_db_shim/spark_shims.sql", "unique_id": "macro.dbt_project_evaluator.spark__escape_single_quotes", "macro_sql": "{% macro spark__escape_single_quotes(expression) -%}\n    {{ expression | replace(\"'\",\"\\\\'\") }}  \n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.709642, "supported_languages": null}, "macro.dbt_project_evaluator.get_node_values": {"name": "get_node_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_node_values.sql", "original_file_path": "macros/unpack/get_node_values.sql", "unique_id": "macro.dbt_project_evaluator.get_node_values", "macro_sql": "{%- macro get_node_values() -%}\n    {{ return(adapter.dispatch('get_node_values', 'dbt_project_evaluator')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__get_node_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.710432, "supported_languages": null}, "macro.dbt_project_evaluator.default__get_node_values": {"name": "default__get_node_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_node_values.sql", "original_file_path": "macros/unpack/get_node_values.sql", "unique_id": "macro.dbt_project_evaluator.default__get_node_values", "macro_sql": "{%- macro default__get_node_values() -%}\n\n    {%- if execute -%}\n    {%- set nodes_list = graph.nodes.values() -%}\n    {%- set values = [] -%}\n\n    {%- for node in nodes_list -%}\n\n        {%- set hard_coded_references = dbt_project_evaluator.find_all_hard_coded_references(node) -%}\n        {%- set exclude_node = dbt_project_evaluator.set_is_excluded(node, resource_type=\"node\") -%}\n\n\n        {%- set values_line  = \n            [\n                wrap_string_with_quotes(node.unique_id),\n                wrap_string_with_quotes(node.name),\n                wrap_string_with_quotes(node.resource_type),\n                wrap_string_with_quotes(node.original_file_path | replace(\"\\\\\",\"\\\\\\\\\")),\n                \"cast(\" ~ node.config.enabled | trim ~ \" as boolean)\",\n                wrap_string_with_quotes(node.config.materialized),\n                wrap_string_with_quotes(node.config.on_schema_change),\n                wrap_string_with_quotes(node.database),\n                wrap_string_with_quotes(node.schema),\n                wrap_string_with_quotes(node.package_name),\n                wrap_string_with_quotes(node.alias),\n                \"cast(\" ~ dbt_project_evaluator.is_not_empty_string(node.description) | trim ~ \" as boolean)\",\n                \"''\" if not node.column_name else wrap_string_with_quotes(dbt.escape_single_quotes(node.column_name)),\n                wrap_string_with_quotes(node.meta | tojson),\n                wrap_string_with_quotes(dbt.escape_single_quotes(hard_coded_references)),\n                wrap_string_with_quotes(node.get('depends_on',{}).get('macros',[]) | tojson),\n                \"cast(\" ~ dbt_project_evaluator.is_not_empty_string(node.test_metadata) | trim ~ \" as boolean)\",\n                \"cast(\" ~ exclude_node ~ \" as boolean)\",\n            ]\n        %}\n\n        {%- do values.append(values_line) -%}\n\n    {%- endfor -%}\n    {%- endif -%}\n\n    {{ return(values) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_project_evaluator.find_all_hard_coded_references", "macro.dbt_project_evaluator.set_is_excluded", "macro.dbt_project_evaluator.wrap_string_with_quotes", "macro.dbt_project_evaluator.is_not_empty_string", "macro.dbt.escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.711942, "supported_languages": null}, "macro.dbt_project_evaluator.get_metric_values": {"name": "get_metric_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_metric_values.sql", "original_file_path": "macros/unpack/get_metric_values.sql", "unique_id": "macro.dbt_project_evaluator.get_metric_values", "macro_sql": "{%- macro get_metric_values() -%}\n    {{ return(adapter.dispatch('get_metric_values', 'dbt_project_evaluator')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__get_metric_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.7129889, "supported_languages": null}, "macro.dbt_project_evaluator.default__get_metric_values": {"name": "default__get_metric_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_metric_values.sql", "original_file_path": "macros/unpack/get_metric_values.sql", "unique_id": "macro.dbt_project_evaluator.default__get_metric_values", "macro_sql": "{%- macro default__get_metric_values() -%}\n\n    {%- if execute -%}\n    {%- set nodes_list = graph.metrics.values() -%}\n    {%- set values = [] -%}\n\n    {%- for node in nodes_list -%}\n\n          {% set metric_filters %}\n            {%- if node.filters|length -%}\n              {%- for filt in node.filters %}\n                '{{ filt.field }}'||'{{ filt.operator }}'||'''{{ dbt.escape_single_quotes(filt.value) }}'''\n                {% if not loop.last %}|| ' - ' ||{% endif %}\n              {% endfor -%}\n            {%- else -%}\n                ''\n            {% endif -%}\n          {% endset %}\n          \n          {%- set values_line = \n            [\n            wrap_string_with_quotes(node.unique_id),\n            wrap_string_with_quotes(node.name),\n            wrap_string_with_quotes(node.resource_type),\n            wrap_string_with_quotes(node.original_file_path | replace(\"\\\\\",\"\\\\\\\\\")),\n            \"cast(\" ~ dbt_project_evaluator.is_not_empty_string(node.description) | trim ~ \" as boolean)\",\n            wrap_string_with_quotes(node.type),\n            wrap_string_with_quotes(node.model.identifier),\n            wrap_string_with_quotes(dbt.escape_single_quotes(node.label)),\n            wrap_string_with_quotes(node.sql),\n            wrap_string_with_quotes(node.timestamp),\n            wrap_string_with_quotes(node.package_name),\n            wrap_string_with_quotes(node.dimensions|join(' - ')),\n            metric_filters,\n            wrap_string_with_quotes(node.meta | tojson)\n            ]\n          %}\n\n        {%- do values.append(values_line) -%}\n\n    {%- endfor -%}\n    {%- endif -%}\n\n    {{ return(values) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_project_evaluator.wrap_string_with_quotes", "macro.dbt_project_evaluator.is_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.71432, "supported_languages": null}, "macro.dbt_project_evaluator.get_resource_values": {"name": "get_resource_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_resource_values.sql", "original_file_path": "macros/unpack/get_resource_values.sql", "unique_id": "macro.dbt_project_evaluator.get_resource_values", "macro_sql": "{% macro get_resource_values(resource=None, relationships=None) %}\n  {% if relationships %}\n    {{ return(adapter.dispatch('get_relationship_values', 'dbt_project_evaluator')(node_type=resource)) }}\n  {% elif resource == 'exposures' %}\n    {{ return(adapter.dispatch('get_exposure_values', 'dbt_project_evaluator')()) }}\n  {% elif resource == 'sources' %}\n    {{ return(adapter.dispatch('get_source_values', 'dbt_project_evaluator')()) }}\n  {% elif resource == 'metrics' %}\n    {{ return(adapter.dispatch('get_metric_values', 'dbt_project_evaluator')()) }}\n  {% elif resource == 'nodes' %}\n    {{ return(adapter.dispatch('get_node_values', 'dbt_project_evaluator')()) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_project_evaluator.get_relationship_values", "macro.dbt_project_evaluator.default__get_relationship_values", "macro.dbt_project_evaluator.get_exposure_values", "macro.dbt_project_evaluator.default__get_exposure_values", "macro.dbt_project_evaluator.get_source_values", "macro.dbt_project_evaluator.default__get_source_values", "macro.dbt_project_evaluator.get_metric_values", "macro.dbt_project_evaluator.default__get_metric_values", "macro.dbt_project_evaluator.get_node_values", "macro.dbt_project_evaluator.default__get_node_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.7152882, "supported_languages": null}, "macro.dbt_project_evaluator.get_relationship_values": {"name": "get_relationship_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_relationship_values.sql", "original_file_path": "macros/unpack/get_relationship_values.sql", "unique_id": "macro.dbt_project_evaluator.get_relationship_values", "macro_sql": "{%- macro get_relationship_values(node_type) -%}\n    {{ return(adapter.dispatch('get_relationship_values', 'dbt_project_evaluator')(node_type)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__get_relationship_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.716815, "supported_languages": null}, "macro.dbt_project_evaluator.default__get_relationship_values": {"name": "default__get_relationship_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_relationship_values.sql", "original_file_path": "macros/unpack/get_relationship_values.sql", "unique_id": "macro.dbt_project_evaluator.default__get_relationship_values", "macro_sql": "{%- macro default__get_relationship_values(node_type) -%}\n\n    {%- if execute -%}\n        {%- if node_type == 'nodes' %}\n            {% set nodes_list = graph.nodes.values() %}   \n        {%- elif node_type == 'exposures' -%}\n            {% set nodes_list = graph.exposures.values() %}\n        {%- elif node_type == 'metrics' -%}\n            {% set nodes_list = graph.metrics.values() %}\n        {%- else -%}\n            {{ exceptions.raise_compiler_error(\"node_type needs to be either nodes, exposures or metrics, got \" ~ node_type) }}\n        {% endif -%}\n        \n        {%- set values = [] -%}\n\n        {%- for node in nodes_list -%}\n\n            {%- if node.get('depends_on',{}).get('nodes',[]) |length == 0 -%}\n\n                {%- set values_line = \n                  [\n                    \"cast('\" ~ node.unique_id ~ \"' as \" ~ dbt.type_string() ~ \")\",\n                    \"cast(NULL as \" ~ dbt.type_string() ~ \")\",\n                    \"FALSE\",\n                  ] \n                %}\n                  \n                {%- do values.append(values_line) -%}\n\n            {%- else -%}       \n\n                {%- for parent in node.get('depends_on',{}).get('nodes',[]) -%}\n\n                    {%- set values_line = \n                        [\n                            \"cast('\" ~ node.unique_id ~ \"' as \" ~ dbt.type_string() ~ \")\",\n                            \"cast('\" ~ parent ~ \"' as \" ~ dbt.type_string() ~ \")\",\n                            \"\" ~ loop.last ~ \"\" if node.unique_id.split('.')[0] == 'test' else \"FALSE\"\n                        ]\n                    %}\n                      \n                    {%- do values.append(values_line) -%}\n\n                {%- endfor -%}\n\n            {%- endif -%}\n\n        {%- endfor -%}\n    \n    {{ return(values) }}\n\n    {%- endif -%}\n  \n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.718365, "supported_languages": null}, "macro.dbt_project_evaluator.get_exposure_values": {"name": "get_exposure_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_exposure_values.sql", "original_file_path": "macros/unpack/get_exposure_values.sql", "unique_id": "macro.dbt_project_evaluator.get_exposure_values", "macro_sql": "{%- macro get_exposure_values() -%}\n    {{ return(adapter.dispatch('get_exposure_values', 'dbt_project_evaluator')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__get_exposure_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.718889, "supported_languages": null}, "macro.dbt_project_evaluator.default__get_exposure_values": {"name": "default__get_exposure_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_exposure_values.sql", "original_file_path": "macros/unpack/get_exposure_values.sql", "unique_id": "macro.dbt_project_evaluator.default__get_exposure_values", "macro_sql": "{%- macro default__get_exposure_values() -%}\n\n    {%- if execute -%}\n\n        {%- set nodes_list = graph.exposures.values() -%}\n        {%- set values = [] -%}\n\n        {%- for node in nodes_list -%}\n\n          {%- set values_line = \n            [\n              wrap_string_with_quotes(node.unique_id),\n              wrap_string_with_quotes(node.name),\n              wrap_string_with_quotes(node.resource_type),\n              wrap_string_with_quotes(node.original_file_path | replace(\"\\\\\",\"\\\\\\\\\")),\n              \"cast(\" ~ dbt_project_evaluator.is_not_empty_string(node.description) | trim ~ \" as boolean)\",\n              wrap_string_with_quotes(node.type),\n              wrap_string_with_quotes(node.maturity),\n              wrap_string_with_quotes(node.package_name),\n              wrap_string_with_quotes(node.url),\n              wrap_string_with_quotes(node.owner.name),\n              wrap_string_with_quotes(node.owner.email),\n              wrap_string_with_quotes(node.meta | tojson)\n            ]\n          %}\n\n          {%- do values.append(values_line) -%}\n\n    {%- endfor -%}\n    {%- endif -%}\n\n    {{ return(values) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_project_evaluator.wrap_string_with_quotes", "macro.dbt_project_evaluator.is_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.719813, "supported_languages": null}, "macro.dbt_project_evaluator.get_source_values": {"name": "get_source_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_source_values.sql", "original_file_path": "macros/unpack/get_source_values.sql", "unique_id": "macro.dbt_project_evaluator.get_source_values", "macro_sql": "{%- macro get_source_values() -%}\n    {{ return(adapter.dispatch('get_source_values', 'dbt_project_evaluator')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_project_evaluator.default__get_source_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.720493, "supported_languages": null}, "macro.dbt_project_evaluator.default__get_source_values": {"name": "default__get_source_values", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "macros/unpack/get_source_values.sql", "original_file_path": "macros/unpack/get_source_values.sql", "unique_id": "macro.dbt_project_evaluator.default__get_source_values", "macro_sql": "{%- macro default__get_source_values() -%}\n\n    {%- if execute -%}\n    {%- set nodes_list = graph.sources.values() -%}\n    {%- set values = [] -%}\n\n    {%- for node in nodes_list -%}\n\n        {%- set exclude_source = dbt_project_evaluator.set_is_excluded(node, resource_type=\"source\") -%}\n\n         {%- set values_line = \n            [\n              wrap_string_with_quotes(node.unique_id),\n              wrap_string_with_quotes(node.name),\n              wrap_string_with_quotes(node.original_file_path | replace(\"\\\\\",\"\\\\\\\\\")),\n              wrap_string_with_quotes(node.alias),\n              wrap_string_with_quotes(node.resource_type),\n              wrap_string_with_quotes(node.source_name),\n              \"cast(\" ~ dbt_project_evaluator.is_not_empty_string(node.source_description) | trim ~ \" as boolean)\",\n              \"cast(\" ~ dbt_project_evaluator.is_not_empty_string(node.description) | trim ~ \" as boolean)\",\n              \"cast(\" ~ node.config.enabled ~ \" as boolean)\",\n              wrap_string_with_quotes(node.loaded_at_field | replace(\"'\", \"_\")),\n              wrap_string_with_quotes(node.database),\n              wrap_string_with_quotes(node.schema),\n              wrap_string_with_quotes(node.package_name),\n              wrap_string_with_quotes(node.loader),\n              wrap_string_with_quotes(node.identifier),\n              wrap_string_with_quotes(node.meta | tojson),\n              \"cast(\" ~ exclude_source ~ \" as boolean)\",\n            ]\n        %}\n            \n        {%- do values.append(values_line) -%}\n\n    {%- endfor -%}\n    {%- endif -%}\n\n\n    {{ return(values) }}\n \n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_project_evaluator.set_is_excluded", "macro.dbt_project_evaluator.wrap_string_with_quotes", "macro.dbt_project_evaluator.is_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.72176, "supported_languages": null}, "macro.dbt_project_evaluator.test_is_empty": {"name": "test_is_empty", "resource_type": "macro", "package_name": "dbt_project_evaluator", "path": "tests/generic/test_is_empty.sql", "original_file_path": "tests/generic/test_is_empty.sql", "unique_id": "macro.dbt_project_evaluator.test_is_empty", "macro_sql": "{% test is_empty(model) %}\n\n    {{ config (\n        severity = 'warn',\n        fail_calc = \"n_records\"\n    ) }}\n\n    select count(*) as n_records\n    from {{ model }}\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1699414205.722003, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {"exposure.mattermost_analytics.community_tracks_explore": {"name": "community_tracks_explore", "resource_type": "exposure", "package_name": "mattermost_analytics", "path": "marts/web_app/community/_community_tracks__exposures.yml", "original_file_path": "models/marts/web_app/community/_community_tracks__exposures.yml", "unique_id": "exposure.mattermost_analytics.community_tracks_explore", "fqn": ["mattermost_analytics", "marts", "web_app", "community", "community_tracks_explore"], "type": "notebook", "owner": {"email": "analytics@mattermost.com", "name": "Srikar Gudipudi"}, "description": "Data from Community Server. Offers insights on available events, user activity, as well as daily volume of\nevents.\n", "label": null, "maturity": "medium", "meta": {}, "tags": ["looker"], "config": {"enabled": true}, "unrendered_config": {}, "url": null, "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.grp_community_tracks"]}, "refs": [{"name": "grp_community_tracks", "package": null, "version": null}], "sources": [], "metrics": [], "created_at": 1699414207.3298419}, "exposure.mattermost_analytics.event_registry_dashboard": {"name": "event_registry_dashboard", "resource_type": "exposure", "package_name": "mattermost_analytics", "path": "marts/data_eng/event_registry/_event_registry__exposures.yml", "original_file_path": "models/marts/data_eng/event_registry/_event_registry__exposures.yml", "unique_id": "exposure.mattermost_analytics.event_registry_dashboard", "fqn": ["mattermost_analytics", "marts", "data_eng", "event_registry", "event_registry_dashboard"], "type": "application", "owner": {"email": "ioannis.foukarakis@mattermost.com", "name": "Ioannis Foukarakis"}, "description": "Looker dashboard for event registry. Offers insights on available events, as well as daily volume of\nevents.\n", "label": null, "maturity": "medium", "meta": {}, "tags": ["looker"], "config": {"enabled": true}, "unrendered_config": {}, "url": "https://mattermost.looker.com/dashboards/397", "depends_on": {"macros": [], "nodes": ["model.mattermost_analytics.dim_events", "model.mattermost_analytics.fct_events_daily_snapshot"]}, "refs": [{"name": "dim_events", "package": null, "version": null}, {"name": "fct_events_daily_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "created_at": 1699414207.3313248}}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {"seed.dbt_project_evaluator.dbt_project_evaluator_exceptions": [{"database": "jaffle_shop", "schema": "main", "name": "dbt_project_evaluator_exceptions", "resource_type": "seed", "package_name": "dbt_project_evaluator", "path": "dbt_project_evaluator_exceptions.csv", "original_file_path": "seeds/dbt_project_evaluator_exceptions.csv", "unique_id": "seed.dbt_project_evaluator.dbt_project_evaluator_exceptions", "fqn": ["dbt_project_evaluator", "dbt_project_evaluator_exceptions"], "alias": "dbt_project_evaluator_exceptions", "checksum": {"name": "sha256", "checksum": "55374346a29c2ef9f7ac7b8d3f249e818f60dbd9586ab2645c294d3438f094d9"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"enabled": false}, "created_at": 1699414206.78975, "config_call_dict": {}, "relation_name": "\"jaffle_shop\".main.dbt_project_evaluator_exceptions", "raw_code": "", "root_path": "/Users/wcchang/InfuseAI/projects/tmp/mattermost-data-warehouse/transform/mattermost-analytics/dbt_packages/dbt_project_evaluator", "depends_on": {"macros": []}, "defer_relation": null}]}, "parent_map": {"model.mattermost_analytics.stg_mm_telemetry_rc__performance_events": ["source.mattermost_analytics.mm_telemetry_rc.event"], "model.mattermost_analytics.stg_mm_telemetry_rc__tracks": ["model.mattermost_analytics.base_mm_telemetry_rc__tracks"], "model.mattermost_analytics.base_mm_telemetry_rc__tracks": [], "model.mattermost_analytics.stg_cws__marketing": ["source.mattermost_analytics.cws.marketing"], "model.mattermost_analytics.stg_cws__trial_requests": ["source.mattermost_analytics.cws.trial_requests"], "model.mattermost_analytics.stg_mm_mobile_prod__tracks": ["model.mattermost_analytics.base_mm_mobile_prod__tracks"], "model.mattermost_analytics.base_mm_mobile_prod__tracks": [], "model.mattermost_analytics.stg_mattermost_docs__tracks": ["model.mattermost_analytics.base_mattermost_docs__tracks"], "model.mattermost_analytics.base_mattermost_docs__tracks": [], "model.mattermost_analytics.stg_mm_plugin_prod__tracks": ["model.mattermost_analytics.base_mm_plugin_prod__tracks"], "model.mattermost_analytics.base_mm_plugin_prod__tracks": [], "model.mattermost_analytics.stg_portal_prod__tracks": ["model.mattermost_analytics.base_portal_prod__tracks"], "model.mattermost_analytics.base_portal_prod__tracks": [], "model.mattermost_analytics.stg_mattermost_jira__issues": ["source.mattermost_analytics.mattermost_jira.issues"], "model.mattermost_analytics.stg_mattermost_jira__projects": ["source.mattermost_analytics.mattermost_jira.projects"], "model.mattermost_analytics.stg_incident_response_prod__tracks": ["model.mattermost_analytics.base_incident_response_prod__tracks"], "model.mattermost_analytics.base_incident_response_prod__tracks": [], "model.mattermost_analytics.stg_diagnostics__log_entries": ["source.mattermost_analytics.diagnostics.log_entries"], "model.mattermost_analytics.stg_salesforce__opportunity": ["source.mattermost_analytics.salesforce.opportunity"], "model.mattermost_analytics.stg_salesforce__campaign": ["source.mattermost_analytics.salesforce.campaign"], "model.mattermost_analytics.stg_salesforce__contact": ["source.mattermost_analytics.salesforce.contact"], "model.mattermost_analytics.stg_salesforce__account": ["source.mattermost_analytics.salesforce.account"], "model.mattermost_analytics.stg_salesforce__lead": ["source.mattermost_analytics.salesforce.lead"], "model.mattermost_analytics.stg_salesforce__campaign_member": ["source.mattermost_analytics.salesforce.campaignmember"], "model.mattermost_analytics.stg_salesforce__opportunity_line_item": ["source.mattermost_analytics.salesforce.opportunitylineitem"], "model.mattermost_analytics.stg_salesforce__user": ["source.mattermost_analytics.salesforce.user"], "model.mattermost_analytics.stg_mattermost__version_release_dates": ["source.mattermost_analytics.mattermost.version_release_dates"], "model.mattermost_analytics.stg_mattermost2__tracks": ["model.mattermost_analytics.base_mattermost2__tracks"], "model.mattermost_analytics.stg_mattermost2__oauth": ["source.mattermost_analytics.mattermost2.config_oauth"], "model.mattermost_analytics.stg_mattermost2__server": ["source.mattermost_analytics.mattermost2.server"], "model.mattermost_analytics.stg_mattermost2__activity": ["source.mattermost_analytics.mattermost2.activity"], "model.mattermost_analytics.base_mattermost2__tracks": [], "model.mattermost_analytics.stg_mm_telemetry_prod__activity": ["source.mattermost_analytics.mm_telemetry_prod.activity"], "model.mattermost_analytics.stg_mm_telemetry_prod__oauth": ["source.mattermost_analytics.mm_telemetry_prod.config_oauth"], "model.mattermost_analytics.stg_mm_telemetry_prod__tracks": ["model.mattermost_analytics.base_mm_telemetry_prod__tracks"], "model.mattermost_analytics.stg_mm_telemetry_prod__server": ["source.mattermost_analytics.mm_telemetry_prod.server"], "model.mattermost_analytics.stg_mm_telemetry_prod__performance_events": ["source.mattermost_analytics.mm_telemetry_prod.event"], "model.mattermost_analytics.base_mm_telemetry_prod__tracks": [], "model.mattermost_analytics.stg_mattermostcom__tracks": ["model.mattermost_analytics.base_mattermostcom__tracks"], "model.mattermost_analytics.base_mattermostcom__tracks": [], "model.mattermost_analytics.stg_hacktoberboard_prod__tracks": ["model.mattermost_analytics.base_hacktoberboard_prod__tracks"], "model.mattermost_analytics.base_hacktoberboard_prod__tracks": [], "model.mattermost_analytics.stg_stripe__subscription_items": ["source.mattermost_analytics.stripe.subscription_items"], "model.mattermost_analytics.stg_stripe__invoice_line_items": ["source.mattermost_analytics.stripe.invoice_line_items"], "model.mattermost_analytics.stg_stripe__invoices": ["source.mattermost_analytics.stripe.invoices"], "model.mattermost_analytics.stg_stripe__subscriptions": ["source.mattermost_analytics.stripe.subscriptions"], "model.mattermost_analytics.stg_stripe__products": ["source.mattermost_analytics.stripe.products"], "model.mattermost_analytics.stg_stripe__customers": ["source.mattermost_analytics.stripe.customers"], "model.mattermost_analytics.grp_performance_events": ["model.mattermost_analytics.int_mm_telemetry_prod_performance_events", "model.mattermost_analytics.int_mm_telemetry_rc_performance_events"], "model.mattermost_analytics.grp_community_tracks": ["model.mattermost_analytics.int_mm_telemetry_prod__community_tracks", "model.mattermost_analytics.int_mm_telemetry_rc__community_tracks"], "model.mattermost_analytics.fct_events_daily_snapshot": ["model.mattermost_analytics.int_events_aggregated_to_date"], "model.mattermost_analytics.dim_events": ["model.mattermost_analytics.int_events_aggregated_to_date"], "model.mattermost_analytics.fct_in_product_trial_requests": ["model.mattermost_analytics.stg_cws__trial_requests", "model.mattermost_analytics.stg_salesforce__campaign_member", "model.mattermost_analytics.stg_salesforce__lead"], "model.mattermost_analytics.fct_cloud_trial_requests": ["model.mattermost_analytics.int_cloud_trial_requests", "model.mattermost_analytics.stg_salesforce__campaign_member", "model.mattermost_analytics.stg_salesforce__lead"], "model.mattermost_analytics.dim_fix_versions": ["model.mattermost_analytics.stg_mattermost__version_release_dates", "model.mattermost_analytics.stg_mattermost_jira__issues"], "model.mattermost_analytics.dim_labels": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "model.mattermost_analytics.dim_projects": ["model.mattermost_analytics.stg_mattermost_jira__projects"], "model.mattermost_analytics.fct_issues_daily_snapshot": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "model.mattermost_analytics.dim_server_info": ["model.mattermost_analytics.int_server_active_days_spined"], "model.mattermost_analytics.dim_daily_server_info": ["model.mattermost_analytics.int_excludable_servers", "model.mattermost_analytics.int_server_active_days_spined"], "model.mattermost_analytics.dim_daily_server_config": ["model.mattermost_analytics.int_server_active_days_spined", "model.mattermost_analytics.stg_mattermost2__oauth", "model.mattermost_analytics.stg_mm_telemetry_prod__oauth"], "model.mattermost_analytics.fct_active_users": ["model.mattermost_analytics.dim_excludable_servers", "model.mattermost_analytics.int_server_active_days_spined", "model.mattermost_analytics.int_user_active_days_spined"], "model.mattermost_analytics.dim_version": ["model.mattermost_analytics.int_server_active_days_spined"], "model.mattermost_analytics.dim_excludable_servers": ["model.mattermost_analytics.int_excludable_servers"], "model.mattermost_analytics.fct_active_servers": ["model.mattermost_analytics.int_server_active_days_spined"], "model.mattermost_analytics.fct_security_newsletter": ["model.mattermost_analytics.stg_cws__marketing", "model.mattermost_analytics.stg_salesforce__campaign_member", "model.mattermost_analytics.stg_salesforce__lead"], "model.mattermost_analytics.telemetry_days": [], "model.mattermost_analytics.int_mm_telemetry_prod_performance_events": ["model.mattermost_analytics.stg_mm_telemetry_prod__performance_events"], "model.mattermost_analytics.int_mm_telemetry_rc_performance_events": ["model.mattermost_analytics.stg_mm_telemetry_rc__performance_events"], "model.mattermost_analytics.int_mm_telemetry_prod__community_tracks": ["model.mattermost_analytics.stg_mm_telemetry_prod__tracks"], "model.mattermost_analytics.int_mm_telemetry_rc__community_tracks": ["model.mattermost_analytics.stg_mm_telemetry_rc__tracks"], "model.mattermost_analytics.int_mattermostcom_aggregated_to_date": ["model.mattermost_analytics.stg_mattermostcom__tracks"], "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date": ["model.mattermost_analytics.stg_mattermost_docs__tracks"], "model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date": ["model.mattermost_analytics.stg_hacktoberboard_prod__tracks"], "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date": ["model.mattermost_analytics.stg_mm_plugin_prod__tracks"], "model.mattermost_analytics.int_portal_prod_aggregated_to_date": ["model.mattermost_analytics.stg_portal_prod__tracks"], "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date": ["model.mattermost_analytics.stg_mm_telemetry_prod__tracks"], "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date": ["model.mattermost_analytics.stg_incident_response_prod__tracks"], "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date": ["model.mattermost_analytics.stg_mm_telemetry_rc__tracks"], "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date": ["model.mattermost_analytics.stg_mm_mobile_prod__tracks"], "model.mattermost_analytics.int_events_aggregated_to_date": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date", "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date", "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date", "model.mattermost_analytics.int_mattermostcom_aggregated_to_date", "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date", "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date", "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date", "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date", "model.mattermost_analytics.int_portal_prod_aggregated_to_date"], "model.mattermost_analytics.int_cloud_trial_requests": ["model.mattermost_analytics.stg_stripe__customers", "model.mattermost_analytics.stg_stripe__products", "model.mattermost_analytics.stg_stripe__subscriptions"], "model.mattermost_analytics.int_user_active_days_spined": ["model.mattermost_analytics.int_user_active_days_legacy_telemetry", "model.mattermost_analytics.int_user_active_days_mobile_telemetry", "model.mattermost_analytics.int_user_active_days_server_telemetry", "model.mattermost_analytics.telemetry_days"], "model.mattermost_analytics.int_user_active_days_legacy_telemetry": ["model.mattermost_analytics.stg_mattermost2__tracks"], "model.mattermost_analytics.int_user_active_days_mobile_telemetry": ["model.mattermost_analytics.stg_mm_mobile_prod__tracks"], "model.mattermost_analytics.int_user_active_days_server_telemetry": ["model.mattermost_analytics.stg_mm_telemetry_prod__tracks"], "model.mattermost_analytics.int_server_active_days_spined": ["model.mattermost_analytics.int_activity_latest_daily", "model.mattermost_analytics.int_activity_legacy_latest_daily", "model.mattermost_analytics.int_excludable_servers", "model.mattermost_analytics.int_server_security_update_latest_daily", "model.mattermost_analytics.int_server_telemetry_latest_daily", "model.mattermost_analytics.int_server_telemetry_legacy_latest_daily", "model.mattermost_analytics.telemetry_days"], "model.mattermost_analytics.int_excludable_servers": ["model.mattermost_analytics.int_excludable_servers_cloud_installations", "model.mattermost_analytics.int_excludable_servers_invalid_security_data", "model.mattermost_analytics.int_excludable_servers_invalid_server_id", "model.mattermost_analytics.int_excludable_servers_single_day_activity", "seed.mattermost_analytics.excludable_servers"], "model.mattermost_analytics.int_server_summary": ["model.mattermost_analytics.int_server_telemetry_latest_daily", "model.mattermost_analytics.int_server_telemetry_legacy_latest_daily", "model.mattermost_analytics.int_user_active_days_legacy_telemetry", "model.mattermost_analytics.int_user_active_days_server_telemetry", "model.mattermost_analytics.stg_diagnostics__log_entries"], "model.mattermost_analytics._int_server_installation_id_bridge": ["model.mattermost_analytics.int_server_telemetry_latest_daily"], "model.mattermost_analytics.int_excludable_servers_cloud_installations": ["model.mattermost_analytics._int_server_installation_id_bridge", "model.mattermost_analytics.stg_stripe__customers", "model.mattermost_analytics.stg_stripe__subscriptions"], "model.mattermost_analytics.int_excludable_servers_single_day_activity": ["model.mattermost_analytics.int_server_summary"], "model.mattermost_analytics.int_excludable_servers_invalid_security_data": ["model.mattermost_analytics.stg_diagnostics__log_entries"], "model.mattermost_analytics.int_excludable_servers_invalid_server_id": ["model.mattermost_analytics.int_server_summary"], "model.mattermost_analytics.int_server_security_update_latest_daily": ["model.mattermost_analytics.stg_diagnostics__log_entries"], "model.mattermost_analytics.int_activity_latest_daily": ["model.mattermost_analytics.stg_mm_telemetry_prod__activity"], "model.mattermost_analytics.int_server_telemetry_legacy_latest_daily": ["model.mattermost_analytics.stg_mattermost2__server"], "model.mattermost_analytics.int_activity_legacy_latest_daily": ["model.mattermost_analytics.stg_mattermost2__activity"], "model.mattermost_analytics.int_server_telemetry_latest_daily": ["model.mattermost_analytics.stg_mm_telemetry_prod__server"], "test.mattermost_analytics.test_trial_requests": ["source.mattermost_analytics.cws.trial_requests"], "test.mattermost_analytics.test_lead__unique_email": ["model.mattermost_analytics.stg_salesforce__lead"], "test.mattermost_analytics.test_contact__unique_email": ["model.mattermost_analytics.stg_salesforce__contact"], "test.mattermost_analytics.test_subscription__onprem_has_license_data": ["model.mattermost_analytics.stg_stripe__products", "model.mattermost_analytics.stg_stripe__subscription_items", "model.mattermost_analytics.stg_stripe__subscriptions"], "test.mattermost_analytics.test_subscription_items__max_two_per_onprem_subscription": ["model.mattermost_analytics.stg_stripe__products", "model.mattermost_analytics.stg_stripe__subscription_items"], "test.mattermost_analytics.test_valid_emails": ["model.mattermost_analytics.int_cloud_trial_requests"], "seed.mattermost_analytics.dbt_project_evaluator_exceptions": [], "seed.mattermost_analytics.country_codes": [], "seed.mattermost_analytics.excludable_servers": [], "operation.mattermost_analytics.mattermost_analytics-on-run-start-0": [], "model.dbt_project_evaluator.stg_nodes": [], "model.dbt_project_evaluator.stg_exposure_relationships": ["model.dbt_project_evaluator.base_exposure_relationships"], "model.dbt_project_evaluator.stg_node_relationships": ["model.dbt_project_evaluator.base_node_relationships"], "model.dbt_project_evaluator.stg_sources": [], "model.dbt_project_evaluator.stg_exposures": [], "model.dbt_project_evaluator.stg_metric_relationships": ["model.dbt_project_evaluator.base_metric_relationships"], "model.dbt_project_evaluator.stg_metrics": [], "model.dbt_project_evaluator.base_node_relationships": [], "model.dbt_project_evaluator.base_exposure_relationships": [], "model.dbt_project_evaluator.base_metric_relationships": [], "model.dbt_project_evaluator.stg_naming_convention_folders": [], "model.dbt_project_evaluator.stg_naming_convention_prefixes": [], "model.dbt_project_evaluator.fct_undocumented_models": ["model.dbt_project_evaluator.int_all_graph_resources", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_documentation_coverage": ["model.dbt_project_evaluator.int_all_graph_resources"], "model.dbt_project_evaluator.int_direct_relationships": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.stg_exposure_relationships", "model.dbt_project_evaluator.stg_metric_relationships", "model.dbt_project_evaluator.stg_node_relationships"], "model.dbt_project_evaluator.int_all_dag_relationships": ["model.dbt_project_evaluator.int_direct_relationships"], "model.dbt_project_evaluator.int_all_graph_resources": ["model.dbt_project_evaluator.stg_exposures", "model.dbt_project_evaluator.stg_metrics", "model.dbt_project_evaluator.stg_naming_convention_folders", "model.dbt_project_evaluator.stg_naming_convention_prefixes", "model.dbt_project_evaluator.stg_nodes", "model.dbt_project_evaluator.stg_sources"], "model.dbt_project_evaluator.fct_multiple_sources_joined": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_root_models": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_model_fanout": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_unused_sources": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_duplicate_sources": ["model.dbt_project_evaluator.int_all_graph_resources"], "model.dbt_project_evaluator.fct_source_fanout": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_direct_join_to_source": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_staging_dependent_on_staging": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_hard_coded_references": ["model.dbt_project_evaluator.int_all_graph_resources", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_missing_primary_key_tests": ["model.dbt_project_evaluator.int_model_test_summary", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_test_coverage": ["model.dbt_project_evaluator.int_model_test_summary"], "model.dbt_project_evaluator.int_model_test_summary": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.int_direct_relationships"], "model.dbt_project_evaluator.fct_exposure_parents_materializations": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_chained_views_dependencies": ["model.dbt_project_evaluator.int_all_dag_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_source_directories": ["model.dbt_project_evaluator.int_all_graph_resources", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_test_directories": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.int_direct_relationships", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_model_naming_conventions": ["model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.stg_naming_convention_prefixes", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "model.dbt_project_evaluator.fct_model_directories": ["model.dbt_project_evaluator.int_all_dag_relationships", "model.dbt_project_evaluator.int_all_graph_resources", "model.dbt_project_evaluator.stg_naming_convention_folders", "seed.mattermost_analytics.dbt_project_evaluator_exceptions"], "test.mattermost_analytics.not_null_stg_cws__trial_requests_trial_request_id.5d6e67e7fd": ["model.mattermost_analytics.stg_cws__trial_requests"], "test.mattermost_analytics.not_null_stg_cws__marketing_marketing_id.4abb89cabf": ["model.mattermost_analytics.stg_cws__marketing"], "test.mattermost_analytics.not_null_stg_cws__marketing_email.76559b841e": ["model.mattermost_analytics.stg_cws__marketing"], "test.mattermost_analytics.dbt_utils_not_empty_string_stg_cws__marketing_email.464934acf5": ["model.mattermost_analytics.stg_cws__marketing"], "test.mattermost_analytics.accepted_values_stg_cws__marketing_subscribed_content__security_newsletter.e571d81e88": ["model.mattermost_analytics.stg_cws__marketing"], "test.mattermost_analytics.not_null_stg_cws__marketing_server_id.61773750b5": ["model.mattermost_analytics.stg_cws__marketing"], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_id.8d17661889": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_id.c498ac5624": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_key.ff8ceb5cc7": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_key.5eb5705b5c": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_id.16f6ab11a8": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_key.5c2aaa3f7e": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_summary.86fc2de000": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_type_id.e9925150aa": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_id.99bc122810": ["model.mattermost_analytics.stg_mattermost_jira__projects"], "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_id.8e7ff4bb80": ["model.mattermost_analytics.stg_mattermost_jira__projects"], "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_key.88afa71403": ["model.mattermost_analytics.stg_mattermost_jira__projects"], "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_key.d99155dfde": ["model.mattermost_analytics.stg_mattermost_jira__projects"], "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_name.6759e236e3": ["model.mattermost_analytics.stg_mattermost_jira__projects"], "test.mattermost_analytics.not_null_stg_salesforce__campaign_campaign_id.8a70e791fc": ["model.mattermost_analytics.stg_salesforce__campaign"], "test.mattermost_analytics.unique_stg_salesforce__campaign_campaign_id.bb510c55b8": ["model.mattermost_analytics.stg_salesforce__campaign"], "test.mattermost_analytics.not_null_stg_salesforce__campaign_member_campaign_member_id.d1d111912d": ["model.mattermost_analytics.stg_salesforce__campaign_member"], "test.mattermost_analytics.unique_stg_salesforce__campaign_member_campaign_member_id.c16f72906a": ["model.mattermost_analytics.stg_salesforce__campaign_member"], "test.mattermost_analytics.not_null_stg_salesforce__contact_contact_id.d7c02bef78": ["model.mattermost_analytics.stg_salesforce__contact"], "test.mattermost_analytics.unique_stg_salesforce__contact_contact_id.0cc2c0609e": ["model.mattermost_analytics.stg_salesforce__contact"], "test.mattermost_analytics.not_null_stg_salesforce__lead_lead_id.e2ba6b2026": ["model.mattermost_analytics.stg_salesforce__lead"], "test.mattermost_analytics.unique_stg_salesforce__lead_lead_id.ba8b21e282": ["model.mattermost_analytics.stg_salesforce__lead"], "test.mattermost_analytics.not_null_stg_salesforce__opportunity_opportunity_id.234c5e60bd": ["model.mattermost_analytics.stg_salesforce__opportunity"], "test.mattermost_analytics.unique_stg_salesforce__opportunity_opportunity_id.367b0f577a": ["model.mattermost_analytics.stg_salesforce__opportunity"], "test.mattermost_analytics.not_null_stg_salesforce__opportunity_line_item_opportunity_line_item.2c8bc71989": ["model.mattermost_analytics.stg_salesforce__opportunity_line_item"], "test.mattermost_analytics.unique_stg_salesforce__opportunity_line_item_opportunity_line_item.9ec65a7607": ["model.mattermost_analytics.stg_salesforce__opportunity_line_item"], "test.mattermost_analytics.not_null_stg_salesforce__user_user_id.ac0ab26d65": ["model.mattermost_analytics.stg_salesforce__user"], "test.mattermost_analytics.unique_stg_salesforce__user_user_id.9a29b41152": ["model.mattermost_analytics.stg_salesforce__user"], "test.mattermost_analytics.not_null_stg_salesforce__account_account_id.1e0ff361d4": ["model.mattermost_analytics.stg_salesforce__account"], "test.mattermost_analytics.unique_stg_salesforce__account_account_id.6d58a39ba7": ["model.mattermost_analytics.stg_salesforce__account"], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_version.c3d9deaded": ["model.mattermost_analytics.stg_mattermost__version_release_dates"], "test.mattermost_analytics.unique_stg_mattermost__version_release_dates_version.092dc272d6": ["model.mattermost_analytics.stg_mattermost__version_release_dates"], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_short_version.675b40f6ae": ["model.mattermost_analytics.stg_mattermost__version_release_dates"], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_planned_release_date.7b8b12b068": ["model.mattermost_analytics.stg_mattermost__version_release_dates"], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_is_supported.111545de05": ["model.mattermost_analytics.stg_mattermost__version_release_dates"], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_release_number.2463bd8110": ["model.mattermost_analytics.stg_mattermost__version_release_dates"], "test.mattermost_analytics.not_null_stg_stripe__customers_created_at.481ec0f98a": ["model.mattermost_analytics.stg_stripe__customers"], "test.mattermost_analytics.not_null_stg_stripe__customers_email.fe9fbbc440": ["model.mattermost_analytics.stg_stripe__customers"], "test.mattermost_analytics.not_null_stg_stripe__customers_customer_id.70a70c42a7": ["model.mattermost_analytics.stg_stripe__customers"], "test.mattermost_analytics.unique_stg_stripe__customers_customer_id.d48ec44cbd": ["model.mattermost_analytics.stg_stripe__customers"], "test.mattermost_analytics.not_null_stg_stripe__customers_updated_at.98c4d1cd4e": ["model.mattermost_analytics.stg_stripe__customers"], "test.mattermost_analytics.not_null_stg_stripe__subscriptions_created_at.27a9cd7f6e": ["model.mattermost_analytics.stg_stripe__subscriptions"], "test.mattermost_analytics.not_null_stg_stripe__subscriptions_subscription_id.7af221a3cd": ["model.mattermost_analytics.stg_stripe__subscriptions"], "test.mattermost_analytics.unique_stg_stripe__subscriptions_subscription_id.2ea0e2eec3": ["model.mattermost_analytics.stg_stripe__subscriptions"], "test.mattermost_analytics.not_null_stg_stripe__products_product_id.4e54b80187": ["model.mattermost_analytics.stg_stripe__products"], "test.mattermost_analytics.unique_stg_stripe__products_product_id.556856542a": ["model.mattermost_analytics.stg_stripe__products"], "test.mattermost_analytics.not_null_stg_stripe__invoices_created_at.2e36890942": ["model.mattermost_analytics.stg_stripe__invoices"], "test.mattermost_analytics.not_null_stg_stripe__invoices_invoice_id.dfbda32b9c": ["model.mattermost_analytics.stg_stripe__invoices"], "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_line_item_id.9300d76698": ["model.mattermost_analytics.stg_stripe__invoice_line_items"], "test.mattermost_analytics.unique_stg_stripe__invoice_line_items_invoice_line_item_id.1253e56144": ["model.mattermost_analytics.stg_stripe__invoice_line_items"], "test.mattermost_analytics.relationships_stg_stripe__invoice_line_items_invoice_id__invoice_id__ref_stg_stripe__invoices_.bbac06f918": ["model.mattermost_analytics.stg_stripe__invoice_line_items", "model.mattermost_analytics.stg_stripe__invoices"], "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_id.617c95b7d7": ["model.mattermost_analytics.stg_stripe__invoice_line_items"], "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_item_id.2d04b0beaa": ["model.mattermost_analytics.stg_stripe__subscription_items"], "test.mattermost_analytics.unique_stg_stripe__subscription_items_subscription_item_id.479719b8c9": ["model.mattermost_analytics.stg_stripe__subscription_items"], "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_id.481bcb9a25": ["model.mattermost_analytics.stg_stripe__subscription_items"], "test.mattermost_analytics.not_null_stg_stripe__subscription_items_product_id.9ee3ebe445": ["model.mattermost_analytics.stg_stripe__subscription_items"], "test.mattermost_analytics.accepted_values_grp_performance_events__source_relation__int_mm_telemetry_rc_performance_events__int_mm_telemetry_prod_performance_events.8cb1f3b98b": ["model.mattermost_analytics.grp_performance_events"], "test.mattermost_analytics.not_null_grp_performance_events_id.330b7ae2e0": ["model.mattermost_analytics.grp_performance_events"], "test.mattermost_analytics.unique_grp_performance_events_id.ad7d5b30e5": ["model.mattermost_analytics.grp_performance_events"], "test.mattermost_analytics.not_null_grp_performance_events_event_date.2543751ae9": ["model.mattermost_analytics.grp_performance_events"], "test.mattermost_analytics.unique_grp_community_tracks_event_id.bfe9557712": ["model.mattermost_analytics.grp_community_tracks"], "test.mattermost_analytics.not_null_grp_community_tracks_event_id.04a0298775": ["model.mattermost_analytics.grp_community_tracks"], "test.mattermost_analytics.unique_fct_events_daily_snapshot_id.d02056f7f2": ["model.mattermost_analytics.fct_events_daily_snapshot"], "test.mattermost_analytics.not_null_fct_events_daily_snapshot_id.e8def66f81": ["model.mattermost_analytics.fct_events_daily_snapshot"], "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_date.69686182c8": ["model.mattermost_analytics.fct_events_daily_snapshot"], "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_id.a4b669af51": ["model.mattermost_analytics.fct_events_daily_snapshot"], "test.mattermost_analytics.relationships_fct_events_daily_snapshot_event_id__event_id__ref_dim_events_.2a96944b3e": ["model.mattermost_analytics.dim_events", "model.mattermost_analytics.fct_events_daily_snapshot"], "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_count.f67160cd88": ["model.mattermost_analytics.fct_events_daily_snapshot"], "test.mattermost_analytics.dbt_utils_expression_is_true_fct_events_daily_snapshot_event_count_0.7d4e14f128": ["model.mattermost_analytics.fct_events_daily_snapshot"], "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_events_daily_snapshot_event_date__event_id.87db18a8e5": ["model.mattermost_analytics.fct_events_daily_snapshot"], "test.mattermost_analytics.unique_dim_events_event_id.9e7565176a": ["model.mattermost_analytics.dim_events"], "test.mattermost_analytics.not_null_dim_events_event_id.480394b51b": ["model.mattermost_analytics.dim_events"], "test.mattermost_analytics.not_null_dim_events_event_name.594f072a39": ["model.mattermost_analytics.dim_events"], "test.mattermost_analytics.not_null_dim_events_event_table.69db754b70": ["model.mattermost_analytics.dim_events"], "test.mattermost_analytics.not_null_dim_events_source.1c4b4aeebe": ["model.mattermost_analytics.dim_events"], "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_dim_events_event_name__event_table__category__event_type__source.f34005d0d1": ["model.mattermost_analytics.dim_events"], "test.mattermost_analytics.not_null_fct_in_product_trial_requests_trial_request_id.f659583bd8": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.unique_fct_in_product_trial_requests_trial_request_id.9fbd72e76d": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.not_null_fct_in_product_trial_requests_name.a6e3998b54": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_name.f7ba7391b4": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_first_name.61d081e4d1": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_last_name.4df8b9bbfa": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_company_name.c0a530fc53": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.not_null_fct_in_product_trial_requests_normalized_email.eb16f6c556": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_normalized_email.ac0f1595df": ["model.mattermost_analytics.fct_in_product_trial_requests"], "test.mattermost_analytics.valid_country_name.6fbe9ede7d": ["model.mattermost_analytics.fct_in_product_trial_requests", "seed.mattermost_analytics.country_codes"], "test.mattermost_analytics.not_null_fct_cloud_trial_requests_email.04959c1093": ["model.mattermost_analytics.fct_cloud_trial_requests"], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_cloud_trial_requests_email.2a1f09e63e": ["model.mattermost_analytics.fct_cloud_trial_requests"], "test.mattermost_analytics.not_null_dim_labels_issue_id.0d48c79306": ["model.mattermost_analytics.dim_labels"], "test.mattermost_analytics.relationships_dim_labels_issue_id__issue_id__ref_fct_issues_daily_snapshot_.57348ef1cd": ["model.mattermost_analytics.dim_labels", "model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.not_null_dim_labels_label.d6aeaf0feb": ["model.mattermost_analytics.dim_labels"], "test.mattermost_analytics.not_null_dim_projects_project_id.89ad1da4cd": ["model.mattermost_analytics.dim_projects"], "test.mattermost_analytics.unique_dim_projects_project_id.e50e806691": ["model.mattermost_analytics.dim_projects"], "test.mattermost_analytics.not_null_dim_projects_project_key.f57855f13a": ["model.mattermost_analytics.dim_projects"], "test.mattermost_analytics.unique_dim_projects_project_key.da23dabd87": ["model.mattermost_analytics.dim_projects"], "test.mattermost_analytics.not_null_dim_projects_name.4d3148dfcd": ["model.mattermost_analytics.dim_projects"], "test.mattermost_analytics.not_null_dim_fix_versions_issue_id.04e09cd6ab": ["model.mattermost_analytics.dim_fix_versions"], "test.mattermost_analytics.relationships_dim_fix_versions_issue_id__issue_id__ref_fct_issues_daily_snapshot_.d3720e0e48": ["model.mattermost_analytics.dim_fix_versions", "model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.not_null_dim_fix_versions_fix_version.e2728d4a95": ["model.mattermost_analytics.dim_fix_versions"], "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_fix_version.319e7c6c54": ["model.mattermost_analytics.dim_fix_versions"], "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_semver.27b2d25b2f": ["model.mattermost_analytics.dim_fix_versions"], "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_major__True__0.58d0dba64d": ["model.mattermost_analytics.dim_fix_versions"], "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_minor__True__0.3cf17aed97": ["model.mattermost_analytics.dim_fix_versions"], "test.mattermost_analytics.accepted_values_dim_fix_versions_component__Mobile__Desktop__Playbooks__IR__Cloud__Apps__None.57b1839642": ["model.mattermost_analytics.dim_fix_versions"], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_id.6614befb12": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_id.e4e796ee3c": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_key.550a3a2782": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_key.82c0358848": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_project_id.21fd764871": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.relationships_fct_issues_daily_snapshot_project_id__project_id__ref_dim_projects_.1253039083": ["model.mattermost_analytics.dim_projects", "model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_type.207161b3fb": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_created_at.b9baeb692e": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_status.48103ead12": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.dbt_utils_accepted_range_fct_issues_daily_snapshot_lead_time_in_days__True__0.459aedc908": ["model.mattermost_analytics.fct_issues_daily_snapshot"], "test.mattermost_analytics.unique_fct_active_users_daily_server_id.519c8852e2": ["model.mattermost_analytics.fct_active_users"], "test.mattermost_analytics.not_null_fct_active_users_daily_server_id.465868bd11": ["model.mattermost_analytics.fct_active_users"], "test.mattermost_analytics.not_null_fct_active_users_activity_date.c37d7d834f": ["model.mattermost_analytics.fct_active_users"], "test.mattermost_analytics.not_null_fct_active_users_server_id.c0ce7cd4df": ["model.mattermost_analytics.fct_active_users"], "test.mattermost_analytics.not_null_fct_active_users_version_id.d60142a407": ["model.mattermost_analytics.fct_active_users"], "test.mattermost_analytics.relationships_fct_active_users_version_id__version_id__ref_dim_version_.cd09a944f0": ["model.mattermost_analytics.dim_version", "model.mattermost_analytics.fct_active_users"], "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_active_users_activity_date__server_id.11070c5f62": ["model.mattermost_analytics.fct_active_users"], "test.mattermost_analytics.unique_dim_daily_server_info_daily_server_id.53872931a3": ["model.mattermost_analytics.dim_daily_server_info"], "test.mattermost_analytics.not_null_dim_daily_server_info_daily_server_id.7c0492529e": ["model.mattermost_analytics.dim_daily_server_info"], "test.mattermost_analytics.not_null_dim_daily_server_info_server_id.5382822fe1": ["model.mattermost_analytics.dim_daily_server_info"], "test.mattermost_analytics.not_null_dim_daily_server_info_activity_date.866fd9a9bc": ["model.mattermost_analytics.dim_daily_server_info"], "test.mattermost_analytics.not_null_dim_daily_server_info_is_enterprise_ready.621908b517": ["model.mattermost_analytics.dim_daily_server_info"], "test.mattermost_analytics.dbt_utils_accepted_range_dim_daily_server_info_count_reported_versions__True__1.7c958d37ce": ["model.mattermost_analytics.dim_daily_server_info"], "test.mattermost_analytics.unique_dim_excludable_servers_server_id.b85f47447a": ["model.mattermost_analytics.dim_excludable_servers"], "test.mattermost_analytics.not_null_dim_excludable_servers_server_id.aef616d31b": ["model.mattermost_analytics.dim_excludable_servers"], "test.mattermost_analytics.not_null_dim_excludable_servers_reasons.999f332674": ["model.mattermost_analytics.dim_excludable_servers"], "test.mattermost_analytics.unique_dim_version_version_id.9f2fd8dc74": ["model.mattermost_analytics.dim_version"], "test.mattermost_analytics.not_null_dim_version_version_id.9f0db9b187": ["model.mattermost_analytics.dim_version"], "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_major__True__1.5a7485617b": ["model.mattermost_analytics.dim_version"], "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_minor__True__0.7db1746143": ["model.mattermost_analytics.dim_version"], "test.mattermost_analytics.unique_fct_active_servers_daily_server_id.f0fc363852": ["model.mattermost_analytics.fct_active_servers"], "test.mattermost_analytics.not_null_fct_active_servers_daily_server_id.07b3c89b0a": ["model.mattermost_analytics.fct_active_servers"], "test.mattermost_analytics.not_null_fct_active_servers_activity_date.15608febf0": ["model.mattermost_analytics.fct_active_servers"], "test.mattermost_analytics.not_null_fct_active_servers_server_id.c2f396ab92": ["model.mattermost_analytics.fct_active_servers"], "test.mattermost_analytics.not_null_fct_active_servers_version_id.966736cb49": ["model.mattermost_analytics.fct_active_servers"], "test.mattermost_analytics.relationships_fct_active_servers_version_id__version_id__ref_dim_version_.ea048c1938": ["model.mattermost_analytics.dim_version", "model.mattermost_analytics.fct_active_servers"], "test.mattermost_analytics.not_null_dim_server_info_server_id.0ed37f71b1": ["model.mattermost_analytics.dim_server_info"], "test.mattermost_analytics.unique_dim_daily_server_config_daily_server_id.bfbcc51ef7": ["model.mattermost_analytics.dim_daily_server_config"], "test.mattermost_analytics.not_null_dim_daily_server_config_daily_server_id.cff3a76c02": ["model.mattermost_analytics.dim_daily_server_config"], "test.mattermost_analytics.not_null_fct_security_newsletter_email.8fc3783d85": ["model.mattermost_analytics.fct_security_newsletter"], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_security_newsletter_email.77559cb2a1": ["model.mattermost_analytics.fct_security_newsletter"], "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_event_id.728087993f": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.383c8ce206": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"], "test.mattermost_analytics.unique_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.ef5efaff8a": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_received_at_date.939163e77d": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_event_id.8e7dd8d68d": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_daily_event_id.1f6a46712c": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"], "test.mattermost_analytics.unique_int_incident_response_prod_aggregated_to_date_daily_event_id.28f30025a9": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_received_at_date.07770c56d4": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_event_id.d4359db268": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_daily_event_id.faca04c893": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"], "test.mattermost_analytics.unique_int_mattermost_docs_aggregated_to_date_daily_event_id.7bb995acab": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_received_at_date.99ff2ff98f": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_event_id.75b97ed0f2": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_daily_event_id.3768d17980": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"], "test.mattermost_analytics.unique_int_mattermostcom_aggregated_to_date_daily_event_id.b5d3fa7a27": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_received_at_date.888b5fd3b1": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_event_id.b76d49be23": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id.74394ae81c": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"], "test.mattermost_analytics.unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id.e692839aa6": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date.87047c7370": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_event_id.81b50c7fa9": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2453761a7c": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"], "test.mattermost_analytics.unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2c157d82d6": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date.a483479092": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_event_id.492c81fbba": ["model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.4939ff52af": ["model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"], "test.mattermost_analytics.unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.8b436a04f2": ["model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_received_at_date.eecc5be7b1": ["model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_event_id.5b8e58d398": ["model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.c3069760ea": ["model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"], "test.mattermost_analytics.unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.485e5fb487": ["model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"], "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_received_at_date.e7abc97692": ["model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"], "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_event_id.781d0d9b24": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_daily_event_id.39de11fb92": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"], "test.mattermost_analytics.unique_int_portal_prod_aggregated_to_date_daily_event_id.5b89262e22": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_received_at_date.7ca390f308": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"], "test.mattermost_analytics.not_null_int_events_aggregated_to_date_event_id.58cd167ac0": ["model.mattermost_analytics.int_events_aggregated_to_date"], "test.mattermost_analytics.not_null_int_events_aggregated_to_date_daily_event_id.c207ec5bb5": ["model.mattermost_analytics.int_events_aggregated_to_date"], "test.mattermost_analytics.unique_int_events_aggregated_to_date_daily_event_id.7785ba8b15": ["model.mattermost_analytics.int_events_aggregated_to_date"], "test.mattermost_analytics.not_null_int_events_aggregated_to_date_received_at_date.e3a17f0a9d": ["model.mattermost_analytics.int_events_aggregated_to_date"], "test.dbt_project_evaluator.valid_documentation_coverage.67ef7314a7": ["model.dbt_project_evaluator.fct_documentation_coverage"], "test.dbt_project_evaluator.is_empty_fct_undocumented_models_.7c2f43109c": ["model.dbt_project_evaluator.fct_undocumented_models"], "test.dbt_project_evaluator.is_empty_fct_direct_join_to_source_.2ec67ec028": ["model.dbt_project_evaluator.fct_direct_join_to_source"], "test.dbt_project_evaluator.is_empty_fct_duplicate_sources_.642214de31": ["model.dbt_project_evaluator.fct_duplicate_sources"], "test.dbt_project_evaluator.is_empty_fct_marts_or_intermediate_dependent_on_source_.c0abd5f00f": ["model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source"], "test.dbt_project_evaluator.is_empty_fct_model_fanout_.a3ef403a95": ["model.dbt_project_evaluator.fct_model_fanout"], "test.dbt_project_evaluator.is_empty_fct_multiple_sources_joined_.494f431817": ["model.dbt_project_evaluator.fct_multiple_sources_joined"], "test.dbt_project_evaluator.is_empty_fct_rejoining_of_upstream_concepts_.c6b3625c7d": ["model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts"], "test.dbt_project_evaluator.is_empty_fct_root_models_.ccb5a490f1": ["model.dbt_project_evaluator.fct_root_models"], "test.dbt_project_evaluator.is_empty_fct_source_fanout_.45762bb722": ["model.dbt_project_evaluator.fct_source_fanout"], "test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_marts_or_intermediate_.3aa45af51f": ["model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate"], "test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_staging_.bea47be3ca": ["model.dbt_project_evaluator.fct_staging_dependent_on_staging"], "test.dbt_project_evaluator.is_empty_fct_unused_sources_.41456b9da8": ["model.dbt_project_evaluator.fct_unused_sources"], "test.dbt_project_evaluator.is_empty_fct_exposure_parents_materializations_.5a21592422": ["model.dbt_project_evaluator.fct_exposure_parents_materializations"], "test.dbt_project_evaluator.is_empty_fct_hard_coded_references_.9f62f70113": ["model.dbt_project_evaluator.fct_hard_coded_references"], "test.dbt_project_evaluator.valid_test_coverage.df03f31e09": ["model.dbt_project_evaluator.fct_test_coverage"], "test.dbt_project_evaluator.is_empty_fct_missing_primary_key_tests_.4d10d48da0": ["model.dbt_project_evaluator.fct_missing_primary_key_tests"], "test.dbt_project_evaluator.valid_chained_views_dependencies.123bb34533": ["model.dbt_project_evaluator.fct_chained_views_dependencies"], "test.dbt_project_evaluator.is_empty_fct_model_directories_.50098500db": ["model.dbt_project_evaluator.fct_model_directories"], "test.dbt_project_evaluator.is_empty_fct_model_naming_conventions_.a79bc0fbe2": ["model.dbt_project_evaluator.fct_model_naming_conventions"], "test.dbt_project_evaluator.is_empty_fct_source_directories_.3ec42bc19c": ["model.dbt_project_evaluator.fct_source_directories"], "test.dbt_project_evaluator.is_empty_fct_test_directories_.1c1db93433": ["model.dbt_project_evaluator.fct_test_directories"], "test.mattermost_analytics.source_not_null_cws_trial_requests_id.0a38db58ed": ["source.mattermost_analytics.cws.trial_requests"], "test.mattermost_analytics.valid_bucket_names.93d440316e": ["source.mattermost_analytics.cws.trial_requests"], "test.mattermost_analytics.source_not_null_cws_trial_requests_email.45a2e4f948": ["source.mattermost_analytics.cws.trial_requests"], "test.mattermost_analytics.source_not_null_cws_trial_requests_serverid.2e0a97f5b3": ["source.mattermost_analytics.cws.trial_requests"], "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_id.8b751dff4c": ["source.mattermost_analytics.mattermost_jira.issue_comments"], "test.mattermost_analytics.source_unique_mattermost_jira_issue_comments_id.40eec45a3e": ["source.mattermost_analytics.mattermost_jira.issue_comments"], "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_issueid.6741fae44f": ["source.mattermost_analytics.mattermost_jira.issue_comments"], "test.mattermost_analytics.source_unique_mattermost_version_release_dates_version.97e96eeef4": ["source.mattermost_analytics.mattermost.version_release_dates"], "test.mattermost_analytics.source_not_null_mattermost_version_release_dates_version.fb90ab39c4": ["source.mattermost_analytics.mattermost.version_release_dates"], "source.mattermost_analytics.mm_telemetry_rc.tracks": [], "source.mattermost_analytics.mm_telemetry_rc.event": [], "source.mattermost_analytics.mm_telemetry_rc.pages": [], "source.mattermost_analytics.mm_telemetry_rc.identifies": [], "source.mattermost_analytics.mm_telemetry_rc.config_saml": [], "source.mattermost_analytics.mm_telemetry_rc.config_localization": [], "source.mattermost_analytics.mm_telemetry_rc.config_cluster": [], "source.mattermost_analytics.mm_telemetry_rc.config_compliance": [], "source.mattermost_analytics.mm_telemetry_rc.config_analytics": [], "source.mattermost_analytics.mm_telemetry_rc.config_ldap": [], "source.mattermost_analytics.mm_telemetry_rc.config_metrics": [], "source.mattermost_analytics.mm_telemetry_rc.config_elasticsearch": [], "source.mattermost_analytics.mm_telemetry_rc.config_nativeapp": [], "source.mattermost_analytics.mm_telemetry_rc.config_announcement": [], "source.mattermost_analytics.mm_telemetry_rc.config_privacy": [], "source.mattermost_analytics.mm_telemetry_rc.config_experimental": [], "source.mattermost_analytics.mm_telemetry_rc.config_support": [], "source.mattermost_analytics.mm_telemetry_rc.config_theme": [], "source.mattermost_analytics.mm_telemetry_rc.config_oauth": [], "source.mattermost_analytics.mm_telemetry_rc.config_file": [], "source.mattermost_analytics.mm_telemetry_rc.activity": [], "source.mattermost_analytics.mm_telemetry_rc.config_audit": [], "source.mattermost_analytics.mm_telemetry_rc.config_email": [], "source.mattermost_analytics.mm_telemetry_rc.config_notifications_log": [], "source.mattermost_analytics.mm_telemetry_rc.config_rate": [], "source.mattermost_analytics.mm_telemetry_rc.config_password": [], "source.mattermost_analytics.mm_telemetry_rc.config_team": [], "source.mattermost_analytics.mm_telemetry_rc.config_log": [], "source.mattermost_analytics.mm_telemetry_rc.config_service": [], "source.mattermost_analytics.mm_telemetry_rc.config_client_requirements": [], "source.mattermost_analytics.mm_telemetry_rc.config_sql": [], "source.mattermost_analytics.mm_telemetry_rc.config_data_retention": [], "source.mattermost_analytics.mm_telemetry_rc.config_guest_accounts": [], "source.mattermost_analytics.mm_telemetry_rc.config_message_export": [], "source.mattermost_analytics.mm_telemetry_rc.config_plugin": [], "source.mattermost_analytics.mm_telemetry_rc.config_display": [], "source.mattermost_analytics.mm_telemetry_rc.config_image_proxy": [], "source.mattermost_analytics.mm_telemetry_rc.server": [], "source.mattermost_analytics.mm_telemetry_rc.permissions_general": [], "source.mattermost_analytics.mm_telemetry_rc.config_bleve": [], "source.mattermost_analytics.mm_telemetry_rc.permissions_system_scheme": [], "source.mattermost_analytics.mm_telemetry_rc.elasticsearch": [], "source.mattermost_analytics.mm_telemetry_rc._groups": [], "source.mattermost_analytics.mm_telemetry_rc.channel_moderation": [], "source.mattermost_analytics.mm_telemetry_rc.config_export": [], "source.mattermost_analytics.mm_telemetry_rc.config_feature_flags": [], "source.mattermost_analytics.mm_telemetry_rc.plugins": [], "source.mattermost_analytics.mm_telemetry_rc.license": [], "source.mattermost_analytics.mm_telemetry_rc.products": [], "source.mattermost_analytics.mm_telemetry_rc.users": [], "source.mattermost_analytics.mm_telemetry_rc.warn_metrics": [], "source.mattermost_analytics.mm_telemetry_rc.permissions_team_schemes": [], "source.mattermost_analytics.mm_telemetry_rc.welcome_message_sent": [], "source.mattermost_analytics.mm_telemetry_rc.track_invite_email_resend": [], "source.mattermost_analytics.mm_telemetry_rc.inactive_server": [], "source.mattermost_analytics.mm_telemetry_rc.inactive_server_emails_sent": [], "source.mattermost_analytics.mm_telemetry_rc.rudder_discards": [], "source.mattermost_analytics.cws._sdc_rejected": [], "source.mattermost_analytics.cws.marketing": [], "source.mattermost_analytics.cws.trial_requests": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_add_member": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_favorite": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_join": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_leave": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_remove_member": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_unfavorite": [], "source.mattermost_analytics.mm_mobile_prod.action_posts_flag": [], "source.mattermost_analytics.mm_mobile_prod.action_posts_unflag": [], "source.mattermost_analytics.mm_mobile_prod.api_channel_get": [], "source.mattermost_analytics.mm_mobile_prod.api_channel_get_by_name_and_team_name": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_add_member": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_convert_to_private": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_create": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_create_direct": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_create_group": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_delete": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_patch": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_remove_member": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_unarchive": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_update_privacy": [], "source.mattermost_analytics.mm_mobile_prod.api_files_upload": [], "source.mattermost_analytics.mm_mobile_prod.api_get_known_users": [], "source.mattermost_analytics.mm_mobile_prod.api_integrations_used": [], "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_button_clicked": [], "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_dialog_submitted": [], "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_menu_selected": [], "source.mattermost_analytics.mm_mobile_prod.api_post_set_unread_post": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_create": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_delete": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_get_after": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_get_before": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_get_flagged": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_get_pinned": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_patch": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_pin": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_replied": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_search": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_search_mention": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_unpin": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_by_ids": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_by_usernames": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_in_channel": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_in_team": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_not_in_channel": [], "source.mattermost_analytics.mm_mobile_prod.api_reactions_delete": [], "source.mattermost_analytics.mm_mobile_prod.api_reactions_save": [], "source.mattermost_analytics.mm_mobile_prod.api_search_users": [], "source.mattermost_analytics.mm_mobile_prod.api_teams_get_team_by_name": [], "source.mattermost_analytics.mm_mobile_prod.api_teams_invite_members": [], "source.mattermost_analytics.mm_mobile_prod.api_teams_remove_members": [], "source.mattermost_analytics.mm_mobile_prod.api_users_login": [], "source.mattermost_analytics.mm_mobile_prod.api_users_logout": [], "source.mattermost_analytics.mm_mobile_prod.api_users_send_password_reset": [], "source.mattermost_analytics.mm_mobile_prod.api_users_set_default_profile_picture": [], "source.mattermost_analytics.mm_mobile_prod.api_users_update_channel_notifications": [], "source.mattermost_analytics.mm_mobile_prod.application_backgrounded": [], "source.mattermost_analytics.mm_mobile_prod.application_installed": [], "source.mattermost_analytics.mm_mobile_prod.application_opened": [], "source.mattermost_analytics.mm_mobile_prod.application_updated": [], "source.mattermost_analytics.mm_mobile_prod.complete_suggestion": [], "source.mattermost_analytics.mm_mobile_prod.get_suggestions_failed": [], "source.mattermost_analytics.mm_mobile_prod.get_suggestions_initiated": [], "source.mattermost_analytics.mm_mobile_prod.get_suggestions_success": [], "source.mattermost_analytics.mm_mobile_prod.identifies": [], "source.mattermost_analytics.mm_mobile_prod.rudder_discards": [], "source.mattermost_analytics.mm_mobile_prod.screens": [], "source.mattermost_analytics.mm_mobile_prod.tracks": [], "source.mattermost_analytics.mm_mobile_prod.users": [], "source.mattermost_analytics.mattermost_docs.feedback_submitted": [], "source.mattermost_analytics.mattermost_docs.pages": [], "source.mattermost_analytics.mattermost_docs.rudder_discards": [], "source.mattermost_analytics.mattermost_docs.tracks": [], "source.mattermost_analytics.mm_plugin_prod.apps_framework_call": [], "source.mattermost_analytics.mm_plugin_prod.apps_framework_install": [], "source.mattermost_analytics.mm_plugin_prod.apps_framework_oauth_complete": [], "source.mattermost_analytics.mm_plugin_prod.apps_framework_uninstall": [], "source.mattermost_analytics.mm_plugin_prod.github_stats": [], "source.mattermost_analytics.mm_plugin_prod.gitlab_stats": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_automatic_status_update": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_daily_summary_sent": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_user_authenticated": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_user_deauthenticated": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_welcome_flow_completion": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_connect": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_disconnect": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_duplicated": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_forced": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_started": [], "source.mattermost_analytics.mm_plugin_prod.nps_nps_disable": [], "source.mattermost_analytics.mm_plugin_prod.nps_nps_feedback": [], "source.mattermost_analytics.mm_plugin_prod.nps_nps_score": [], "source.mattermost_analytics.mm_plugin_prod.rudder_discards": [], "source.mattermost_analytics.mm_plugin_prod.todo_accept_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_add_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_bump_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_change_issue_assignment": [], "source.mattermost_analytics.mm_plugin_prod.todo_command": [], "source.mattermost_analytics.mm_plugin_prod.todo_complete_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_daily_summary_sent": [], "source.mattermost_analytics.mm_plugin_prod.todo_edit_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_in": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_my": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_out": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_accept": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_complete": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_remove": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_rhs_add": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_toggle_inbox": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_toggle_my": [], "source.mattermost_analytics.mm_plugin_prod.todo_remove_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_send_issue": [], "source.mattermost_analytics.mm_plugin_prod.tracks": [], "source.mattermost_analytics.mm_plugin_prod.zoom_connect": [], "source.mattermost_analytics.mm_plugin_prod.zoom_disconnect": [], "source.mattermost_analytics.mm_plugin_prod.zoom_meeting_duplicated": [], "source.mattermost_analytics.mm_plugin_prod.zoom_meeting_forced": [], "source.mattermost_analytics.mm_plugin_prod.zoom_oauth_mode_change": [], "source.mattermost_analytics.mm_plugin_prod.zoom_start_meeting": [], "source.mattermost_analytics.portal_prod.click_access_workspace": [], "source.mattermost_analytics.portal_prod.click_compare_plan": [], "source.mattermost_analytics.portal_prod.click_connect_workspace": [], "source.mattermost_analytics.portal_prod.click_contact_sales": [], "source.mattermost_analytics.portal_prod.click_contact_support": [], "source.mattermost_analytics.portal_prod.click_continue_button": [], "source.mattermost_analytics.portal_prod.click_create_workspace": [], "source.mattermost_analytics.portal_prod.click_edit_url_button": [], "source.mattermost_analytics.portal_prod.click_goto_exisiting_workspace": [], "source.mattermost_analytics.portal_prod.click_join_team_workspace_link": [], "source.mattermost_analytics.portal_prod.click_join_team_workspace_link_b": [], "source.mattermost_analytics.portal_prod.click_login": [], "source.mattermost_analytics.portal_prod.click_login_billing": [], "source.mattermost_analytics.portal_prod.click_logout": [], "source.mattermost_analytics.portal_prod.click_next": [], "source.mattermost_analytics.portal_prod.click_next_b": [], "source.mattermost_analytics.portal_prod.click_open_payment_feedback_form_modal": [], "source.mattermost_analytics.portal_prod.click_password_continue_button": [], "source.mattermost_analytics.portal_prod.click_privacy_policy": [], "source.mattermost_analytics.portal_prod.click_privacy_policy_b": [], "source.mattermost_analytics.portal_prod.click_resend_code": [], "source.mattermost_analytics.portal_prod.click_self_managed_trial_link": [], "source.mattermost_analytics.portal_prod.click_self_managed_trial_link_b": [], "source.mattermost_analytics.portal_prod.click_signup": [], "source.mattermost_analytics.portal_prod.click_signup_password_continue_button": [], "source.mattermost_analytics.portal_prod.click_start_trial": [], "source.mattermost_analytics.portal_prod.click_status_page": [], "source.mattermost_analytics.portal_prod.click_terms": [], "source.mattermost_analytics.portal_prod.click_terms_b": [], "source.mattermost_analytics.portal_prod.click_unknown_url": [], "source.mattermost_analytics.portal_prod.clicked_contact_us_link": [], "source.mattermost_analytics.portal_prod.clicked_faq_link": [], "source.mattermost_analytics.portal_prod.clicked_terms_checkbox": [], "source.mattermost_analytics.portal_prod.cloud_contact_us_submitted": [], "source.mattermost_analytics.portal_prod.cloud_signup_a_page_visit": [], "source.mattermost_analytics.portal_prod.cloud_signup_b_page_visit": [], "source.mattermost_analytics.portal_prod.cloud_signup_error": [], "source.mattermost_analytics.portal_prod.cloud_signup_page_visit": [], "source.mattermost_analytics.portal_prod.cloud_signup_redirect_to_mattermost": [], "source.mattermost_analytics.portal_prod.cloud_signup_success": [], "source.mattermost_analytics.portal_prod.cloud_subscription_completed": [], "source.mattermost_analytics.portal_prod.deployment_option_select": [], "source.mattermost_analytics.portal_prod.email_address_already_associated_with_an_account": [], "source.mattermost_analytics.portal_prod.enter_invalid_code": [], "source.mattermost_analytics.portal_prod.enter_invalid_code_too_many_times": [], "source.mattermost_analytics.portal_prod.enter_valid_code": [], "source.mattermost_analytics.portal_prod.identifies": [], "source.mattermost_analytics.portal_prod.non_business_email_blocked": [], "source.mattermost_analytics.portal_prod.non_business_email_blocked_b": [], "source.mattermost_analytics.portal_prod.page_load": [], "source.mattermost_analytics.portal_prod.pages": [], "source.mattermost_analytics.portal_prod.pageview_admin_password": [], "source.mattermost_analytics.portal_prod.pageview_cloud_landing_page": [], "source.mattermost_analytics.portal_prod.pageview_create_signup_password": [], "source.mattermost_analytics.portal_prod.pageview_create_workspace": [], "source.mattermost_analytics.portal_prod.pageview_deployment_selection": [], "source.mattermost_analytics.portal_prod.pageview_getting_started": [], "source.mattermost_analytics.portal_prod.pageview_verify_email": [], "source.mattermost_analytics.portal_prod.password_validation_error": [], "source.mattermost_analytics.portal_prod.purchase_complete_create_portal_account": [], "source.mattermost_analytics.portal_prod.purchase_fail_clicked_try_again": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_enterprise": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_enterprise_e_10": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_professional": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_self_hosted_enterprise": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_self_hosted_professional": [], "source.mattermost_analytics.portal_prod.renew_license_form_clicked_compare_plans": [], "source.mattermost_analytics.portal_prod.renew_license_form_clicked_complete_purchase": [], "source.mattermost_analytics.portal_prod.rudder_discards": [], "source.mattermost_analytics.portal_prod.see_how_billing_works": [], "source.mattermost_analytics.portal_prod.signup_flow_email_invalidated": [], "source.mattermost_analytics.portal_prod.signup_flow_email_validated": [], "source.mattermost_analytics.portal_prod.srv_oauth_complete_success": [], "source.mattermost_analytics.portal_prod.stripe_confirm_card_error": [], "source.mattermost_analytics.portal_prod.subscription_purchased": [], "source.mattermost_analytics.portal_prod.successful_url_redirect": [], "source.mattermost_analytics.portal_prod.tracks": [], "source.mattermost_analytics.portal_prod.unknown_url": [], "source.mattermost_analytics.portal_prod.users": [], "source.mattermost_analytics.portal_prod.utm_params": [], "source.mattermost_analytics.portal_prod.workspace_name_taken": [], "source.mattermost_analytics.portal_prod.workspace_name_unavailable": [], "source.mattermost_analytics.portal_prod.workspace_name_valid": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_click_open_workspace": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_ended": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_error": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_error_unknown": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_in_progress": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_started": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_timeout": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_ended": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_enterfullscreen": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_paused": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_play": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_resume": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_unmuted": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_ended": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_error": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_error_unknown": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_no_dns": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_not_needed": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_started": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_timeout": [], "source.mattermost_analytics.mattermost_jira._sdc_rejected": [], "source.mattermost_analytics.mattermost_jira.changelogs": [], "source.mattermost_analytics.mattermost_jira.issue_comments": [], "source.mattermost_analytics.mattermost_jira.issue_transitions": [], "source.mattermost_analytics.mattermost_jira.issues": [], "source.mattermost_analytics.mattermost_jira.issues_expanded": [], "source.mattermost_analytics.mattermost_jira.project_types": [], "source.mattermost_analytics.mattermost_jira.projects": [], "source.mattermost_analytics.mattermost_jira.resolutions": [], "source.mattermost_analytics.mattermost_jira.roles": [], "source.mattermost_analytics.mattermost_jira.users": [], "source.mattermost_analytics.mattermost_jira.versions": [], "source.mattermost_analytics.mattermost_jira.worklogs": [], "source.mattermost_analytics.incident_response_prod.add_checklist_item": [], "source.mattermost_analytics.incident_response_prod.change_commander": [], "source.mattermost_analytics.incident_response_prod.change_stage": [], "source.mattermost_analytics.incident_response_prod.channel_action": [], "source.mattermost_analytics.incident_response_prod.check_checklist_item": [], "source.mattermost_analytics.incident_response_prod.checklists": [], "source.mattermost_analytics.incident_response_prod.create_incident": [], "source.mattermost_analytics.incident_response_prod.create_playbook": [], "source.mattermost_analytics.incident_response_prod.delete_playbook": [], "source.mattermost_analytics.incident_response_prod.end_incident": [], "source.mattermost_analytics.incident_response_prod.frontend": [], "source.mattermost_analytics.incident_response_prod.incident": [], "source.mattermost_analytics.incident_response_prod.lhs_category": [], "source.mattermost_analytics.incident_response_prod.modify_state_checklist_item": [], "source.mattermost_analytics.incident_response_prod.move_checklist_item": [], "source.mattermost_analytics.incident_response_prod.notify_admins": [], "source.mattermost_analytics.incident_response_prod.pages": [], "source.mattermost_analytics.incident_response_prod.playbook": [], "source.mattermost_analytics.incident_response_prod.playbookrun_action": [], "source.mattermost_analytics.incident_response_prod.playbookrun_create": [], "source.mattermost_analytics.incident_response_prod.playbookrun_follow": [], "source.mattermost_analytics.incident_response_prod.playbookrun_leave": [], "source.mattermost_analytics.incident_response_prod.playbookrun_participate": [], "source.mattermost_analytics.incident_response_prod.playbookrun_unfollow": [], "source.mattermost_analytics.incident_response_prod.playbookrun_update_actions": [], "source.mattermost_analytics.incident_response_prod.remove_checklist_item": [], "source.mattermost_analytics.incident_response_prod.rename_checklist_item": [], "source.mattermost_analytics.incident_response_prod.restart_incident": [], "source.mattermost_analytics.incident_response_prod.rudder_discards": [], "source.mattermost_analytics.incident_response_prod.run_checklist_item_slash_command": [], "source.mattermost_analytics.incident_response_prod.set_assignee": [], "source.mattermost_analytics.incident_response_prod.settings": [], "source.mattermost_analytics.incident_response_prod.start_trial": [], "source.mattermost_analytics.incident_response_prod.taskactions_action_executed": [], "source.mattermost_analytics.incident_response_prod.taskactions_triggered": [], "source.mattermost_analytics.incident_response_prod.taskactions_updated": [], "source.mattermost_analytics.incident_response_prod.tasks": [], "source.mattermost_analytics.incident_response_prod.tracks": [], "source.mattermost_analytics.incident_response_prod.uncheck_checklist_item": [], "source.mattermost_analytics.incident_response_prod.update_playbook": [], "source.mattermost_analytics.diagnostics.log_entries": [], "source.mattermost_analytics.salesforce._sdc_rejected": [], "source.mattermost_analytics.salesforce.account": [], "source.mattermost_analytics.salesforce.billing_entity__c": [], "source.mattermost_analytics.salesforce.campaign": [], "source.mattermost_analytics.salesforce.campaignmember": [], "source.mattermost_analytics.salesforce.contact": [], "source.mattermost_analytics.salesforce.contract": [], "source.mattermost_analytics.salesforce.customer_onboarding__c": [], "source.mattermost_analytics.salesforce.customer_reference__c": [], "source.mattermost_analytics.salesforce.customer_risk__c": [], "source.mattermost_analytics.salesforce.customer_risk__history": [], "source.mattermost_analytics.salesforce.event": [], "source.mattermost_analytics.salesforce.lead": [], "source.mattermost_analytics.salesforce.netsuite_conn__netsuite_financial__c": [], "source.mattermost_analytics.salesforce.opportunity": [], "source.mattermost_analytics.salesforce.opportunity_sg": [], "source.mattermost_analytics.salesforce.opportunitycontactrole": [], "source.mattermost_analytics.salesforce.opportunityfieldhistory": [], "source.mattermost_analytics.salesforce.opportunityhistory": [], "source.mattermost_analytics.salesforce.opportunitylineitem": [], "source.mattermost_analytics.salesforce.pricebookentry": [], "source.mattermost_analytics.salesforce.product2": [], "source.mattermost_analytics.salesforce.sbqq__quote__c": [], "source.mattermost_analytics.salesforce.sbqq__quoteline__c": [], "source.mattermost_analytics.salesforce.task": [], "source.mattermost_analytics.salesforce.territory_mapping__c": [], "source.mattermost_analytics.salesforce.true_up_reports__c": [], "source.mattermost_analytics.salesforce.user": [], "source.mattermost_analytics.salesforce.userrole": [], "source.mattermost_analytics.mattermost.version_release_dates": [], "source.mattermost_analytics.mattermost2.activity": [], "source.mattermost_analytics.mattermost2.channel_moderation": [], "source.mattermost_analytics.mattermost2.config_analytics": [], "source.mattermost_analytics.mattermost2.config_announcement": [], "source.mattermost_analytics.mattermost2.config_audit": [], "source.mattermost_analytics.mattermost2.config_bleve": [], "source.mattermost_analytics.mattermost2.config_client_requirements": [], "source.mattermost_analytics.mattermost2.config_cluster": [], "source.mattermost_analytics.mattermost2.config_compliance": [], "source.mattermost_analytics.mattermost2.config_data_retention": [], "source.mattermost_analytics.mattermost2.config_display": [], "source.mattermost_analytics.mattermost2.config_elasticsearch": [], "source.mattermost_analytics.mattermost2.config_email": [], "source.mattermost_analytics.mattermost2.config_experimental": [], "source.mattermost_analytics.mattermost2.config_extension": [], "source.mattermost_analytics.mattermost2.config_file": [], "source.mattermost_analytics.mattermost2.config_guest_accounts": [], "source.mattermost_analytics.mattermost2.config_image_proxy": [], "source.mattermost_analytics.mattermost2.config_ldap": [], "source.mattermost_analytics.mattermost2.config_localization": [], "source.mattermost_analytics.mattermost2.config_log": [], "source.mattermost_analytics.mattermost2.config_message_export": [], "source.mattermost_analytics.mattermost2.config_metrics": [], "source.mattermost_analytics.mattermost2.config_nativeapp": [], "source.mattermost_analytics.mattermost2.config_notifications_log": [], "source.mattermost_analytics.mattermost2.config_oauth": [], "source.mattermost_analytics.mattermost2.config_password": [], "source.mattermost_analytics.mattermost2.config_plugin": [], "source.mattermost_analytics.mattermost2.config_privacy": [], "source.mattermost_analytics.mattermost2.config_rate": [], "source.mattermost_analytics.mattermost2.config_rupport": [], "source.mattermost_analytics.mattermost2.config_saml": [], "source.mattermost_analytics.mattermost2.config_service": [], "source.mattermost_analytics.mattermost2.config_sql": [], "source.mattermost_analytics.mattermost2.config_support": [], "source.mattermost_analytics.mattermost2.config_team": [], "source.mattermost_analytics.mattermost2.config_theme": [], "source.mattermost_analytics.mattermost2.config_timezone": [], "source.mattermost_analytics.mattermost2.config_webrtc": [], "source.mattermost_analytics.mattermost2.elasticsearch": [], "source.mattermost_analytics.mattermost2.event": [], "source.mattermost_analytics.mattermost2.event_mobile": [], "source.mattermost_analytics.mattermost2.groups": [], "source.mattermost_analytics.mattermost2.identifies": [], "source.mattermost_analytics.mattermost2.license": [], "source.mattermost_analytics.mattermost2.pages": [], "source.mattermost_analytics.mattermost2.permissions_general": [], "source.mattermost_analytics.mattermost2.permissions_system_scheme": [], "source.mattermost_analytics.mattermost2.permissions_team_schemes": [], "source.mattermost_analytics.mattermost2.plugins": [], "source.mattermost_analytics.mattermost2.server": [], "source.mattermost_analytics.mattermost2.tracks": [], "source.mattermost_analytics.mattermost2.users": [], "source.mattermost_analytics.mm_telemetry_prod._groups": [], "source.mattermost_analytics.mm_telemetry_prod.activity": [], "source.mattermost_analytics.mm_telemetry_prod.blocks": [], "source.mattermost_analytics.mm_telemetry_prod.boards": [], "source.mattermost_analytics.mm_telemetry_prod.channel_moderation": [], "source.mattermost_analytics.mm_telemetry_prod.config": [], "source.mattermost_analytics.mm_telemetry_prod.config_analytics": [], "source.mattermost_analytics.mm_telemetry_prod.config_announcement": [], "source.mattermost_analytics.mm_telemetry_prod.config_audit": [], "source.mattermost_analytics.mm_telemetry_prod.config_bleve": [], "source.mattermost_analytics.mm_telemetry_prod.config_client_requirements": [], "source.mattermost_analytics.mm_telemetry_prod.config_cluster": [], "source.mattermost_analytics.mm_telemetry_prod.config_compliance": [], "source.mattermost_analytics.mm_telemetry_prod.config_data_retention": [], "source.mattermost_analytics.mm_telemetry_prod.config_display": [], "source.mattermost_analytics.mm_telemetry_prod.config_elasticsearch": [], "source.mattermost_analytics.mm_telemetry_prod.config_email": [], "source.mattermost_analytics.mm_telemetry_prod.config_experimental": [], "source.mattermost_analytics.mm_telemetry_prod.config_export": [], "source.mattermost_analytics.mm_telemetry_prod.config_feature_flags": [], "source.mattermost_analytics.mm_telemetry_prod.config_file": [], "source.mattermost_analytics.mm_telemetry_prod.config_guest_accounts": [], "source.mattermost_analytics.mm_telemetry_prod.config_image_proxy": [], "source.mattermost_analytics.mm_telemetry_prod.config_ldap": [], "source.mattermost_analytics.mm_telemetry_prod.config_localization": [], "source.mattermost_analytics.mm_telemetry_prod.config_log": [], "source.mattermost_analytics.mm_telemetry_prod.config_message_export": [], "source.mattermost_analytics.mm_telemetry_prod.config_metrics": [], "source.mattermost_analytics.mm_telemetry_prod.config_nativeapp": [], "source.mattermost_analytics.mm_telemetry_prod.config_notifications_log": [], "source.mattermost_analytics.mm_telemetry_prod.config_oauth": [], "source.mattermost_analytics.mm_telemetry_prod.config_password": [], "source.mattermost_analytics.mm_telemetry_prod.config_plugin": [], "source.mattermost_analytics.mm_telemetry_prod.config_privacy": [], "source.mattermost_analytics.mm_telemetry_prod.config_rate": [], "source.mattermost_analytics.mm_telemetry_prod.config_saml": [], "source.mattermost_analytics.mm_telemetry_prod.config_service": [], "source.mattermost_analytics.mm_telemetry_prod.config_sql": [], "source.mattermost_analytics.mm_telemetry_prod.config_support": [], "source.mattermost_analytics.mm_telemetry_prod.config_team": [], "source.mattermost_analytics.mm_telemetry_prod.config_theme": [], "source.mattermost_analytics.mm_telemetry_prod.elasticsearch": [], "source.mattermost_analytics.mm_telemetry_prod.event": [], "source.mattermost_analytics.mm_telemetry_prod.identifies": [], "source.mattermost_analytics.mm_telemetry_prod.inactive_server": [], "source.mattermost_analytics.mm_telemetry_prod.inactive_server_emails_sent": [], "source.mattermost_analytics.mm_telemetry_prod.license": [], "source.mattermost_analytics.mm_telemetry_prod.pages": [], "source.mattermost_analytics.mm_telemetry_prod.permissions_general": [], "source.mattermost_analytics.mm_telemetry_prod.permissions_system_scheme": [], "source.mattermost_analytics.mm_telemetry_prod.permissions_team_schemes": [], "source.mattermost_analytics.mm_telemetry_prod.plugins": [], "source.mattermost_analytics.mm_telemetry_prod.products": [], "source.mattermost_analytics.mm_telemetry_prod.rudder_discards": [], "source.mattermost_analytics.mm_telemetry_prod.server": [], "source.mattermost_analytics.mm_telemetry_prod.teams": [], "source.mattermost_analytics.mm_telemetry_prod.track_invite_email_resend": [], "source.mattermost_analytics.mm_telemetry_prod.tracks": [], "source.mattermost_analytics.mm_telemetry_prod.users": [], "source.mattermost_analytics.mm_telemetry_prod.warn_metrics": [], "source.mattermost_analytics.mm_telemetry_prod.welcome_message_sent": [], "source.mattermost_analytics.mattermostcom.aliases": [], "source.mattermost_analytics.mattermostcom.pages": [], "source.mattermost_analytics.mattermostcom.identifies": [], "source.mattermost_analytics.mattermostcom.users": [], "source.mattermost_analytics.mattermostcom.marketo_form_submit": [], "source.mattermost_analytics.mattermostcom.tracks": [], "source.mattermost_analytics.mattermostcom.groups": [], "source.mattermost_analytics.mattermostcom.free_trial_clicked": [], "source.mattermost_analytics.mattermostcom.rudder_discards": [], "source.mattermost_analytics.mattermostcom.screens": [], "source.mattermost_analytics.hacktoberboard_prod.activity": [], "source.mattermost_analytics.hacktoberboard_prod.blocks": [], "source.mattermost_analytics.hacktoberboard_prod.boards": [], "source.mattermost_analytics.hacktoberboard_prod.config": [], "source.mattermost_analytics.hacktoberboard_prod.event": [], "source.mattermost_analytics.hacktoberboard_prod.identifies": [], "source.mattermost_analytics.hacktoberboard_prod.pages": [], "source.mattermost_analytics.hacktoberboard_prod.rudder_discards": [], "source.mattermost_analytics.hacktoberboard_prod.server": [], "source.mattermost_analytics.hacktoberboard_prod.teams": [], "source.mattermost_analytics.hacktoberboard_prod.tracks": [], "source.mattermost_analytics.hacktoberboard_prod.users": [], "source.mattermost_analytics.hacktoberboard_prod.workspaces": [], "source.mattermost_analytics.stripe._sdc_rejected": [], "source.mattermost_analytics.stripe.balance_transactions": [], "source.mattermost_analytics.stripe.charges": [], "source.mattermost_analytics.stripe.coupons": [], "source.mattermost_analytics.stripe.customers": [], "source.mattermost_analytics.stripe.disputes": [], "source.mattermost_analytics.stripe.invoice_items": [], "source.mattermost_analytics.stripe.invoice_line_items": [], "source.mattermost_analytics.stripe.invoices": [], "source.mattermost_analytics.stripe.payment_intents": [], "source.mattermost_analytics.stripe.payout_transactions": [], "source.mattermost_analytics.stripe.payouts": [], "source.mattermost_analytics.stripe.products": [], "source.mattermost_analytics.stripe.subscription_items": [], "source.mattermost_analytics.stripe.subscriptions": [], "exposure.mattermost_analytics.community_tracks_explore": ["model.mattermost_analytics.grp_community_tracks"], "exposure.mattermost_analytics.event_registry_dashboard": ["model.mattermost_analytics.dim_events", "model.mattermost_analytics.fct_events_daily_snapshot"]}, "child_map": {"model.mattermost_analytics.stg_mm_telemetry_rc__performance_events": ["model.mattermost_analytics.int_mm_telemetry_rc_performance_events"], "model.mattermost_analytics.stg_mm_telemetry_rc__tracks": ["model.mattermost_analytics.int_mm_telemetry_rc__community_tracks", "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date"], "model.mattermost_analytics.base_mm_telemetry_rc__tracks": ["model.mattermost_analytics.stg_mm_telemetry_rc__tracks"], "model.mattermost_analytics.stg_cws__marketing": ["model.mattermost_analytics.fct_security_newsletter", "test.mattermost_analytics.accepted_values_stg_cws__marketing_subscribed_content__security_newsletter.e571d81e88", "test.mattermost_analytics.dbt_utils_not_empty_string_stg_cws__marketing_email.464934acf5", "test.mattermost_analytics.not_null_stg_cws__marketing_email.76559b841e", "test.mattermost_analytics.not_null_stg_cws__marketing_marketing_id.4abb89cabf", "test.mattermost_analytics.not_null_stg_cws__marketing_server_id.61773750b5"], "model.mattermost_analytics.stg_cws__trial_requests": ["model.mattermost_analytics.fct_in_product_trial_requests", "test.mattermost_analytics.not_null_stg_cws__trial_requests_trial_request_id.5d6e67e7fd"], "model.mattermost_analytics.stg_mm_mobile_prod__tracks": ["model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date", "model.mattermost_analytics.int_user_active_days_mobile_telemetry"], "model.mattermost_analytics.base_mm_mobile_prod__tracks": ["model.mattermost_analytics.stg_mm_mobile_prod__tracks"], "model.mattermost_analytics.stg_mattermost_docs__tracks": ["model.mattermost_analytics.int_mattermost_docs_aggregated_to_date"], "model.mattermost_analytics.base_mattermost_docs__tracks": ["model.mattermost_analytics.stg_mattermost_docs__tracks"], "model.mattermost_analytics.stg_mm_plugin_prod__tracks": ["model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date"], "model.mattermost_analytics.base_mm_plugin_prod__tracks": ["model.mattermost_analytics.stg_mm_plugin_prod__tracks"], "model.mattermost_analytics.stg_portal_prod__tracks": ["model.mattermost_analytics.int_portal_prod_aggregated_to_date"], "model.mattermost_analytics.base_portal_prod__tracks": ["model.mattermost_analytics.stg_portal_prod__tracks"], "model.mattermost_analytics.stg_mattermost_jira__issues": ["model.mattermost_analytics.dim_fix_versions", "model.mattermost_analytics.dim_labels", "model.mattermost_analytics.fct_issues_daily_snapshot", "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_id.8d17661889", "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_key.ff8ceb5cc7", "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_type_id.e9925150aa", "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_id.16f6ab11a8", "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_key.5c2aaa3f7e", "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_summary.86fc2de000", "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_id.c498ac5624", "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_key.5eb5705b5c"], "model.mattermost_analytics.stg_mattermost_jira__projects": ["model.mattermost_analytics.dim_projects", "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_name.6759e236e3", "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_id.99bc122810", "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_key.88afa71403", "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_id.8e7ff4bb80", "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_key.d99155dfde"], "model.mattermost_analytics.stg_incident_response_prod__tracks": ["model.mattermost_analytics.int_incident_response_prod_aggregated_to_date"], "model.mattermost_analytics.base_incident_response_prod__tracks": ["model.mattermost_analytics.stg_incident_response_prod__tracks"], "model.mattermost_analytics.stg_diagnostics__log_entries": ["model.mattermost_analytics.int_excludable_servers_invalid_security_data", "model.mattermost_analytics.int_server_security_update_latest_daily", "model.mattermost_analytics.int_server_summary"], "model.mattermost_analytics.stg_salesforce__opportunity": ["test.mattermost_analytics.not_null_stg_salesforce__opportunity_opportunity_id.234c5e60bd", "test.mattermost_analytics.unique_stg_salesforce__opportunity_opportunity_id.367b0f577a"], "model.mattermost_analytics.stg_salesforce__campaign": ["test.mattermost_analytics.not_null_stg_salesforce__campaign_campaign_id.8a70e791fc", "test.mattermost_analytics.unique_stg_salesforce__campaign_campaign_id.bb510c55b8"], "model.mattermost_analytics.stg_salesforce__contact": ["test.mattermost_analytics.not_null_stg_salesforce__contact_contact_id.d7c02bef78", "test.mattermost_analytics.test_contact__unique_email", "test.mattermost_analytics.unique_stg_salesforce__contact_contact_id.0cc2c0609e"], "model.mattermost_analytics.stg_salesforce__account": ["test.mattermost_analytics.not_null_stg_salesforce__account_account_id.1e0ff361d4", "test.mattermost_analytics.unique_stg_salesforce__account_account_id.6d58a39ba7"], "model.mattermost_analytics.stg_salesforce__lead": ["model.mattermost_analytics.fct_cloud_trial_requests", "model.mattermost_analytics.fct_in_product_trial_requests", "model.mattermost_analytics.fct_security_newsletter", "test.mattermost_analytics.not_null_stg_salesforce__lead_lead_id.e2ba6b2026", "test.mattermost_analytics.test_lead__unique_email", "test.mattermost_analytics.unique_stg_salesforce__lead_lead_id.ba8b21e282"], "model.mattermost_analytics.stg_salesforce__campaign_member": ["model.mattermost_analytics.fct_cloud_trial_requests", "model.mattermost_analytics.fct_in_product_trial_requests", "model.mattermost_analytics.fct_security_newsletter", "test.mattermost_analytics.not_null_stg_salesforce__campaign_member_campaign_member_id.d1d111912d", "test.mattermost_analytics.unique_stg_salesforce__campaign_member_campaign_member_id.c16f72906a"], "model.mattermost_analytics.stg_salesforce__opportunity_line_item": ["test.mattermost_analytics.not_null_stg_salesforce__opportunity_line_item_opportunity_line_item.2c8bc71989", "test.mattermost_analytics.unique_stg_salesforce__opportunity_line_item_opportunity_line_item.9ec65a7607"], "model.mattermost_analytics.stg_salesforce__user": ["test.mattermost_analytics.not_null_stg_salesforce__user_user_id.ac0ab26d65", "test.mattermost_analytics.unique_stg_salesforce__user_user_id.9a29b41152"], "model.mattermost_analytics.stg_mattermost__version_release_dates": ["model.mattermost_analytics.dim_fix_versions", "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_is_supported.111545de05", "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_planned_release_date.7b8b12b068", "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_release_number.2463bd8110", "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_short_version.675b40f6ae", "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_version.c3d9deaded", "test.mattermost_analytics.unique_stg_mattermost__version_release_dates_version.092dc272d6"], "model.mattermost_analytics.stg_mattermost2__tracks": ["model.mattermost_analytics.int_user_active_days_legacy_telemetry"], "model.mattermost_analytics.stg_mattermost2__oauth": ["model.mattermost_analytics.dim_daily_server_config"], "model.mattermost_analytics.stg_mattermost2__server": ["model.mattermost_analytics.int_server_telemetry_legacy_latest_daily"], "model.mattermost_analytics.stg_mattermost2__activity": ["model.mattermost_analytics.int_activity_legacy_latest_daily"], "model.mattermost_analytics.base_mattermost2__tracks": ["model.mattermost_analytics.stg_mattermost2__tracks"], "model.mattermost_analytics.stg_mm_telemetry_prod__activity": ["model.mattermost_analytics.int_activity_latest_daily"], "model.mattermost_analytics.stg_mm_telemetry_prod__oauth": ["model.mattermost_analytics.dim_daily_server_config"], "model.mattermost_analytics.stg_mm_telemetry_prod__tracks": ["model.mattermost_analytics.int_mm_telemetry_prod__community_tracks", "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date", "model.mattermost_analytics.int_user_active_days_server_telemetry"], "model.mattermost_analytics.stg_mm_telemetry_prod__server": ["model.mattermost_analytics.int_server_telemetry_latest_daily"], "model.mattermost_analytics.stg_mm_telemetry_prod__performance_events": ["model.mattermost_analytics.int_mm_telemetry_prod_performance_events"], "model.mattermost_analytics.base_mm_telemetry_prod__tracks": ["model.mattermost_analytics.stg_mm_telemetry_prod__tracks"], "model.mattermost_analytics.stg_mattermostcom__tracks": ["model.mattermost_analytics.int_mattermostcom_aggregated_to_date"], "model.mattermost_analytics.base_mattermostcom__tracks": ["model.mattermost_analytics.stg_mattermostcom__tracks"], "model.mattermost_analytics.stg_hacktoberboard_prod__tracks": ["model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date"], "model.mattermost_analytics.base_hacktoberboard_prod__tracks": ["model.mattermost_analytics.stg_hacktoberboard_prod__tracks"], "model.mattermost_analytics.stg_stripe__subscription_items": ["test.mattermost_analytics.not_null_stg_stripe__subscription_items_product_id.9ee3ebe445", "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_id.481bcb9a25", "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_item_id.2d04b0beaa", "test.mattermost_analytics.test_subscription__onprem_has_license_data", "test.mattermost_analytics.test_subscription_items__max_two_per_onprem_subscription", "test.mattermost_analytics.unique_stg_stripe__subscription_items_subscription_item_id.479719b8c9"], "model.mattermost_analytics.stg_stripe__invoice_line_items": ["test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_id.617c95b7d7", "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_line_item_id.9300d76698", "test.mattermost_analytics.relationships_stg_stripe__invoice_line_items_invoice_id__invoice_id__ref_stg_stripe__invoices_.bbac06f918", "test.mattermost_analytics.unique_stg_stripe__invoice_line_items_invoice_line_item_id.1253e56144"], "model.mattermost_analytics.stg_stripe__invoices": ["test.mattermost_analytics.not_null_stg_stripe__invoices_created_at.2e36890942", "test.mattermost_analytics.not_null_stg_stripe__invoices_invoice_id.dfbda32b9c", "test.mattermost_analytics.relationships_stg_stripe__invoice_line_items_invoice_id__invoice_id__ref_stg_stripe__invoices_.bbac06f918"], "model.mattermost_analytics.stg_stripe__subscriptions": ["model.mattermost_analytics.int_cloud_trial_requests", "model.mattermost_analytics.int_excludable_servers_cloud_installations", "test.mattermost_analytics.not_null_stg_stripe__subscriptions_created_at.27a9cd7f6e", "test.mattermost_analytics.not_null_stg_stripe__subscriptions_subscription_id.7af221a3cd", "test.mattermost_analytics.test_subscription__onprem_has_license_data", "test.mattermost_analytics.unique_stg_stripe__subscriptions_subscription_id.2ea0e2eec3"], "model.mattermost_analytics.stg_stripe__products": ["model.mattermost_analytics.int_cloud_trial_requests", "test.mattermost_analytics.not_null_stg_stripe__products_product_id.4e54b80187", "test.mattermost_analytics.test_subscription__onprem_has_license_data", "test.mattermost_analytics.test_subscription_items__max_two_per_onprem_subscription", "test.mattermost_analytics.unique_stg_stripe__products_product_id.556856542a"], "model.mattermost_analytics.stg_stripe__customers": ["model.mattermost_analytics.int_cloud_trial_requests", "model.mattermost_analytics.int_excludable_servers_cloud_installations", "test.mattermost_analytics.not_null_stg_stripe__customers_created_at.481ec0f98a", "test.mattermost_analytics.not_null_stg_stripe__customers_customer_id.70a70c42a7", "test.mattermost_analytics.not_null_stg_stripe__customers_email.fe9fbbc440", "test.mattermost_analytics.not_null_stg_stripe__customers_updated_at.98c4d1cd4e", "test.mattermost_analytics.unique_stg_stripe__customers_customer_id.d48ec44cbd"], "model.mattermost_analytics.grp_performance_events": ["test.mattermost_analytics.accepted_values_grp_performance_events__source_relation__int_mm_telemetry_rc_performance_events__int_mm_telemetry_prod_performance_events.8cb1f3b98b", "test.mattermost_analytics.not_null_grp_performance_events_event_date.2543751ae9", "test.mattermost_analytics.not_null_grp_performance_events_id.330b7ae2e0", "test.mattermost_analytics.unique_grp_performance_events_id.ad7d5b30e5"], "model.mattermost_analytics.grp_community_tracks": ["exposure.mattermost_analytics.community_tracks_explore", "test.mattermost_analytics.not_null_grp_community_tracks_event_id.04a0298775", "test.mattermost_analytics.unique_grp_community_tracks_event_id.bfe9557712"], "model.mattermost_analytics.fct_events_daily_snapshot": ["exposure.mattermost_analytics.event_registry_dashboard", "test.mattermost_analytics.dbt_utils_expression_is_true_fct_events_daily_snapshot_event_count_0.7d4e14f128", "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_events_daily_snapshot_event_date__event_id.87db18a8e5", "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_count.f67160cd88", "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_date.69686182c8", "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_id.a4b669af51", "test.mattermost_analytics.not_null_fct_events_daily_snapshot_id.e8def66f81", "test.mattermost_analytics.relationships_fct_events_daily_snapshot_event_id__event_id__ref_dim_events_.2a96944b3e", "test.mattermost_analytics.unique_fct_events_daily_snapshot_id.d02056f7f2"], "model.mattermost_analytics.dim_events": ["exposure.mattermost_analytics.event_registry_dashboard", "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_dim_events_event_name__event_table__category__event_type__source.f34005d0d1", "test.mattermost_analytics.not_null_dim_events_event_id.480394b51b", "test.mattermost_analytics.not_null_dim_events_event_name.594f072a39", "test.mattermost_analytics.not_null_dim_events_event_table.69db754b70", "test.mattermost_analytics.not_null_dim_events_source.1c4b4aeebe", "test.mattermost_analytics.relationships_fct_events_daily_snapshot_event_id__event_id__ref_dim_events_.2a96944b3e", "test.mattermost_analytics.unique_dim_events_event_id.9e7565176a"], "model.mattermost_analytics.fct_in_product_trial_requests": ["test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_company_name.c0a530fc53", "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_first_name.61d081e4d1", "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_last_name.4df8b9bbfa", "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_name.f7ba7391b4", "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_normalized_email.ac0f1595df", "test.mattermost_analytics.not_null_fct_in_product_trial_requests_name.a6e3998b54", "test.mattermost_analytics.not_null_fct_in_product_trial_requests_normalized_email.eb16f6c556", "test.mattermost_analytics.not_null_fct_in_product_trial_requests_trial_request_id.f659583bd8", "test.mattermost_analytics.unique_fct_in_product_trial_requests_trial_request_id.9fbd72e76d", "test.mattermost_analytics.valid_country_name.6fbe9ede7d"], "model.mattermost_analytics.fct_cloud_trial_requests": ["test.mattermost_analytics.dbt_utils_not_empty_string_fct_cloud_trial_requests_email.2a1f09e63e", "test.mattermost_analytics.not_null_fct_cloud_trial_requests_email.04959c1093"], "model.mattermost_analytics.dim_fix_versions": ["test.mattermost_analytics.accepted_values_dim_fix_versions_component__Mobile__Desktop__Playbooks__IR__Cloud__Apps__None.57b1839642", "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_major__True__0.58d0dba64d", "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_minor__True__0.3cf17aed97", "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_fix_version.319e7c6c54", "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_semver.27b2d25b2f", "test.mattermost_analytics.not_null_dim_fix_versions_fix_version.e2728d4a95", "test.mattermost_analytics.not_null_dim_fix_versions_issue_id.04e09cd6ab", "test.mattermost_analytics.relationships_dim_fix_versions_issue_id__issue_id__ref_fct_issues_daily_snapshot_.d3720e0e48"], "model.mattermost_analytics.dim_labels": ["test.mattermost_analytics.not_null_dim_labels_issue_id.0d48c79306", "test.mattermost_analytics.not_null_dim_labels_label.d6aeaf0feb", "test.mattermost_analytics.relationships_dim_labels_issue_id__issue_id__ref_fct_issues_daily_snapshot_.57348ef1cd"], "model.mattermost_analytics.dim_projects": ["test.mattermost_analytics.not_null_dim_projects_name.4d3148dfcd", "test.mattermost_analytics.not_null_dim_projects_project_id.89ad1da4cd", "test.mattermost_analytics.not_null_dim_projects_project_key.f57855f13a", "test.mattermost_analytics.relationships_fct_issues_daily_snapshot_project_id__project_id__ref_dim_projects_.1253039083", "test.mattermost_analytics.unique_dim_projects_project_id.e50e806691", "test.mattermost_analytics.unique_dim_projects_project_key.da23dabd87"], "model.mattermost_analytics.fct_issues_daily_snapshot": ["test.mattermost_analytics.dbt_utils_accepted_range_fct_issues_daily_snapshot_lead_time_in_days__True__0.459aedc908", "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_created_at.b9baeb692e", "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_id.6614befb12", "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_key.550a3a2782", "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_type.207161b3fb", "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_project_id.21fd764871", "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_status.48103ead12", "test.mattermost_analytics.relationships_dim_fix_versions_issue_id__issue_id__ref_fct_issues_daily_snapshot_.d3720e0e48", "test.mattermost_analytics.relationships_dim_labels_issue_id__issue_id__ref_fct_issues_daily_snapshot_.57348ef1cd", "test.mattermost_analytics.relationships_fct_issues_daily_snapshot_project_id__project_id__ref_dim_projects_.1253039083", "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_id.e4e796ee3c", "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_key.82c0358848"], "model.mattermost_analytics.dim_server_info": ["test.mattermost_analytics.not_null_dim_server_info_server_id.0ed37f71b1"], "model.mattermost_analytics.dim_daily_server_info": ["test.mattermost_analytics.dbt_utils_accepted_range_dim_daily_server_info_count_reported_versions__True__1.7c958d37ce", "test.mattermost_analytics.not_null_dim_daily_server_info_activity_date.866fd9a9bc", "test.mattermost_analytics.not_null_dim_daily_server_info_daily_server_id.7c0492529e", "test.mattermost_analytics.not_null_dim_daily_server_info_is_enterprise_ready.621908b517", "test.mattermost_analytics.not_null_dim_daily_server_info_server_id.5382822fe1", "test.mattermost_analytics.unique_dim_daily_server_info_daily_server_id.53872931a3"], "model.mattermost_analytics.dim_daily_server_config": ["test.mattermost_analytics.not_null_dim_daily_server_config_daily_server_id.cff3a76c02", "test.mattermost_analytics.unique_dim_daily_server_config_daily_server_id.bfbcc51ef7"], "model.mattermost_analytics.fct_active_users": ["test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_active_users_activity_date__server_id.11070c5f62", "test.mattermost_analytics.not_null_fct_active_users_activity_date.c37d7d834f", "test.mattermost_analytics.not_null_fct_active_users_daily_server_id.465868bd11", "test.mattermost_analytics.not_null_fct_active_users_server_id.c0ce7cd4df", "test.mattermost_analytics.not_null_fct_active_users_version_id.d60142a407", "test.mattermost_analytics.relationships_fct_active_users_version_id__version_id__ref_dim_version_.cd09a944f0", "test.mattermost_analytics.unique_fct_active_users_daily_server_id.519c8852e2"], "model.mattermost_analytics.dim_version": ["test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_major__True__1.5a7485617b", "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_minor__True__0.7db1746143", "test.mattermost_analytics.not_null_dim_version_version_id.9f0db9b187", "test.mattermost_analytics.relationships_fct_active_servers_version_id__version_id__ref_dim_version_.ea048c1938", "test.mattermost_analytics.relationships_fct_active_users_version_id__version_id__ref_dim_version_.cd09a944f0", "test.mattermost_analytics.unique_dim_version_version_id.9f2fd8dc74"], "model.mattermost_analytics.dim_excludable_servers": ["model.mattermost_analytics.fct_active_users", "test.mattermost_analytics.not_null_dim_excludable_servers_reasons.999f332674", "test.mattermost_analytics.not_null_dim_excludable_servers_server_id.aef616d31b", "test.mattermost_analytics.unique_dim_excludable_servers_server_id.b85f47447a"], "model.mattermost_analytics.fct_active_servers": ["test.mattermost_analytics.not_null_fct_active_servers_activity_date.15608febf0", "test.mattermost_analytics.not_null_fct_active_servers_daily_server_id.07b3c89b0a", "test.mattermost_analytics.not_null_fct_active_servers_server_id.c2f396ab92", "test.mattermost_analytics.not_null_fct_active_servers_version_id.966736cb49", "test.mattermost_analytics.relationships_fct_active_servers_version_id__version_id__ref_dim_version_.ea048c1938", "test.mattermost_analytics.unique_fct_active_servers_daily_server_id.f0fc363852"], "model.mattermost_analytics.fct_security_newsletter": ["test.mattermost_analytics.dbt_utils_not_empty_string_fct_security_newsletter_email.77559cb2a1", "test.mattermost_analytics.not_null_fct_security_newsletter_email.8fc3783d85"], "model.mattermost_analytics.telemetry_days": ["model.mattermost_analytics.int_server_active_days_spined", "model.mattermost_analytics.int_user_active_days_spined"], "model.mattermost_analytics.int_mm_telemetry_prod_performance_events": ["model.mattermost_analytics.grp_performance_events"], "model.mattermost_analytics.int_mm_telemetry_rc_performance_events": ["model.mattermost_analytics.grp_performance_events"], "model.mattermost_analytics.int_mm_telemetry_prod__community_tracks": ["model.mattermost_analytics.grp_community_tracks"], "model.mattermost_analytics.int_mm_telemetry_rc__community_tracks": ["model.mattermost_analytics.grp_community_tracks"], "model.mattermost_analytics.int_mattermostcom_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_daily_event_id.3768d17980", "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_event_id.75b97ed0f2", "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_received_at_date.888b5fd3b1", "test.mattermost_analytics.unique_int_mattermostcom_aggregated_to_date_daily_event_id.b5d3fa7a27"], "model.mattermost_analytics.int_mattermost_docs_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_daily_event_id.faca04c893", "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_event_id.d4359db268", "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_received_at_date.99ff2ff98f", "test.mattermost_analytics.unique_int_mattermost_docs_aggregated_to_date_daily_event_id.7bb995acab"], "model.mattermost_analytics.int_hacktoberboard_prod_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.383c8ce206", "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_event_id.728087993f", "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_received_at_date.939163e77d", "test.mattermost_analytics.unique_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.ef5efaff8a"], "model.mattermost_analytics.int_mm_plugin_prod_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2453761a7c", "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_event_id.81b50c7fa9", "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date.a483479092", "test.mattermost_analytics.unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2c157d82d6"], "model.mattermost_analytics.int_portal_prod_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_daily_event_id.39de11fb92", "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_event_id.781d0d9b24", "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_received_at_date.7ca390f308", "test.mattermost_analytics.unique_int_portal_prod_aggregated_to_date_daily_event_id.5b89262e22"], "model.mattermost_analytics.int_mm_telemetry_prod_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.4939ff52af", "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_event_id.492c81fbba", "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_received_at_date.eecc5be7b1", "test.mattermost_analytics.unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.8b436a04f2"], "model.mattermost_analytics.int_incident_response_prod_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_daily_event_id.1f6a46712c", "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_event_id.8e7dd8d68d", "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_received_at_date.07770c56d4", "test.mattermost_analytics.unique_int_incident_response_prod_aggregated_to_date_daily_event_id.28f30025a9"], "model.mattermost_analytics.int_mm_telemetry_rc_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.c3069760ea", "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_event_id.5b8e58d398", "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_received_at_date.e7abc97692", "test.mattermost_analytics.unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.485e5fb487"], "model.mattermost_analytics.int_mm_mobile_prod_aggregated_to_date": ["model.mattermost_analytics.int_events_aggregated_to_date", "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id.74394ae81c", "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_event_id.b76d49be23", "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date.87047c7370", "test.mattermost_analytics.unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id.e692839aa6"], "model.mattermost_analytics.int_events_aggregated_to_date": ["model.mattermost_analytics.dim_events", "model.mattermost_analytics.fct_events_daily_snapshot", "test.mattermost_analytics.not_null_int_events_aggregated_to_date_daily_event_id.c207ec5bb5", "test.mattermost_analytics.not_null_int_events_aggregated_to_date_event_id.58cd167ac0", "test.mattermost_analytics.not_null_int_events_aggregated_to_date_received_at_date.e3a17f0a9d", "test.mattermost_analytics.unique_int_events_aggregated_to_date_daily_event_id.7785ba8b15"], "model.mattermost_analytics.int_cloud_trial_requests": ["model.mattermost_analytics.fct_cloud_trial_requests", "test.mattermost_analytics.test_valid_emails"], "model.mattermost_analytics.int_user_active_days_spined": ["model.mattermost_analytics.fct_active_users"], "model.mattermost_analytics.int_user_active_days_legacy_telemetry": ["model.mattermost_analytics.int_server_summary", "model.mattermost_analytics.int_user_active_days_spined"], "model.mattermost_analytics.int_user_active_days_mobile_telemetry": ["model.mattermost_analytics.int_user_active_days_spined"], "model.mattermost_analytics.int_user_active_days_server_telemetry": ["model.mattermost_analytics.int_server_summary", "model.mattermost_analytics.int_user_active_days_spined"], "model.mattermost_analytics.int_server_active_days_spined": ["model.mattermost_analytics.dim_daily_server_config", "model.mattermost_analytics.dim_daily_server_info", "model.mattermost_analytics.dim_server_info", "model.mattermost_analytics.dim_version", "model.mattermost_analytics.fct_active_servers", "model.mattermost_analytics.fct_active_users"], "model.mattermost_analytics.int_excludable_servers": ["model.mattermost_analytics.dim_daily_server_info", "model.mattermost_analytics.dim_excludable_servers", "model.mattermost_analytics.int_server_active_days_spined"], "model.mattermost_analytics.int_server_summary": ["model.mattermost_analytics.int_excludable_servers_invalid_server_id", "model.mattermost_analytics.int_excludable_servers_single_day_activity"], "model.mattermost_analytics._int_server_installation_id_bridge": ["model.mattermost_analytics.int_excludable_servers_cloud_installations"], "model.mattermost_analytics.int_excludable_servers_cloud_installations": ["model.mattermost_analytics.int_excludable_servers"], "model.mattermost_analytics.int_excludable_servers_single_day_activity": ["model.mattermost_analytics.int_excludable_servers"], "model.mattermost_analytics.int_excludable_servers_invalid_security_data": ["model.mattermost_analytics.int_excludable_servers"], "model.mattermost_analytics.int_excludable_servers_invalid_server_id": ["model.mattermost_analytics.int_excludable_servers"], "model.mattermost_analytics.int_server_security_update_latest_daily": ["model.mattermost_analytics.int_server_active_days_spined"], "model.mattermost_analytics.int_activity_latest_daily": ["model.mattermost_analytics.int_server_active_days_spined"], "model.mattermost_analytics.int_server_telemetry_legacy_latest_daily": ["model.mattermost_analytics.int_server_active_days_spined", "model.mattermost_analytics.int_server_summary"], "model.mattermost_analytics.int_activity_legacy_latest_daily": ["model.mattermost_analytics.int_server_active_days_spined"], "model.mattermost_analytics.int_server_telemetry_latest_daily": ["model.mattermost_analytics._int_server_installation_id_bridge", "model.mattermost_analytics.int_server_active_days_spined", "model.mattermost_analytics.int_server_summary"], "test.mattermost_analytics.test_trial_requests": [], "test.mattermost_analytics.test_lead__unique_email": [], "test.mattermost_analytics.test_contact__unique_email": [], "test.mattermost_analytics.test_subscription__onprem_has_license_data": [], "test.mattermost_analytics.test_subscription_items__max_two_per_onprem_subscription": [], "test.mattermost_analytics.test_valid_emails": [], "seed.mattermost_analytics.dbt_project_evaluator_exceptions": ["model.dbt_project_evaluator.fct_chained_views_dependencies", "model.dbt_project_evaluator.fct_direct_join_to_source", "model.dbt_project_evaluator.fct_exposure_parents_materializations", "model.dbt_project_evaluator.fct_hard_coded_references", "model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source", "model.dbt_project_evaluator.fct_missing_primary_key_tests", "model.dbt_project_evaluator.fct_model_directories", "model.dbt_project_evaluator.fct_model_fanout", "model.dbt_project_evaluator.fct_model_naming_conventions", "model.dbt_project_evaluator.fct_multiple_sources_joined", "model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts", "model.dbt_project_evaluator.fct_root_models", "model.dbt_project_evaluator.fct_source_directories", "model.dbt_project_evaluator.fct_source_fanout", "model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate", "model.dbt_project_evaluator.fct_staging_dependent_on_staging", "model.dbt_project_evaluator.fct_test_directories", "model.dbt_project_evaluator.fct_undocumented_models", "model.dbt_project_evaluator.fct_unused_sources"], "seed.mattermost_analytics.country_codes": ["test.mattermost_analytics.valid_country_name.6fbe9ede7d"], "seed.mattermost_analytics.excludable_servers": ["model.mattermost_analytics.int_excludable_servers"], "operation.mattermost_analytics.mattermost_analytics-on-run-start-0": [], "model.dbt_project_evaluator.stg_nodes": ["model.dbt_project_evaluator.int_all_graph_resources"], "model.dbt_project_evaluator.stg_exposure_relationships": ["model.dbt_project_evaluator.int_direct_relationships"], "model.dbt_project_evaluator.stg_node_relationships": ["model.dbt_project_evaluator.int_direct_relationships"], "model.dbt_project_evaluator.stg_sources": ["model.dbt_project_evaluator.int_all_graph_resources"], "model.dbt_project_evaluator.stg_exposures": ["model.dbt_project_evaluator.int_all_graph_resources"], "model.dbt_project_evaluator.stg_metric_relationships": ["model.dbt_project_evaluator.int_direct_relationships"], "model.dbt_project_evaluator.stg_metrics": ["model.dbt_project_evaluator.int_all_graph_resources"], "model.dbt_project_evaluator.base_node_relationships": ["model.dbt_project_evaluator.stg_node_relationships"], "model.dbt_project_evaluator.base_exposure_relationships": ["model.dbt_project_evaluator.stg_exposure_relationships"], "model.dbt_project_evaluator.base_metric_relationships": ["model.dbt_project_evaluator.stg_metric_relationships"], "model.dbt_project_evaluator.stg_naming_convention_folders": ["model.dbt_project_evaluator.fct_model_directories", "model.dbt_project_evaluator.int_all_graph_resources"], "model.dbt_project_evaluator.stg_naming_convention_prefixes": ["model.dbt_project_evaluator.fct_model_naming_conventions", "model.dbt_project_evaluator.int_all_graph_resources"], "model.dbt_project_evaluator.fct_undocumented_models": ["test.dbt_project_evaluator.is_empty_fct_undocumented_models_.7c2f43109c"], "model.dbt_project_evaluator.fct_documentation_coverage": ["test.dbt_project_evaluator.valid_documentation_coverage.67ef7314a7"], "model.dbt_project_evaluator.int_direct_relationships": ["model.dbt_project_evaluator.fct_test_directories", "model.dbt_project_evaluator.int_all_dag_relationships", "model.dbt_project_evaluator.int_model_test_summary"], "model.dbt_project_evaluator.int_all_dag_relationships": ["model.dbt_project_evaluator.fct_chained_views_dependencies", "model.dbt_project_evaluator.fct_direct_join_to_source", "model.dbt_project_evaluator.fct_exposure_parents_materializations", "model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source", "model.dbt_project_evaluator.fct_model_directories", "model.dbt_project_evaluator.fct_model_fanout", "model.dbt_project_evaluator.fct_multiple_sources_joined", "model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts", "model.dbt_project_evaluator.fct_root_models", "model.dbt_project_evaluator.fct_source_fanout", "model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate", "model.dbt_project_evaluator.fct_staging_dependent_on_staging", "model.dbt_project_evaluator.fct_unused_sources"], "model.dbt_project_evaluator.int_all_graph_resources": ["model.dbt_project_evaluator.fct_documentation_coverage", "model.dbt_project_evaluator.fct_duplicate_sources", "model.dbt_project_evaluator.fct_hard_coded_references", "model.dbt_project_evaluator.fct_model_directories", "model.dbt_project_evaluator.fct_model_naming_conventions", "model.dbt_project_evaluator.fct_source_directories", "model.dbt_project_evaluator.fct_test_directories", "model.dbt_project_evaluator.fct_undocumented_models", "model.dbt_project_evaluator.int_direct_relationships", "model.dbt_project_evaluator.int_model_test_summary"], "model.dbt_project_evaluator.fct_multiple_sources_joined": ["test.dbt_project_evaluator.is_empty_fct_multiple_sources_joined_.494f431817"], "model.dbt_project_evaluator.fct_root_models": ["test.dbt_project_evaluator.is_empty_fct_root_models_.ccb5a490f1"], "model.dbt_project_evaluator.fct_model_fanout": ["test.dbt_project_evaluator.is_empty_fct_model_fanout_.a3ef403a95"], "model.dbt_project_evaluator.fct_unused_sources": ["test.dbt_project_evaluator.is_empty_fct_unused_sources_.41456b9da8"], "model.dbt_project_evaluator.fct_duplicate_sources": ["test.dbt_project_evaluator.is_empty_fct_duplicate_sources_.642214de31"], "model.dbt_project_evaluator.fct_source_fanout": ["test.dbt_project_evaluator.is_empty_fct_source_fanout_.45762bb722"], "model.dbt_project_evaluator.fct_direct_join_to_source": ["test.dbt_project_evaluator.is_empty_fct_direct_join_to_source_.2ec67ec028"], "model.dbt_project_evaluator.fct_staging_dependent_on_staging": ["test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_staging_.bea47be3ca"], "model.dbt_project_evaluator.fct_staging_dependent_on_marts_or_intermediate": ["test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_marts_or_intermediate_.3aa45af51f"], "model.dbt_project_evaluator.fct_marts_or_intermediate_dependent_on_source": ["test.dbt_project_evaluator.is_empty_fct_marts_or_intermediate_dependent_on_source_.c0abd5f00f"], "model.dbt_project_evaluator.fct_hard_coded_references": ["test.dbt_project_evaluator.is_empty_fct_hard_coded_references_.9f62f70113"], "model.dbt_project_evaluator.fct_rejoining_of_upstream_concepts": ["test.dbt_project_evaluator.is_empty_fct_rejoining_of_upstream_concepts_.c6b3625c7d"], "model.dbt_project_evaluator.fct_missing_primary_key_tests": ["test.dbt_project_evaluator.is_empty_fct_missing_primary_key_tests_.4d10d48da0"], "model.dbt_project_evaluator.fct_test_coverage": ["test.dbt_project_evaluator.valid_test_coverage.df03f31e09"], "model.dbt_project_evaluator.int_model_test_summary": ["model.dbt_project_evaluator.fct_missing_primary_key_tests", "model.dbt_project_evaluator.fct_test_coverage"], "model.dbt_project_evaluator.fct_exposure_parents_materializations": ["test.dbt_project_evaluator.is_empty_fct_exposure_parents_materializations_.5a21592422"], "model.dbt_project_evaluator.fct_chained_views_dependencies": ["test.dbt_project_evaluator.valid_chained_views_dependencies.123bb34533"], "model.dbt_project_evaluator.fct_source_directories": ["test.dbt_project_evaluator.is_empty_fct_source_directories_.3ec42bc19c"], "model.dbt_project_evaluator.fct_test_directories": ["test.dbt_project_evaluator.is_empty_fct_test_directories_.1c1db93433"], "model.dbt_project_evaluator.fct_model_naming_conventions": ["test.dbt_project_evaluator.is_empty_fct_model_naming_conventions_.a79bc0fbe2"], "model.dbt_project_evaluator.fct_model_directories": ["test.dbt_project_evaluator.is_empty_fct_model_directories_.50098500db"], "test.mattermost_analytics.not_null_stg_cws__trial_requests_trial_request_id.5d6e67e7fd": [], "test.mattermost_analytics.not_null_stg_cws__marketing_marketing_id.4abb89cabf": [], "test.mattermost_analytics.not_null_stg_cws__marketing_email.76559b841e": [], "test.mattermost_analytics.dbt_utils_not_empty_string_stg_cws__marketing_email.464934acf5": [], "test.mattermost_analytics.accepted_values_stg_cws__marketing_subscribed_content__security_newsletter.e571d81e88": [], "test.mattermost_analytics.not_null_stg_cws__marketing_server_id.61773750b5": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_id.8d17661889": [], "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_id.c498ac5624": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_key.ff8ceb5cc7": [], "test.mattermost_analytics.unique_stg_mattermost_jira__issues_issue_key.5eb5705b5c": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_id.16f6ab11a8": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_project_key.5c2aaa3f7e": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_summary.86fc2de000": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__issues_issue_type_id.e9925150aa": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_id.99bc122810": [], "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_id.8e7ff4bb80": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_project_key.88afa71403": [], "test.mattermost_analytics.unique_stg_mattermost_jira__projects_project_key.d99155dfde": [], "test.mattermost_analytics.not_null_stg_mattermost_jira__projects_name.6759e236e3": [], "test.mattermost_analytics.not_null_stg_salesforce__campaign_campaign_id.8a70e791fc": [], "test.mattermost_analytics.unique_stg_salesforce__campaign_campaign_id.bb510c55b8": [], "test.mattermost_analytics.not_null_stg_salesforce__campaign_member_campaign_member_id.d1d111912d": [], "test.mattermost_analytics.unique_stg_salesforce__campaign_member_campaign_member_id.c16f72906a": [], "test.mattermost_analytics.not_null_stg_salesforce__contact_contact_id.d7c02bef78": [], "test.mattermost_analytics.unique_stg_salesforce__contact_contact_id.0cc2c0609e": [], "test.mattermost_analytics.not_null_stg_salesforce__lead_lead_id.e2ba6b2026": [], "test.mattermost_analytics.unique_stg_salesforce__lead_lead_id.ba8b21e282": [], "test.mattermost_analytics.not_null_stg_salesforce__opportunity_opportunity_id.234c5e60bd": [], "test.mattermost_analytics.unique_stg_salesforce__opportunity_opportunity_id.367b0f577a": [], "test.mattermost_analytics.not_null_stg_salesforce__opportunity_line_item_opportunity_line_item.2c8bc71989": [], "test.mattermost_analytics.unique_stg_salesforce__opportunity_line_item_opportunity_line_item.9ec65a7607": [], "test.mattermost_analytics.not_null_stg_salesforce__user_user_id.ac0ab26d65": [], "test.mattermost_analytics.unique_stg_salesforce__user_user_id.9a29b41152": [], "test.mattermost_analytics.not_null_stg_salesforce__account_account_id.1e0ff361d4": [], "test.mattermost_analytics.unique_stg_salesforce__account_account_id.6d58a39ba7": [], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_version.c3d9deaded": [], "test.mattermost_analytics.unique_stg_mattermost__version_release_dates_version.092dc272d6": [], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_short_version.675b40f6ae": [], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_planned_release_date.7b8b12b068": [], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_is_supported.111545de05": [], "test.mattermost_analytics.not_null_stg_mattermost__version_release_dates_release_number.2463bd8110": [], "test.mattermost_analytics.not_null_stg_stripe__customers_created_at.481ec0f98a": [], "test.mattermost_analytics.not_null_stg_stripe__customers_email.fe9fbbc440": [], "test.mattermost_analytics.not_null_stg_stripe__customers_customer_id.70a70c42a7": [], "test.mattermost_analytics.unique_stg_stripe__customers_customer_id.d48ec44cbd": [], "test.mattermost_analytics.not_null_stg_stripe__customers_updated_at.98c4d1cd4e": [], "test.mattermost_analytics.not_null_stg_stripe__subscriptions_created_at.27a9cd7f6e": [], "test.mattermost_analytics.not_null_stg_stripe__subscriptions_subscription_id.7af221a3cd": [], "test.mattermost_analytics.unique_stg_stripe__subscriptions_subscription_id.2ea0e2eec3": [], "test.mattermost_analytics.not_null_stg_stripe__products_product_id.4e54b80187": [], "test.mattermost_analytics.unique_stg_stripe__products_product_id.556856542a": [], "test.mattermost_analytics.not_null_stg_stripe__invoices_created_at.2e36890942": [], "test.mattermost_analytics.not_null_stg_stripe__invoices_invoice_id.dfbda32b9c": [], "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_line_item_id.9300d76698": [], "test.mattermost_analytics.unique_stg_stripe__invoice_line_items_invoice_line_item_id.1253e56144": [], "test.mattermost_analytics.relationships_stg_stripe__invoice_line_items_invoice_id__invoice_id__ref_stg_stripe__invoices_.bbac06f918": [], "test.mattermost_analytics.not_null_stg_stripe__invoice_line_items_invoice_id.617c95b7d7": [], "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_item_id.2d04b0beaa": [], "test.mattermost_analytics.unique_stg_stripe__subscription_items_subscription_item_id.479719b8c9": [], "test.mattermost_analytics.not_null_stg_stripe__subscription_items_subscription_id.481bcb9a25": [], "test.mattermost_analytics.not_null_stg_stripe__subscription_items_product_id.9ee3ebe445": [], "test.mattermost_analytics.accepted_values_grp_performance_events__source_relation__int_mm_telemetry_rc_performance_events__int_mm_telemetry_prod_performance_events.8cb1f3b98b": [], "test.mattermost_analytics.not_null_grp_performance_events_id.330b7ae2e0": [], "test.mattermost_analytics.unique_grp_performance_events_id.ad7d5b30e5": [], "test.mattermost_analytics.not_null_grp_performance_events_event_date.2543751ae9": [], "test.mattermost_analytics.unique_grp_community_tracks_event_id.bfe9557712": [], "test.mattermost_analytics.not_null_grp_community_tracks_event_id.04a0298775": [], "test.mattermost_analytics.unique_fct_events_daily_snapshot_id.d02056f7f2": [], "test.mattermost_analytics.not_null_fct_events_daily_snapshot_id.e8def66f81": [], "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_date.69686182c8": [], "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_id.a4b669af51": [], "test.mattermost_analytics.relationships_fct_events_daily_snapshot_event_id__event_id__ref_dim_events_.2a96944b3e": [], "test.mattermost_analytics.not_null_fct_events_daily_snapshot_event_count.f67160cd88": [], "test.mattermost_analytics.dbt_utils_expression_is_true_fct_events_daily_snapshot_event_count_0.7d4e14f128": [], "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_events_daily_snapshot_event_date__event_id.87db18a8e5": [], "test.mattermost_analytics.unique_dim_events_event_id.9e7565176a": [], "test.mattermost_analytics.not_null_dim_events_event_id.480394b51b": [], "test.mattermost_analytics.not_null_dim_events_event_name.594f072a39": [], "test.mattermost_analytics.not_null_dim_events_event_table.69db754b70": [], "test.mattermost_analytics.not_null_dim_events_source.1c4b4aeebe": [], "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_dim_events_event_name__event_table__category__event_type__source.f34005d0d1": [], "test.mattermost_analytics.not_null_fct_in_product_trial_requests_trial_request_id.f659583bd8": [], "test.mattermost_analytics.unique_fct_in_product_trial_requests_trial_request_id.9fbd72e76d": [], "test.mattermost_analytics.not_null_fct_in_product_trial_requests_name.a6e3998b54": [], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_name.f7ba7391b4": [], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_first_name.61d081e4d1": [], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_last_name.4df8b9bbfa": [], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_company_name.c0a530fc53": [], "test.mattermost_analytics.not_null_fct_in_product_trial_requests_normalized_email.eb16f6c556": [], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_in_product_trial_requests_normalized_email.ac0f1595df": [], "test.mattermost_analytics.valid_country_name.6fbe9ede7d": [], "test.mattermost_analytics.not_null_fct_cloud_trial_requests_email.04959c1093": [], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_cloud_trial_requests_email.2a1f09e63e": [], "test.mattermost_analytics.not_null_dim_labels_issue_id.0d48c79306": [], "test.mattermost_analytics.relationships_dim_labels_issue_id__issue_id__ref_fct_issues_daily_snapshot_.57348ef1cd": [], "test.mattermost_analytics.not_null_dim_labels_label.d6aeaf0feb": [], "test.mattermost_analytics.not_null_dim_projects_project_id.89ad1da4cd": [], "test.mattermost_analytics.unique_dim_projects_project_id.e50e806691": [], "test.mattermost_analytics.not_null_dim_projects_project_key.f57855f13a": [], "test.mattermost_analytics.unique_dim_projects_project_key.da23dabd87": [], "test.mattermost_analytics.not_null_dim_projects_name.4d3148dfcd": [], "test.mattermost_analytics.not_null_dim_fix_versions_issue_id.04e09cd6ab": [], "test.mattermost_analytics.relationships_dim_fix_versions_issue_id__issue_id__ref_fct_issues_daily_snapshot_.d3720e0e48": [], "test.mattermost_analytics.not_null_dim_fix_versions_fix_version.e2728d4a95": [], "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_fix_version.319e7c6c54": [], "test.mattermost_analytics.dbt_utils_not_empty_string_dim_fix_versions_semver.27b2d25b2f": [], "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_major__True__0.58d0dba64d": [], "test.mattermost_analytics.dbt_utils_accepted_range_dim_fix_versions_version_minor__True__0.3cf17aed97": [], "test.mattermost_analytics.accepted_values_dim_fix_versions_component__Mobile__Desktop__Playbooks__IR__Cloud__Apps__None.57b1839642": [], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_id.6614befb12": [], "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_id.e4e796ee3c": [], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_key.550a3a2782": [], "test.mattermost_analytics.unique_fct_issues_daily_snapshot_issue_key.82c0358848": [], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_project_id.21fd764871": [], "test.mattermost_analytics.relationships_fct_issues_daily_snapshot_project_id__project_id__ref_dim_projects_.1253039083": [], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_issue_type.207161b3fb": [], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_created_at.b9baeb692e": [], "test.mattermost_analytics.not_null_fct_issues_daily_snapshot_status.48103ead12": [], "test.mattermost_analytics.dbt_utils_accepted_range_fct_issues_daily_snapshot_lead_time_in_days__True__0.459aedc908": [], "test.mattermost_analytics.unique_fct_active_users_daily_server_id.519c8852e2": [], "test.mattermost_analytics.not_null_fct_active_users_daily_server_id.465868bd11": [], "test.mattermost_analytics.not_null_fct_active_users_activity_date.c37d7d834f": [], "test.mattermost_analytics.not_null_fct_active_users_server_id.c0ce7cd4df": [], "test.mattermost_analytics.not_null_fct_active_users_version_id.d60142a407": [], "test.mattermost_analytics.relationships_fct_active_users_version_id__version_id__ref_dim_version_.cd09a944f0": [], "test.mattermost_analytics.dbt_utils_unique_combination_of_columns_fct_active_users_activity_date__server_id.11070c5f62": [], "test.mattermost_analytics.unique_dim_daily_server_info_daily_server_id.53872931a3": [], "test.mattermost_analytics.not_null_dim_daily_server_info_daily_server_id.7c0492529e": [], "test.mattermost_analytics.not_null_dim_daily_server_info_server_id.5382822fe1": [], "test.mattermost_analytics.not_null_dim_daily_server_info_activity_date.866fd9a9bc": [], "test.mattermost_analytics.not_null_dim_daily_server_info_is_enterprise_ready.621908b517": [], "test.mattermost_analytics.dbt_utils_accepted_range_dim_daily_server_info_count_reported_versions__True__1.7c958d37ce": [], "test.mattermost_analytics.unique_dim_excludable_servers_server_id.b85f47447a": [], "test.mattermost_analytics.not_null_dim_excludable_servers_server_id.aef616d31b": [], "test.mattermost_analytics.not_null_dim_excludable_servers_reasons.999f332674": [], "test.mattermost_analytics.unique_dim_version_version_id.9f2fd8dc74": [], "test.mattermost_analytics.not_null_dim_version_version_id.9f0db9b187": [], "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_major__True__1.5a7485617b": [], "test.mattermost_analytics.dbt_utils_accepted_range_dim_version_version_minor__True__0.7db1746143": [], "test.mattermost_analytics.unique_fct_active_servers_daily_server_id.f0fc363852": [], "test.mattermost_analytics.not_null_fct_active_servers_daily_server_id.07b3c89b0a": [], "test.mattermost_analytics.not_null_fct_active_servers_activity_date.15608febf0": [], "test.mattermost_analytics.not_null_fct_active_servers_server_id.c2f396ab92": [], "test.mattermost_analytics.not_null_fct_active_servers_version_id.966736cb49": [], "test.mattermost_analytics.relationships_fct_active_servers_version_id__version_id__ref_dim_version_.ea048c1938": [], "test.mattermost_analytics.not_null_dim_server_info_server_id.0ed37f71b1": [], "test.mattermost_analytics.unique_dim_daily_server_config_daily_server_id.bfbcc51ef7": [], "test.mattermost_analytics.not_null_dim_daily_server_config_daily_server_id.cff3a76c02": [], "test.mattermost_analytics.not_null_fct_security_newsletter_email.8fc3783d85": [], "test.mattermost_analytics.dbt_utils_not_empty_string_fct_security_newsletter_email.77559cb2a1": [], "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_event_id.728087993f": [], "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.383c8ce206": [], "test.mattermost_analytics.unique_int_hacktoberboard_prod_aggregated_to_date_daily_event_id.ef5efaff8a": [], "test.mattermost_analytics.not_null_int_hacktoberboard_prod_aggregated_to_date_received_at_date.939163e77d": [], "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_event_id.8e7dd8d68d": [], "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_daily_event_id.1f6a46712c": [], "test.mattermost_analytics.unique_int_incident_response_prod_aggregated_to_date_daily_event_id.28f30025a9": [], "test.mattermost_analytics.not_null_int_incident_response_prod_aggregated_to_date_received_at_date.07770c56d4": [], "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_event_id.d4359db268": [], "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_daily_event_id.faca04c893": [], "test.mattermost_analytics.unique_int_mattermost_docs_aggregated_to_date_daily_event_id.7bb995acab": [], "test.mattermost_analytics.not_null_int_mattermost_docs_aggregated_to_date_received_at_date.99ff2ff98f": [], "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_event_id.75b97ed0f2": [], "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_daily_event_id.3768d17980": [], "test.mattermost_analytics.unique_int_mattermostcom_aggregated_to_date_daily_event_id.b5d3fa7a27": [], "test.mattermost_analytics.not_null_int_mattermostcom_aggregated_to_date_received_at_date.888b5fd3b1": [], "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_event_id.b76d49be23": [], "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_daily_event_id.74394ae81c": [], "test.mattermost_analytics.unique_int_mm_mobile_prod_aggregated_to_date_daily_event_id.e692839aa6": [], "test.mattermost_analytics.not_null_int_mm_mobile_prod_aggregated_to_date_received_at_date.87047c7370": [], "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_event_id.81b50c7fa9": [], "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2453761a7c": [], "test.mattermost_analytics.unique_int_mm_plugin_prod_aggregated_to_date_daily_event_id.2c157d82d6": [], "test.mattermost_analytics.not_null_int_mm_plugin_prod_aggregated_to_date_received_at_date.a483479092": [], "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_event_id.492c81fbba": [], "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.4939ff52af": [], "test.mattermost_analytics.unique_int_mm_telemetry_prod_aggregated_to_date_daily_event_id.8b436a04f2": [], "test.mattermost_analytics.not_null_int_mm_telemetry_prod_aggregated_to_date_received_at_date.eecc5be7b1": [], "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_event_id.5b8e58d398": [], "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.c3069760ea": [], "test.mattermost_analytics.unique_int_mm_telemetry_rc_aggregated_to_date_daily_event_id.485e5fb487": [], "test.mattermost_analytics.not_null_int_mm_telemetry_rc_aggregated_to_date_received_at_date.e7abc97692": [], "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_event_id.781d0d9b24": [], "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_daily_event_id.39de11fb92": [], "test.mattermost_analytics.unique_int_portal_prod_aggregated_to_date_daily_event_id.5b89262e22": [], "test.mattermost_analytics.not_null_int_portal_prod_aggregated_to_date_received_at_date.7ca390f308": [], "test.mattermost_analytics.not_null_int_events_aggregated_to_date_event_id.58cd167ac0": [], "test.mattermost_analytics.not_null_int_events_aggregated_to_date_daily_event_id.c207ec5bb5": [], "test.mattermost_analytics.unique_int_events_aggregated_to_date_daily_event_id.7785ba8b15": [], "test.mattermost_analytics.not_null_int_events_aggregated_to_date_received_at_date.e3a17f0a9d": [], "test.dbt_project_evaluator.valid_documentation_coverage.67ef7314a7": [], "test.dbt_project_evaluator.is_empty_fct_undocumented_models_.7c2f43109c": [], "test.dbt_project_evaluator.is_empty_fct_direct_join_to_source_.2ec67ec028": [], "test.dbt_project_evaluator.is_empty_fct_duplicate_sources_.642214de31": [], "test.dbt_project_evaluator.is_empty_fct_marts_or_intermediate_dependent_on_source_.c0abd5f00f": [], "test.dbt_project_evaluator.is_empty_fct_model_fanout_.a3ef403a95": [], "test.dbt_project_evaluator.is_empty_fct_multiple_sources_joined_.494f431817": [], "test.dbt_project_evaluator.is_empty_fct_rejoining_of_upstream_concepts_.c6b3625c7d": [], "test.dbt_project_evaluator.is_empty_fct_root_models_.ccb5a490f1": [], "test.dbt_project_evaluator.is_empty_fct_source_fanout_.45762bb722": [], "test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_marts_or_intermediate_.3aa45af51f": [], "test.dbt_project_evaluator.is_empty_fct_staging_dependent_on_staging_.bea47be3ca": [], "test.dbt_project_evaluator.is_empty_fct_unused_sources_.41456b9da8": [], "test.dbt_project_evaluator.is_empty_fct_exposure_parents_materializations_.5a21592422": [], "test.dbt_project_evaluator.is_empty_fct_hard_coded_references_.9f62f70113": [], "test.dbt_project_evaluator.valid_test_coverage.df03f31e09": [], "test.dbt_project_evaluator.is_empty_fct_missing_primary_key_tests_.4d10d48da0": [], "test.dbt_project_evaluator.valid_chained_views_dependencies.123bb34533": [], "test.dbt_project_evaluator.is_empty_fct_model_directories_.50098500db": [], "test.dbt_project_evaluator.is_empty_fct_model_naming_conventions_.a79bc0fbe2": [], "test.dbt_project_evaluator.is_empty_fct_source_directories_.3ec42bc19c": [], "test.dbt_project_evaluator.is_empty_fct_test_directories_.1c1db93433": [], "test.mattermost_analytics.source_not_null_cws_trial_requests_id.0a38db58ed": [], "test.mattermost_analytics.valid_bucket_names.93d440316e": [], "test.mattermost_analytics.source_not_null_cws_trial_requests_email.45a2e4f948": [], "test.mattermost_analytics.source_not_null_cws_trial_requests_serverid.2e0a97f5b3": [], "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_id.8b751dff4c": [], "test.mattermost_analytics.source_unique_mattermost_jira_issue_comments_id.40eec45a3e": [], "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_issueid.6741fae44f": [], "test.mattermost_analytics.source_unique_mattermost_version_release_dates_version.97e96eeef4": [], "test.mattermost_analytics.source_not_null_mattermost_version_release_dates_version.fb90ab39c4": [], "source.mattermost_analytics.mm_telemetry_rc.tracks": [], "source.mattermost_analytics.mm_telemetry_rc.event": ["model.mattermost_analytics.stg_mm_telemetry_rc__performance_events"], "source.mattermost_analytics.mm_telemetry_rc.pages": [], "source.mattermost_analytics.mm_telemetry_rc.identifies": [], "source.mattermost_analytics.mm_telemetry_rc.config_saml": [], "source.mattermost_analytics.mm_telemetry_rc.config_localization": [], "source.mattermost_analytics.mm_telemetry_rc.config_cluster": [], "source.mattermost_analytics.mm_telemetry_rc.config_compliance": [], "source.mattermost_analytics.mm_telemetry_rc.config_analytics": [], "source.mattermost_analytics.mm_telemetry_rc.config_ldap": [], "source.mattermost_analytics.mm_telemetry_rc.config_metrics": [], "source.mattermost_analytics.mm_telemetry_rc.config_elasticsearch": [], "source.mattermost_analytics.mm_telemetry_rc.config_nativeapp": [], "source.mattermost_analytics.mm_telemetry_rc.config_announcement": [], "source.mattermost_analytics.mm_telemetry_rc.config_privacy": [], "source.mattermost_analytics.mm_telemetry_rc.config_experimental": [], "source.mattermost_analytics.mm_telemetry_rc.config_support": [], "source.mattermost_analytics.mm_telemetry_rc.config_theme": [], "source.mattermost_analytics.mm_telemetry_rc.config_oauth": [], "source.mattermost_analytics.mm_telemetry_rc.config_file": [], "source.mattermost_analytics.mm_telemetry_rc.activity": [], "source.mattermost_analytics.mm_telemetry_rc.config_audit": [], "source.mattermost_analytics.mm_telemetry_rc.config_email": [], "source.mattermost_analytics.mm_telemetry_rc.config_notifications_log": [], "source.mattermost_analytics.mm_telemetry_rc.config_rate": [], "source.mattermost_analytics.mm_telemetry_rc.config_password": [], "source.mattermost_analytics.mm_telemetry_rc.config_team": [], "source.mattermost_analytics.mm_telemetry_rc.config_log": [], "source.mattermost_analytics.mm_telemetry_rc.config_service": [], "source.mattermost_analytics.mm_telemetry_rc.config_client_requirements": [], "source.mattermost_analytics.mm_telemetry_rc.config_sql": [], "source.mattermost_analytics.mm_telemetry_rc.config_data_retention": [], "source.mattermost_analytics.mm_telemetry_rc.config_guest_accounts": [], "source.mattermost_analytics.mm_telemetry_rc.config_message_export": [], "source.mattermost_analytics.mm_telemetry_rc.config_plugin": [], "source.mattermost_analytics.mm_telemetry_rc.config_display": [], "source.mattermost_analytics.mm_telemetry_rc.config_image_proxy": [], "source.mattermost_analytics.mm_telemetry_rc.server": [], "source.mattermost_analytics.mm_telemetry_rc.permissions_general": [], "source.mattermost_analytics.mm_telemetry_rc.config_bleve": [], "source.mattermost_analytics.mm_telemetry_rc.permissions_system_scheme": [], "source.mattermost_analytics.mm_telemetry_rc.elasticsearch": [], "source.mattermost_analytics.mm_telemetry_rc._groups": [], "source.mattermost_analytics.mm_telemetry_rc.channel_moderation": [], "source.mattermost_analytics.mm_telemetry_rc.config_export": [], "source.mattermost_analytics.mm_telemetry_rc.config_feature_flags": [], "source.mattermost_analytics.mm_telemetry_rc.plugins": [], "source.mattermost_analytics.mm_telemetry_rc.license": [], "source.mattermost_analytics.mm_telemetry_rc.products": [], "source.mattermost_analytics.mm_telemetry_rc.users": [], "source.mattermost_analytics.mm_telemetry_rc.warn_metrics": [], "source.mattermost_analytics.mm_telemetry_rc.permissions_team_schemes": [], "source.mattermost_analytics.mm_telemetry_rc.welcome_message_sent": [], "source.mattermost_analytics.mm_telemetry_rc.track_invite_email_resend": [], "source.mattermost_analytics.mm_telemetry_rc.inactive_server": [], "source.mattermost_analytics.mm_telemetry_rc.inactive_server_emails_sent": [], "source.mattermost_analytics.mm_telemetry_rc.rudder_discards": [], "source.mattermost_analytics.cws._sdc_rejected": [], "source.mattermost_analytics.cws.marketing": ["model.mattermost_analytics.stg_cws__marketing"], "source.mattermost_analytics.cws.trial_requests": ["model.mattermost_analytics.stg_cws__trial_requests", "test.mattermost_analytics.source_not_null_cws_trial_requests_email.45a2e4f948", "test.mattermost_analytics.source_not_null_cws_trial_requests_id.0a38db58ed", "test.mattermost_analytics.source_not_null_cws_trial_requests_serverid.2e0a97f5b3", "test.mattermost_analytics.test_trial_requests", "test.mattermost_analytics.valid_bucket_names.93d440316e"], "source.mattermost_analytics.mm_mobile_prod.action_channels_add_member": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_favorite": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_join": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_leave": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_remove_member": [], "source.mattermost_analytics.mm_mobile_prod.action_channels_unfavorite": [], "source.mattermost_analytics.mm_mobile_prod.action_posts_flag": [], "source.mattermost_analytics.mm_mobile_prod.action_posts_unflag": [], "source.mattermost_analytics.mm_mobile_prod.api_channel_get": [], "source.mattermost_analytics.mm_mobile_prod.api_channel_get_by_name_and_team_name": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_add_member": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_convert_to_private": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_create": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_create_direct": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_create_group": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_delete": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_patch": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_remove_member": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_unarchive": [], "source.mattermost_analytics.mm_mobile_prod.api_channels_update_privacy": [], "source.mattermost_analytics.mm_mobile_prod.api_files_upload": [], "source.mattermost_analytics.mm_mobile_prod.api_get_known_users": [], "source.mattermost_analytics.mm_mobile_prod.api_integrations_used": [], "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_button_clicked": [], "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_dialog_submitted": [], "source.mattermost_analytics.mm_mobile_prod.api_interactive_messages_menu_selected": [], "source.mattermost_analytics.mm_mobile_prod.api_post_set_unread_post": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_create": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_delete": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_get_after": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_get_before": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_get_flagged": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_get_pinned": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_patch": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_pin": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_replied": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_search": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_search_mention": [], "source.mattermost_analytics.mm_mobile_prod.api_posts_unpin": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_by_ids": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_by_usernames": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_in_channel": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_in_team": [], "source.mattermost_analytics.mm_mobile_prod.api_profiles_get_not_in_channel": [], "source.mattermost_analytics.mm_mobile_prod.api_reactions_delete": [], "source.mattermost_analytics.mm_mobile_prod.api_reactions_save": [], "source.mattermost_analytics.mm_mobile_prod.api_search_users": [], "source.mattermost_analytics.mm_mobile_prod.api_teams_get_team_by_name": [], "source.mattermost_analytics.mm_mobile_prod.api_teams_invite_members": [], "source.mattermost_analytics.mm_mobile_prod.api_teams_remove_members": [], "source.mattermost_analytics.mm_mobile_prod.api_users_login": [], "source.mattermost_analytics.mm_mobile_prod.api_users_logout": [], "source.mattermost_analytics.mm_mobile_prod.api_users_send_password_reset": [], "source.mattermost_analytics.mm_mobile_prod.api_users_set_default_profile_picture": [], "source.mattermost_analytics.mm_mobile_prod.api_users_update_channel_notifications": [], "source.mattermost_analytics.mm_mobile_prod.application_backgrounded": [], "source.mattermost_analytics.mm_mobile_prod.application_installed": [], "source.mattermost_analytics.mm_mobile_prod.application_opened": [], "source.mattermost_analytics.mm_mobile_prod.application_updated": [], "source.mattermost_analytics.mm_mobile_prod.complete_suggestion": [], "source.mattermost_analytics.mm_mobile_prod.get_suggestions_failed": [], "source.mattermost_analytics.mm_mobile_prod.get_suggestions_initiated": [], "source.mattermost_analytics.mm_mobile_prod.get_suggestions_success": [], "source.mattermost_analytics.mm_mobile_prod.identifies": [], "source.mattermost_analytics.mm_mobile_prod.rudder_discards": [], "source.mattermost_analytics.mm_mobile_prod.screens": [], "source.mattermost_analytics.mm_mobile_prod.tracks": [], "source.mattermost_analytics.mm_mobile_prod.users": [], "source.mattermost_analytics.mattermost_docs.feedback_submitted": [], "source.mattermost_analytics.mattermost_docs.pages": [], "source.mattermost_analytics.mattermost_docs.rudder_discards": [], "source.mattermost_analytics.mattermost_docs.tracks": [], "source.mattermost_analytics.mm_plugin_prod.apps_framework_call": [], "source.mattermost_analytics.mm_plugin_prod.apps_framework_install": [], "source.mattermost_analytics.mm_plugin_prod.apps_framework_oauth_complete": [], "source.mattermost_analytics.mm_plugin_prod.apps_framework_uninstall": [], "source.mattermost_analytics.mm_plugin_prod.github_stats": [], "source.mattermost_analytics.mm_plugin_prod.gitlab_stats": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_automatic_status_update": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_daily_summary_sent": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_user_authenticated": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_user_deauthenticated": [], "source.mattermost_analytics.mm_plugin_prod.mscalendar_welcome_flow_completion": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_connect": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_disconnect": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_duplicated": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_forced": [], "source.mattermost_analytics.mm_plugin_prod.msteamsmeetings_meeting_started": [], "source.mattermost_analytics.mm_plugin_prod.nps_nps_disable": [], "source.mattermost_analytics.mm_plugin_prod.nps_nps_feedback": [], "source.mattermost_analytics.mm_plugin_prod.nps_nps_score": [], "source.mattermost_analytics.mm_plugin_prod.rudder_discards": [], "source.mattermost_analytics.mm_plugin_prod.todo_accept_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_add_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_bump_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_change_issue_assignment": [], "source.mattermost_analytics.mm_plugin_prod.todo_command": [], "source.mattermost_analytics.mm_plugin_prod.todo_complete_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_daily_summary_sent": [], "source.mattermost_analytics.mm_plugin_prod.todo_edit_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_in": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_my": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_click_lhs_out": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_accept": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_complete": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_custom_post_remove": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_rhs_add": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_toggle_inbox": [], "source.mattermost_analytics.mm_plugin_prod.todo_frontend_toggle_my": [], "source.mattermost_analytics.mm_plugin_prod.todo_remove_issue": [], "source.mattermost_analytics.mm_plugin_prod.todo_send_issue": [], "source.mattermost_analytics.mm_plugin_prod.tracks": [], "source.mattermost_analytics.mm_plugin_prod.zoom_connect": [], "source.mattermost_analytics.mm_plugin_prod.zoom_disconnect": [], "source.mattermost_analytics.mm_plugin_prod.zoom_meeting_duplicated": [], "source.mattermost_analytics.mm_plugin_prod.zoom_meeting_forced": [], "source.mattermost_analytics.mm_plugin_prod.zoom_oauth_mode_change": [], "source.mattermost_analytics.mm_plugin_prod.zoom_start_meeting": [], "source.mattermost_analytics.portal_prod.click_access_workspace": [], "source.mattermost_analytics.portal_prod.click_compare_plan": [], "source.mattermost_analytics.portal_prod.click_connect_workspace": [], "source.mattermost_analytics.portal_prod.click_contact_sales": [], "source.mattermost_analytics.portal_prod.click_contact_support": [], "source.mattermost_analytics.portal_prod.click_continue_button": [], "source.mattermost_analytics.portal_prod.click_create_workspace": [], "source.mattermost_analytics.portal_prod.click_edit_url_button": [], "source.mattermost_analytics.portal_prod.click_goto_exisiting_workspace": [], "source.mattermost_analytics.portal_prod.click_join_team_workspace_link": [], "source.mattermost_analytics.portal_prod.click_join_team_workspace_link_b": [], "source.mattermost_analytics.portal_prod.click_login": [], "source.mattermost_analytics.portal_prod.click_login_billing": [], "source.mattermost_analytics.portal_prod.click_logout": [], "source.mattermost_analytics.portal_prod.click_next": [], "source.mattermost_analytics.portal_prod.click_next_b": [], "source.mattermost_analytics.portal_prod.click_open_payment_feedback_form_modal": [], "source.mattermost_analytics.portal_prod.click_password_continue_button": [], "source.mattermost_analytics.portal_prod.click_privacy_policy": [], "source.mattermost_analytics.portal_prod.click_privacy_policy_b": [], "source.mattermost_analytics.portal_prod.click_resend_code": [], "source.mattermost_analytics.portal_prod.click_self_managed_trial_link": [], "source.mattermost_analytics.portal_prod.click_self_managed_trial_link_b": [], "source.mattermost_analytics.portal_prod.click_signup": [], "source.mattermost_analytics.portal_prod.click_signup_password_continue_button": [], "source.mattermost_analytics.portal_prod.click_start_trial": [], "source.mattermost_analytics.portal_prod.click_status_page": [], "source.mattermost_analytics.portal_prod.click_terms": [], "source.mattermost_analytics.portal_prod.click_terms_b": [], "source.mattermost_analytics.portal_prod.click_unknown_url": [], "source.mattermost_analytics.portal_prod.clicked_contact_us_link": [], "source.mattermost_analytics.portal_prod.clicked_faq_link": [], "source.mattermost_analytics.portal_prod.clicked_terms_checkbox": [], "source.mattermost_analytics.portal_prod.cloud_contact_us_submitted": [], "source.mattermost_analytics.portal_prod.cloud_signup_a_page_visit": [], "source.mattermost_analytics.portal_prod.cloud_signup_b_page_visit": [], "source.mattermost_analytics.portal_prod.cloud_signup_error": [], "source.mattermost_analytics.portal_prod.cloud_signup_page_visit": [], "source.mattermost_analytics.portal_prod.cloud_signup_redirect_to_mattermost": [], "source.mattermost_analytics.portal_prod.cloud_signup_success": [], "source.mattermost_analytics.portal_prod.cloud_subscription_completed": [], "source.mattermost_analytics.portal_prod.deployment_option_select": [], "source.mattermost_analytics.portal_prod.email_address_already_associated_with_an_account": [], "source.mattermost_analytics.portal_prod.enter_invalid_code": [], "source.mattermost_analytics.portal_prod.enter_invalid_code_too_many_times": [], "source.mattermost_analytics.portal_prod.enter_valid_code": [], "source.mattermost_analytics.portal_prod.identifies": [], "source.mattermost_analytics.portal_prod.non_business_email_blocked": [], "source.mattermost_analytics.portal_prod.non_business_email_blocked_b": [], "source.mattermost_analytics.portal_prod.page_load": [], "source.mattermost_analytics.portal_prod.pages": [], "source.mattermost_analytics.portal_prod.pageview_admin_password": [], "source.mattermost_analytics.portal_prod.pageview_cloud_landing_page": [], "source.mattermost_analytics.portal_prod.pageview_create_signup_password": [], "source.mattermost_analytics.portal_prod.pageview_create_workspace": [], "source.mattermost_analytics.portal_prod.pageview_deployment_selection": [], "source.mattermost_analytics.portal_prod.pageview_getting_started": [], "source.mattermost_analytics.portal_prod.pageview_verify_email": [], "source.mattermost_analytics.portal_prod.password_validation_error": [], "source.mattermost_analytics.portal_prod.purchase_complete_create_portal_account": [], "source.mattermost_analytics.portal_prod.purchase_fail_clicked_try_again": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_enterprise": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_enterprise_e_10": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_professional": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_self_hosted_enterprise": [], "source.mattermost_analytics.portal_prod.renew_license_form_choose_self_hosted_professional": [], "source.mattermost_analytics.portal_prod.renew_license_form_clicked_compare_plans": [], "source.mattermost_analytics.portal_prod.renew_license_form_clicked_complete_purchase": [], "source.mattermost_analytics.portal_prod.rudder_discards": [], "source.mattermost_analytics.portal_prod.see_how_billing_works": [], "source.mattermost_analytics.portal_prod.signup_flow_email_invalidated": [], "source.mattermost_analytics.portal_prod.signup_flow_email_validated": [], "source.mattermost_analytics.portal_prod.srv_oauth_complete_success": [], "source.mattermost_analytics.portal_prod.stripe_confirm_card_error": [], "source.mattermost_analytics.portal_prod.subscription_purchased": [], "source.mattermost_analytics.portal_prod.successful_url_redirect": [], "source.mattermost_analytics.portal_prod.tracks": [], "source.mattermost_analytics.portal_prod.unknown_url": [], "source.mattermost_analytics.portal_prod.users": [], "source.mattermost_analytics.portal_prod.utm_params": [], "source.mattermost_analytics.portal_prod.workspace_name_taken": [], "source.mattermost_analytics.portal_prod.workspace_name_unavailable": [], "source.mattermost_analytics.portal_prod.workspace_name_valid": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_click_open_workspace": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_ended": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_error": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_error_unknown": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_in_progress": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_started": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_timeout": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_ended": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_enterfullscreen": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_paused": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_play": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_resume": [], "source.mattermost_analytics.portal_prod.workspace_provisioning_video_unmuted": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_ended": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_error": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_error_unknown": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_no_dns": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_not_needed": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_started": [], "source.mattermost_analytics.portal_prod.workspace_reactivation_timeout": [], "source.mattermost_analytics.mattermost_jira._sdc_rejected": [], "source.mattermost_analytics.mattermost_jira.changelogs": [], "source.mattermost_analytics.mattermost_jira.issue_comments": ["test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_id.8b751dff4c", "test.mattermost_analytics.source_not_null_mattermost_jira_issue_comments_issueid.6741fae44f", "test.mattermost_analytics.source_unique_mattermost_jira_issue_comments_id.40eec45a3e"], "source.mattermost_analytics.mattermost_jira.issue_transitions": [], "source.mattermost_analytics.mattermost_jira.issues": ["model.mattermost_analytics.stg_mattermost_jira__issues"], "source.mattermost_analytics.mattermost_jira.issues_expanded": [], "source.mattermost_analytics.mattermost_jira.project_types": [], "source.mattermost_analytics.mattermost_jira.projects": ["model.mattermost_analytics.stg_mattermost_jira__projects"], "source.mattermost_analytics.mattermost_jira.resolutions": [], "source.mattermost_analytics.mattermost_jira.roles": [], "source.mattermost_analytics.mattermost_jira.users": [], "source.mattermost_analytics.mattermost_jira.versions": [], "source.mattermost_analytics.mattermost_jira.worklogs": [], "source.mattermost_analytics.incident_response_prod.add_checklist_item": [], "source.mattermost_analytics.incident_response_prod.change_commander": [], "source.mattermost_analytics.incident_response_prod.change_stage": [], "source.mattermost_analytics.incident_response_prod.channel_action": [], "source.mattermost_analytics.incident_response_prod.check_checklist_item": [], "source.mattermost_analytics.incident_response_prod.checklists": [], "source.mattermost_analytics.incident_response_prod.create_incident": [], "source.mattermost_analytics.incident_response_prod.create_playbook": [], "source.mattermost_analytics.incident_response_prod.delete_playbook": [], "source.mattermost_analytics.incident_response_prod.end_incident": [], "source.mattermost_analytics.incident_response_prod.frontend": [], "source.mattermost_analytics.incident_response_prod.incident": [], "source.mattermost_analytics.incident_response_prod.lhs_category": [], "source.mattermost_analytics.incident_response_prod.modify_state_checklist_item": [], "source.mattermost_analytics.incident_response_prod.move_checklist_item": [], "source.mattermost_analytics.incident_response_prod.notify_admins": [], "source.mattermost_analytics.incident_response_prod.pages": [], "source.mattermost_analytics.incident_response_prod.playbook": [], "source.mattermost_analytics.incident_response_prod.playbookrun_action": [], "source.mattermost_analytics.incident_response_prod.playbookrun_create": [], "source.mattermost_analytics.incident_response_prod.playbookrun_follow": [], "source.mattermost_analytics.incident_response_prod.playbookrun_leave": [], "source.mattermost_analytics.incident_response_prod.playbookrun_participate": [], "source.mattermost_analytics.incident_response_prod.playbookrun_unfollow": [], "source.mattermost_analytics.incident_response_prod.playbookrun_update_actions": [], "source.mattermost_analytics.incident_response_prod.remove_checklist_item": [], "source.mattermost_analytics.incident_response_prod.rename_checklist_item": [], "source.mattermost_analytics.incident_response_prod.restart_incident": [], "source.mattermost_analytics.incident_response_prod.rudder_discards": [], "source.mattermost_analytics.incident_response_prod.run_checklist_item_slash_command": [], "source.mattermost_analytics.incident_response_prod.set_assignee": [], "source.mattermost_analytics.incident_response_prod.settings": [], "source.mattermost_analytics.incident_response_prod.start_trial": [], "source.mattermost_analytics.incident_response_prod.taskactions_action_executed": [], "source.mattermost_analytics.incident_response_prod.taskactions_triggered": [], "source.mattermost_analytics.incident_response_prod.taskactions_updated": [], "source.mattermost_analytics.incident_response_prod.tasks": [], "source.mattermost_analytics.incident_response_prod.tracks": [], "source.mattermost_analytics.incident_response_prod.uncheck_checklist_item": [], "source.mattermost_analytics.incident_response_prod.update_playbook": [], "source.mattermost_analytics.diagnostics.log_entries": ["model.mattermost_analytics.stg_diagnostics__log_entries"], "source.mattermost_analytics.salesforce._sdc_rejected": [], "source.mattermost_analytics.salesforce.account": ["model.mattermost_analytics.stg_salesforce__account"], "source.mattermost_analytics.salesforce.billing_entity__c": [], "source.mattermost_analytics.salesforce.campaign": ["model.mattermost_analytics.stg_salesforce__campaign"], "source.mattermost_analytics.salesforce.campaignmember": ["model.mattermost_analytics.stg_salesforce__campaign_member"], "source.mattermost_analytics.salesforce.contact": ["model.mattermost_analytics.stg_salesforce__contact"], "source.mattermost_analytics.salesforce.contract": [], "source.mattermost_analytics.salesforce.customer_onboarding__c": [], "source.mattermost_analytics.salesforce.customer_reference__c": [], "source.mattermost_analytics.salesforce.customer_risk__c": [], "source.mattermost_analytics.salesforce.customer_risk__history": [], "source.mattermost_analytics.salesforce.event": [], "source.mattermost_analytics.salesforce.lead": ["model.mattermost_analytics.stg_salesforce__lead"], "source.mattermost_analytics.salesforce.netsuite_conn__netsuite_financial__c": [], "source.mattermost_analytics.salesforce.opportunity": ["model.mattermost_analytics.stg_salesforce__opportunity"], "source.mattermost_analytics.salesforce.opportunity_sg": [], "source.mattermost_analytics.salesforce.opportunitycontactrole": [], "source.mattermost_analytics.salesforce.opportunityfieldhistory": [], "source.mattermost_analytics.salesforce.opportunityhistory": [], "source.mattermost_analytics.salesforce.opportunitylineitem": ["model.mattermost_analytics.stg_salesforce__opportunity_line_item"], "source.mattermost_analytics.salesforce.pricebookentry": [], "source.mattermost_analytics.salesforce.product2": [], "source.mattermost_analytics.salesforce.sbqq__quote__c": [], "source.mattermost_analytics.salesforce.sbqq__quoteline__c": [], "source.mattermost_analytics.salesforce.task": [], "source.mattermost_analytics.salesforce.territory_mapping__c": [], "source.mattermost_analytics.salesforce.true_up_reports__c": [], "source.mattermost_analytics.salesforce.user": ["model.mattermost_analytics.stg_salesforce__user"], "source.mattermost_analytics.salesforce.userrole": [], "source.mattermost_analytics.mattermost.version_release_dates": ["model.mattermost_analytics.stg_mattermost__version_release_dates", "test.mattermost_analytics.source_not_null_mattermost_version_release_dates_version.fb90ab39c4", "test.mattermost_analytics.source_unique_mattermost_version_release_dates_version.97e96eeef4"], "source.mattermost_analytics.mattermost2.activity": ["model.mattermost_analytics.stg_mattermost2__activity"], "source.mattermost_analytics.mattermost2.channel_moderation": [], "source.mattermost_analytics.mattermost2.config_analytics": [], "source.mattermost_analytics.mattermost2.config_announcement": [], "source.mattermost_analytics.mattermost2.config_audit": [], "source.mattermost_analytics.mattermost2.config_bleve": [], "source.mattermost_analytics.mattermost2.config_client_requirements": [], "source.mattermost_analytics.mattermost2.config_cluster": [], "source.mattermost_analytics.mattermost2.config_compliance": [], "source.mattermost_analytics.mattermost2.config_data_retention": [], "source.mattermost_analytics.mattermost2.config_display": [], "source.mattermost_analytics.mattermost2.config_elasticsearch": [], "source.mattermost_analytics.mattermost2.config_email": [], "source.mattermost_analytics.mattermost2.config_experimental": [], "source.mattermost_analytics.mattermost2.config_extension": [], "source.mattermost_analytics.mattermost2.config_file": [], "source.mattermost_analytics.mattermost2.config_guest_accounts": [], "source.mattermost_analytics.mattermost2.config_image_proxy": [], "source.mattermost_analytics.mattermost2.config_ldap": [], "source.mattermost_analytics.mattermost2.config_localization": [], "source.mattermost_analytics.mattermost2.config_log": [], "source.mattermost_analytics.mattermost2.config_message_export": [], "source.mattermost_analytics.mattermost2.config_metrics": [], "source.mattermost_analytics.mattermost2.config_nativeapp": [], "source.mattermost_analytics.mattermost2.config_notifications_log": [], "source.mattermost_analytics.mattermost2.config_oauth": ["model.mattermost_analytics.stg_mattermost2__oauth"], "source.mattermost_analytics.mattermost2.config_password": [], "source.mattermost_analytics.mattermost2.config_plugin": [], "source.mattermost_analytics.mattermost2.config_privacy": [], "source.mattermost_analytics.mattermost2.config_rate": [], "source.mattermost_analytics.mattermost2.config_rupport": [], "source.mattermost_analytics.mattermost2.config_saml": [], "source.mattermost_analytics.mattermost2.config_service": [], "source.mattermost_analytics.mattermost2.config_sql": [], "source.mattermost_analytics.mattermost2.config_support": [], "source.mattermost_analytics.mattermost2.config_team": [], "source.mattermost_analytics.mattermost2.config_theme": [], "source.mattermost_analytics.mattermost2.config_timezone": [], "source.mattermost_analytics.mattermost2.config_webrtc": [], "source.mattermost_analytics.mattermost2.elasticsearch": [], "source.mattermost_analytics.mattermost2.event": [], "source.mattermost_analytics.mattermost2.event_mobile": [], "source.mattermost_analytics.mattermost2.groups": [], "source.mattermost_analytics.mattermost2.identifies": [], "source.mattermost_analytics.mattermost2.license": [], "source.mattermost_analytics.mattermost2.pages": [], "source.mattermost_analytics.mattermost2.permissions_general": [], "source.mattermost_analytics.mattermost2.permissions_system_scheme": [], "source.mattermost_analytics.mattermost2.permissions_team_schemes": [], "source.mattermost_analytics.mattermost2.plugins": [], "source.mattermost_analytics.mattermost2.server": ["model.mattermost_analytics.stg_mattermost2__server"], "source.mattermost_analytics.mattermost2.tracks": [], "source.mattermost_analytics.mattermost2.users": [], "source.mattermost_analytics.mm_telemetry_prod._groups": [], "source.mattermost_analytics.mm_telemetry_prod.activity": ["model.mattermost_analytics.stg_mm_telemetry_prod__activity"], "source.mattermost_analytics.mm_telemetry_prod.blocks": [], "source.mattermost_analytics.mm_telemetry_prod.boards": [], "source.mattermost_analytics.mm_telemetry_prod.channel_moderation": [], "source.mattermost_analytics.mm_telemetry_prod.config": [], "source.mattermost_analytics.mm_telemetry_prod.config_analytics": [], "source.mattermost_analytics.mm_telemetry_prod.config_announcement": [], "source.mattermost_analytics.mm_telemetry_prod.config_audit": [], "source.mattermost_analytics.mm_telemetry_prod.config_bleve": [], "source.mattermost_analytics.mm_telemetry_prod.config_client_requirements": [], "source.mattermost_analytics.mm_telemetry_prod.config_cluster": [], "source.mattermost_analytics.mm_telemetry_prod.config_compliance": [], "source.mattermost_analytics.mm_telemetry_prod.config_data_retention": [], "source.mattermost_analytics.mm_telemetry_prod.config_display": [], "source.mattermost_analytics.mm_telemetry_prod.config_elasticsearch": [], "source.mattermost_analytics.mm_telemetry_prod.config_email": [], "source.mattermost_analytics.mm_telemetry_prod.config_experimental": [], "source.mattermost_analytics.mm_telemetry_prod.config_export": [], "source.mattermost_analytics.mm_telemetry_prod.config_feature_flags": [], "source.mattermost_analytics.mm_telemetry_prod.config_file": [], "source.mattermost_analytics.mm_telemetry_prod.config_guest_accounts": [], "source.mattermost_analytics.mm_telemetry_prod.config_image_proxy": [], "source.mattermost_analytics.mm_telemetry_prod.config_ldap": [], "source.mattermost_analytics.mm_telemetry_prod.config_localization": [], "source.mattermost_analytics.mm_telemetry_prod.config_log": [], "source.mattermost_analytics.mm_telemetry_prod.config_message_export": [], "source.mattermost_analytics.mm_telemetry_prod.config_metrics": [], "source.mattermost_analytics.mm_telemetry_prod.config_nativeapp": [], "source.mattermost_analytics.mm_telemetry_prod.config_notifications_log": [], "source.mattermost_analytics.mm_telemetry_prod.config_oauth": ["model.mattermost_analytics.stg_mm_telemetry_prod__oauth"], "source.mattermost_analytics.mm_telemetry_prod.config_password": [], "source.mattermost_analytics.mm_telemetry_prod.config_plugin": [], "source.mattermost_analytics.mm_telemetry_prod.config_privacy": [], "source.mattermost_analytics.mm_telemetry_prod.config_rate": [], "source.mattermost_analytics.mm_telemetry_prod.config_saml": [], "source.mattermost_analytics.mm_telemetry_prod.config_service": [], "source.mattermost_analytics.mm_telemetry_prod.config_sql": [], "source.mattermost_analytics.mm_telemetry_prod.config_support": [], "source.mattermost_analytics.mm_telemetry_prod.config_team": [], "source.mattermost_analytics.mm_telemetry_prod.config_theme": [], "source.mattermost_analytics.mm_telemetry_prod.elasticsearch": [], "source.mattermost_analytics.mm_telemetry_prod.event": ["model.mattermost_analytics.stg_mm_telemetry_prod__performance_events"], "source.mattermost_analytics.mm_telemetry_prod.identifies": [], "source.mattermost_analytics.mm_telemetry_prod.inactive_server": [], "source.mattermost_analytics.mm_telemetry_prod.inactive_server_emails_sent": [], "source.mattermost_analytics.mm_telemetry_prod.license": [], "source.mattermost_analytics.mm_telemetry_prod.pages": [], "source.mattermost_analytics.mm_telemetry_prod.permissions_general": [], "source.mattermost_analytics.mm_telemetry_prod.permissions_system_scheme": [], "source.mattermost_analytics.mm_telemetry_prod.permissions_team_schemes": [], "source.mattermost_analytics.mm_telemetry_prod.plugins": [], "source.mattermost_analytics.mm_telemetry_prod.products": [], "source.mattermost_analytics.mm_telemetry_prod.rudder_discards": [], "source.mattermost_analytics.mm_telemetry_prod.server": ["model.mattermost_analytics.stg_mm_telemetry_prod__server"], "source.mattermost_analytics.mm_telemetry_prod.teams": [], "source.mattermost_analytics.mm_telemetry_prod.track_invite_email_resend": [], "source.mattermost_analytics.mm_telemetry_prod.tracks": [], "source.mattermost_analytics.mm_telemetry_prod.users": [], "source.mattermost_analytics.mm_telemetry_prod.warn_metrics": [], "source.mattermost_analytics.mm_telemetry_prod.welcome_message_sent": [], "source.mattermost_analytics.mattermostcom.aliases": [], "source.mattermost_analytics.mattermostcom.pages": [], "source.mattermost_analytics.mattermostcom.identifies": [], "source.mattermost_analytics.mattermostcom.users": [], "source.mattermost_analytics.mattermostcom.marketo_form_submit": [], "source.mattermost_analytics.mattermostcom.tracks": [], "source.mattermost_analytics.mattermostcom.groups": [], "source.mattermost_analytics.mattermostcom.free_trial_clicked": [], "source.mattermost_analytics.mattermostcom.rudder_discards": [], "source.mattermost_analytics.mattermostcom.screens": [], "source.mattermost_analytics.hacktoberboard_prod.activity": [], "source.mattermost_analytics.hacktoberboard_prod.blocks": [], "source.mattermost_analytics.hacktoberboard_prod.boards": [], "source.mattermost_analytics.hacktoberboard_prod.config": [], "source.mattermost_analytics.hacktoberboard_prod.event": [], "source.mattermost_analytics.hacktoberboard_prod.identifies": [], "source.mattermost_analytics.hacktoberboard_prod.pages": [], "source.mattermost_analytics.hacktoberboard_prod.rudder_discards": [], "source.mattermost_analytics.hacktoberboard_prod.server": [], "source.mattermost_analytics.hacktoberboard_prod.teams": [], "source.mattermost_analytics.hacktoberboard_prod.tracks": [], "source.mattermost_analytics.hacktoberboard_prod.users": [], "source.mattermost_analytics.hacktoberboard_prod.workspaces": [], "source.mattermost_analytics.stripe._sdc_rejected": [], "source.mattermost_analytics.stripe.balance_transactions": [], "source.mattermost_analytics.stripe.charges": [], "source.mattermost_analytics.stripe.coupons": [], "source.mattermost_analytics.stripe.customers": ["model.mattermost_analytics.stg_stripe__customers"], "source.mattermost_analytics.stripe.disputes": [], "source.mattermost_analytics.stripe.invoice_items": [], "source.mattermost_analytics.stripe.invoice_line_items": ["model.mattermost_analytics.stg_stripe__invoice_line_items"], "source.mattermost_analytics.stripe.invoices": ["model.mattermost_analytics.stg_stripe__invoices"], "source.mattermost_analytics.stripe.payment_intents": [], "source.mattermost_analytics.stripe.payout_transactions": [], "source.mattermost_analytics.stripe.payouts": [], "source.mattermost_analytics.stripe.products": ["model.mattermost_analytics.stg_stripe__products"], "source.mattermost_analytics.stripe.subscription_items": ["model.mattermost_analytics.stg_stripe__subscription_items"], "source.mattermost_analytics.stripe.subscriptions": ["model.mattermost_analytics.stg_stripe__subscriptions"], "exposure.mattermost_analytics.community_tracks_explore": [], "exposure.mattermost_analytics.event_registry_dashboard": []}, "group_map": {}, "saved_queries": {}, "semantic_models": {}}